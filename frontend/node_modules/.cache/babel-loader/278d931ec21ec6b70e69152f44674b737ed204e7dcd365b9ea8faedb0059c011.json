{"ast":null,"code":"import t, { useRef as a, useCallback as e, useEffect as r } from \"react\";\nfunction i(t, a) {\n  (null == a || a > t.length) && (a = t.length);\n  for (var e = 0, r = Array(a); e < a; e++) r[e] = t[e];\n  return r;\n}\nfunction o(t, a, e) {\n  return (a = function (t) {\n    var a = function (t, a) {\n      if (\"object\" != typeof t || !t) return t;\n      var e = t[Symbol.toPrimitive];\n      if (void 0 !== e) {\n        var r = e.call(t, a || \"default\");\n        if (\"object\" != typeof r) return r;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n      }\n      return (\"string\" === a ? String : Number)(t);\n    }(t, \"string\");\n    return \"symbol\" == typeof a ? a : a + \"\";\n  }(a)) in t ? Object.defineProperty(t, a, {\n    value: e,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : t[a] = e, t;\n}\nfunction n(t, a) {\n  var e = Object.keys(t);\n  if (Object.getOwnPropertySymbols) {\n    var r = Object.getOwnPropertySymbols(t);\n    a && (r = r.filter(function (a) {\n      return Object.getOwnPropertyDescriptor(t, a).enumerable;\n    })), e.push.apply(e, r);\n  }\n  return e;\n}\nfunction h(t) {\n  for (var a = 1; a < arguments.length; a++) {\n    var e = null != arguments[a] ? arguments[a] : {};\n    a % 2 ? n(Object(e), !0).forEach(function (a) {\n      o(t, a, e[a]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(e)) : n(Object(e)).forEach(function (a) {\n      Object.defineProperty(t, a, Object.getOwnPropertyDescriptor(e, a));\n    });\n  }\n  return t;\n}\nfunction l(t, a) {\n  return function (t) {\n    if (Array.isArray(t)) return t;\n  }(t) || function (t, a) {\n    var e = null == t ? null : \"undefined\" != typeof Symbol && t[Symbol.iterator] || t[\"@@iterator\"];\n    if (null != e) {\n      var r,\n        i,\n        o,\n        n,\n        h = [],\n        l = !0,\n        d = !1;\n      try {\n        if (o = (e = e.call(t)).next, 0 === a) {\n          if (Object(e) !== e) return;\n          l = !1;\n        } else for (; !(l = (r = o.call(e)).done) && (h.push(r.value), h.length !== a); l = !0);\n      } catch (t) {\n        d = !0, i = t;\n      } finally {\n        try {\n          if (!l && null != e.return && (n = e.return(), Object(n) !== n)) return;\n        } finally {\n          if (d) throw i;\n        }\n      }\n      return h;\n    }\n  }(t, a) || function (t, a) {\n    if (t) {\n      if (\"string\" == typeof t) return i(t, a);\n      var e = {}.toString.call(t).slice(8, -1);\n      return \"Object\" === e && t.constructor && (e = t.constructor.name), \"Map\" === e || \"Set\" === e ? Array.from(t) : \"Arguments\" === e || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e) ? i(t, a) : void 0;\n    }\n  }(t, a) || function () {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }();\n}\nvar d = function (t, a) {\n    for (var e = [], r = 0; r < 150; r++) e.push({\n      x: Math.random() * t.width,\n      y: Math.random() * t.height,\n      radius: 2 * Math.random(),\n      vx: Math.floor(50 * Math.random()) - 25,\n      vy: Math.floor(50 * Math.random()) - 25,\n      twinkle: Math.random()\n    });\n    return function () {\n      a.fillStyle = \"rgba(15, 23, 42, 0.1)\", a.fillRect(0, 0, t.width, t.height), a.fillStyle = \"#FFF\", e.forEach(function (e) {\n        e.twinkle += .02;\n        var r = Math.abs(Math.sin(e.twinkle));\n        a.beginPath(), a.arc(e.x, e.y, e.radius, 0, 2 * Math.PI), a.fillStyle = \"rgba(255, 255, 255, \".concat(r, \")\"), a.fill(), e.x += e.vx / 60, e.y += e.vy / 60, (e.x < 0 || e.x > t.width) && (e.vx = -e.vx), (e.y < 0 || e.y > t.height) && (e.vy = -e.vy);\n      });\n    };\n  },\n  c = function (t, a) {\n    for (var e = [], r = 0; r < 75; r++) e.push({\n      x: Math.random() * t.width,\n      y: Math.random() * t.height,\n      radius: 30 * Math.random() + 5,\n      speed: .7 * Math.random() + .1,\n      color: \"hsla(\".concat(360 * Math.random(), \", 70%, 60%, 0.6)\")\n    });\n    return function () {\n      a.fillStyle = \"rgba(30, 41, 59, 0.1)\", a.fillRect(0, 0, t.width, t.height), e.forEach(function (e) {\n        a.beginPath(), a.arc(e.x, e.y, e.radius, 0, 2 * Math.PI), a.fillStyle = e.color, a.fill(), a.strokeStyle = \"rgba(255, 255, 255, 0.3)\", a.stroke(), e.y -= e.speed, e.x += .5 * Math.sin(.03 * e.y), e.y + e.radius < 0 && (e.y = t.height + e.radius, e.x = Math.random() * t.width);\n      });\n    };\n  },\n  f = function (t, a) {\n    var e = 0;\n    return function () {\n      e += .01;\n      var r = a.createLinearGradient(0, 0, t.width, t.height);\n      r.addColorStop(0, \"hsl(\".concat(10 * e % 360, \", 70%, 50%)\")), r.addColorStop(1, \"hsl(\".concat((10 * e + 180) % 360, \", 70%, 50%)\")), a.fillStyle = r, a.fillRect(0, 0, t.width, t.height);\n      for (var i = 0; i < 7; i++) {\n        a.beginPath(), a.moveTo(0, .15 * t.height * i + 30 * Math.sin(e + i));\n        for (var o = 0; o < t.width; o += 10) a.lineTo(o, .15 * t.height * i + 30 * Math.sin(e + i + .01 * o));\n        a.strokeStyle = \"rgba(255, 255, 255, \".concat(.1 - .01 * i, \")\"), a.lineWidth = 2, a.stroke();\n      }\n    };\n  },\n  s = function (t, a) {\n    for (var e = [], r = 0; r < 150; r++) e.push({\n      x: Math.random() * t.width,\n      y: Math.random() * t.height,\n      radius: 3 * Math.random() + 1,\n      vx: 1.5 * Math.random() - .75,\n      vy: 1.5 * Math.random() - .75,\n      color: \"hsl(\".concat(360 * Math.random(), \", 70%, 70%)\")\n    });\n    return function () {\n      a.fillStyle = \"rgba(15, 23, 42, 0.1)\", a.fillRect(0, 0, t.width, t.height), e.forEach(function (e) {\n        e.x += e.vx, e.y += e.vy, (e.x < 0 || e.x > t.width) && (e.vx *= -1), (e.y < 0 || e.y > t.height) && (e.vy *= -1), a.beginPath(), a.arc(e.x, e.y, e.radius, 0, 2 * Math.PI), a.fillStyle = e.color, a.fill();\n      });\n      for (var r = 0; r < e.length; r++) for (var i = r + 1; i < e.length; i++) {\n        var o = e[r].x - e[i].x,\n          n = e[r].y - e[i].y,\n          h = Math.sqrt(o * o + n * n);\n        h < 120 && (a.beginPath(), a.moveTo(e[r].x, e[r].y), a.lineTo(e[i].x, e[i].y), a.strokeStyle = \"rgba(255, 255, 255, \".concat(1 - h / 120, \")\"), a.lineWidth = .5, a.stroke());\n      }\n    };\n  },\n  g = function (t, a) {\n    var e = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1e-4,\n      r = function (t, a) {\n        for (var e = [], r = 0; r < a; r++) {\n          var i = Math.random() * t.width * .4,\n            o = Math.random() * Math.PI * 2;\n          e.push({\n            x: Math.cos(o) * i,\n            y: Math.sin(o) * i,\n            radius: 1.5 * Math.random() + .5,\n            color: \"hsl(\".concat(60 * Math.random() + 200, \", 80%, 70%)\"),\n            angle: o,\n            distance: i\n          });\n        }\n        return e;\n      }(t, 2e3),\n      i = 0;\n    return function () {\n      a.fillStyle = \"rgba(10, 10, 30, 0.1)\", a.fillRect(0, 0, t.width, t.height), a.save(), a.translate(t.width / 2, t.height / 2), a.rotate(i), function (t, a, e, r) {\n        a.forEach(function (a) {\n          var e = Math.cos(a.angle) * a.distance,\n            i = Math.sin(a.angle) * a.distance;\n          t.beginPath(), t.arc(e, i, a.radius, 0, 2 * Math.PI), t.fillStyle = a.color, t.fill(), a.angle += r / (8e-5 * a.distance);\n        });\n      }(a, r, 0, e), a.restore(), i += e;\n    };\n  },\n  y = function (t, a) {\n    var e = 0,\n      r = [\"#FF0000\", \"#FF7F00\", \"#FFFF00\", \"#00FF00\", \"#0000FF\", \"#4B0082\", \"#8B00FF\"];\n    return function () {\n      a.fillStyle = \"rgba(0, 0, 0, 0.05)\", a.fillRect(0, 0, t.width, t.height), e += .02;\n      for (var i = 0; i < 7; i++) {\n        a.beginPath(), a.moveTo(0, t.height / 2);\n        for (var o = 0; o < t.width; o++) {\n          var n = 50 * Math.sin(.01 * o + e + .5 * i) + 25 * Math.cos(.02 * o + .7 * e + .3 * i) + t.height / 2;\n          a.lineTo(o, n);\n        }\n        a.strokeStyle = r[i % r.length], a.lineWidth = 4, a.stroke();\n      }\n    };\n  },\n  u = function (t, a) {\n    var e = 0,\n      r = [{\n        pos: 0,\n        color: \"rgba(0, 255, 128, 0.5)\"\n      }, {\n        pos: .5,\n        color: \"rgba(0, 128, 255, 0.5)\"\n      }, {\n        pos: 1,\n        color: \"rgba(128, 0, 255, 0.5)\"\n      }];\n    return function () {\n      a.fillStyle = \"rgba(0, 0, 20, 0.1)\", a.fillRect(0, 0, t.width, t.height), e += .005;\n      for (var i = function () {\n          var i = a.createLinearGradient(0, 0, t.width, 0);\n          r.forEach(function (t) {\n            i.addColorStop(t.pos, t.color);\n          }), a.beginPath();\n          for (var n = 0; n < t.width; n++) {\n            var h = 50 * Math.sin(.01 * n + e + o) + 30 * Math.sin(.02 * n - 1.5 * e + o) + t.height * (.4 + .2 * o);\n            a.lineTo(n, h);\n          }\n          a.lineTo(t.width, t.height), a.lineTo(0, t.height), a.closePath(), a.fillStyle = i, a.fill();\n        }, o = 0; o < 3; o++) i();\n    };\n  },\n  M = function (t, a) {\n    for (var e = [], r = [\"#FF00FF\", \"#00FFFF\", \"#FFFF00\", \"#FF00AA\"], i = 0; i < 20; i++) e.push({\n      x: Math.random() * t.width,\n      y: Math.random() * t.height,\n      radius: 50 * Math.random() + 20,\n      color: r[Math.floor(Math.random() * r.length)],\n      phase: Math.random() * Math.PI * 2\n    });\n    return function () {\n      a.fillStyle = \"rgba(0, 0, 0, 0.1)\", a.fillRect(0, 0, t.width, t.height), e.forEach(function (t) {\n        var e = 20 * Math.sin(t.phase) + 30,\n          r = a.createRadialGradient(t.x, t.y, 0, t.x, t.y, t.radius);\n        r.addColorStop(0, t.color), r.addColorStop(1, \"rgba(0, 0, 0, 0)\"), a.beginPath(), a.arc(t.x, t.y, t.radius + e, 0, 2 * Math.PI), a.fillStyle = r, a.fill(), t.phase += .05;\n      });\n    };\n  },\n  m = function (t, a) {\n    for (var e = [], r = 0; r < 300; r++) e.push({\n      x: Math.random() * t.width,\n      y: Math.random() * t.height,\n      size: 2 * Math.random() + .5,\n      speedX: .5 * (Math.random() - .5),\n      speedY: .5 * (Math.random() - .5),\n      color: \"hsl(\".concat(60 * Math.random() + 180, \", 100%, 70%)\")\n    });\n    return function () {\n      a.fillStyle = \"rgba(0, 0, 20, 0.05)\", a.fillRect(0, 0, t.width, t.height), e.forEach(function (e) {\n        a.beginPath(), a.arc(e.x, e.y, e.size, 0, 2 * Math.PI), a.fillStyle = e.color, a.fill(), e.x += e.speedX, e.y += e.speedY, (e.x < 0 || e.x > t.width) && (e.speedX *= -1), (e.y < 0 || e.y > t.height) && (e.speedY *= -1);\n      });\n    };\n  },\n  p = function (t, a) {\n    var e = [];\n    return function () {\n      a.fillStyle = \"rgba(0, 0, 20, 0.2)\", a.fillRect(0, 0, t.width, t.height), Math.random() < .1 && e.push(function () {\n        for (var a = Math.random() * t.width, e = 0, r = [{\n            x: a,\n            y: e\n          }]; e < t.height;) a += 50 * (Math.random() - .5), e += 20 * Math.random() + 10, r.push({\n          x: a,\n          y: e\n        });\n        return {\n          points: r,\n          life: 5 + 5 * Math.random(),\n          width: 3 * Math.random() + 1\n        };\n      }()), e.forEach(function (t, r) {\n        a.beginPath(), a.moveTo(t.points[0].x, t.points[0].y);\n        for (var i = 1; i < t.points.length; i++) a.lineTo(t.points[i].x, t.points[i].y);\n        a.strokeStyle = \"rgba(180, 220, 255, \".concat(t.life / 10, \")\"), a.lineWidth = t.width, a.stroke(), t.life -= .2, t.life <= 0 && e.splice(r, 1);\n      });\n    };\n  },\n  x = function (t, a) {\n    for (var e = [], r = 0; r < 100; r++) e.push({\n      x: Math.random() * t.width,\n      y: Math.random() * t.height,\n      size: 4 * Math.random() + 1,\n      speedX: 2 * (Math.random() - .5),\n      speedY: 2 * (Math.random() - .5),\n      hue: 360 * Math.random()\n    });\n    return function () {\n      a.fillStyle = \"rgba(0, 0, 0, 0.05)\", a.fillRect(0, 0, t.width, t.height), e.forEach(function (r) {\n        r.x += r.speedX, r.y += r.speedY, (r.x < 0 || r.x > t.width) && (r.speedX *= -1), (r.y < 0 || r.y > t.height) && (r.speedY *= -1), a.beginPath(), a.arc(r.x, r.y, r.size, 0, 2 * Math.PI), a.fillStyle = \"hsla(\".concat(r.hue, \", 100%, 50%, 0.8)\"), a.fill(), e.forEach(function (t) {\n          var e = r.x - t.x,\n            i = r.y - t.y,\n            o = Math.sqrt(e * e + i * i);\n          o < 100 && (a.beginPath(), a.moveTo(r.x, r.y), a.lineTo(t.x, t.y), a.strokeStyle = \"hsla(\".concat((r.hue + t.hue) / 2, \", 100%, 50%, \").concat(1 - o / 100, \")\"), a.stroke());\n        }), r.hue = (r.hue + .5) % 360;\n      });\n    };\n  },\n  v = function (t, a) {\n    for (var e = [], r = 0; r < 50; r++) e.push({\n      x: Math.random() * t.width,\n      y: Math.random() * t.height,\n      size: 30 * Math.random() + 10,\n      type: Math.floor(3 * Math.random()),\n      rotation: Math.random() * Math.PI * 2,\n      speed: .5 * Math.random() + .1,\n      color: \"hsl(\".concat(360 * Math.random(), \", 70%, 50%)\")\n    });\n    return function () {\n      a.clearRect(0, 0, t.width, t.height), e.forEach(function (e) {\n        switch (a.save(), a.translate(e.x, e.y), a.rotate(e.rotation), a.fillStyle = e.color, e.type) {\n          case 0:\n            a.fillRect(-e.size / 2, -e.size / 2, e.size, e.size);\n            break;\n          case 1:\n            a.beginPath(), a.arc(0, 0, e.size / 2, 0, 2 * Math.PI), a.fill();\n            break;\n          case 2:\n            a.beginPath(), a.moveTo(0, -e.size / 2), a.lineTo(e.size / 2, e.size / 2), a.lineTo(-e.size / 2, e.size / 2), a.closePath(), a.fill();\n        }\n        a.restore(), e.rotation += .05 * e.speed, e.y += e.speed, e.y > t.height + e.size && (e.y = -e.size, e.x = Math.random() * t.width);\n      });\n    };\n  },\n  b = function (t, a) {\n    for (var e = [], r = 0; r < 100; r++) e.push({\n      x: Math.random() * t.width,\n      y: Math.random() * t.height,\n      size: 3 * Math.random() + 1,\n      speed: .5 * Math.random() + .1,\n      brightness: Math.random(),\n      angle: Math.random() * Math.PI * 2\n    });\n    return function () {\n      a.fillStyle = \"rgba(0, 0, 0, 0.1)\", a.fillRect(0, 0, t.width, t.height), e.forEach(function (e) {\n        e.brightness += .1 * Math.random() - .05, e.brightness = Math.max(0, Math.min(1, e.brightness)), a.beginPath(), a.arc(e.x, e.y, e.size, 0, 2 * Math.PI), a.fillStyle = \"rgba(255, 255, 100, \".concat(e.brightness, \")\"), a.fill(), e.x += Math.cos(e.angle) * e.speed, e.y += Math.sin(e.angle) * e.speed, (e.x < 0 || e.x > t.width || e.y < 0 || e.y > t.height) && (e.angle += Math.PI), Math.random() < .01 && (e.angle = Math.random() * Math.PI * 2);\n      });\n    };\n  },\n  w = function (t, a) {\n    for (var e = Math.floor(t.width / 20), r = [], i = 0; i < e; i++) r[i] = Math.random() * t.height;\n    var o = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%^&*()_+[]{}|;:,.<>?\";\n    return function () {\n      a.fillStyle = \"rgba(0, 0, 0, 0.05)\", a.fillRect(0, 0, t.width, t.height), a.fillStyle = \"#0F0\", a.font = \"15px monospace\";\n      for (var e = 0; e < r.length; e++) {\n        var i = o[Math.floor(85 * Math.random())];\n        a.fillText(i, 20 * e, 20 * r[e]), 20 * r[e] > t.height && Math.random() > .975 && (r[e] = 0), r[e] += .6;\n      }\n    };\n  },\n  S = function (t, a) {\n    var e = 0;\n    return function () {\n      a.fillStyle = \"rgba(0, 0, 0, 0.1)\", a.fillRect(0, 0, t.width, t.height), a.save(), a.translate(t.width / 2, t.height / 2);\n      for (var r = 0; r < 2; r++) {\n        a.beginPath();\n        for (var i = -t.width / 2; i < t.width / 2; i += 10) {\n          var o = 100 + 50 * Math.sin(.01 * i + e + r * Math.PI);\n          a.lineTo(i, o);\n        }\n        a.strokeStyle = 0 === r ? \"rgba(255, 0, 0, 0.5)\" : \"rgba(0, 0, 255, 0.5)\", a.lineWidth = 2, a.stroke();\n        for (var n = -t.width / 2; n < t.width / 2; n += 40) {\n          var h = 100 + 50 * Math.sin(.01 * n + e + r * Math.PI);\n          a.fillStyle = 0 === r ? \"rgba(255, 255, 0, 0.8)\" : \"rgba(0, 255, 0, 0.8)\", a.beginPath(), a.arc(n, h, 5, 0, 2 * Math.PI), a.fill();\n        }\n      }\n      a.restore(), e += .02;\n    };\n  },\n  P = function (t, a) {\n    var e = [],\n      r = [],\n      i = a.createLinearGradient(0, 0, t.width, t.height);\n    i.addColorStop(0, \"#000000\"), i.addColorStop(1, \"#1a1a2e\");\n    for (var o = 0; o < 30; o++) e.push({\n      x: Math.random() * t.width,\n      y: Math.random() * t.height,\n      vx: .3 * (Math.random() - .5),\n      vy: .3 * (Math.random() - .5),\n      size: 2 * Math.random() + 2\n    });\n    for (var n = 0; n < e.length; n++) for (var h = n + 1; h < e.length; h++) Math.random() < .2 && r.push([n, h]);\n    return function () {\n      a.fillStyle = i, a.fillRect(0, 0, t.width, t.height), e.forEach(function (e, r) {\n        e.x += e.vx, e.y += e.vy, (e.x < 0 || e.x > t.width) && (e.vx *= -1), (e.y < 0 || e.y > t.height) && (e.vy *= -1), a.beginPath(), a.arc(e.x, e.y, e.size, 0, 2 * Math.PI), a.fillStyle = \"hsl(\".concat(12 * r, \", 100%, 50%)\"), a.fill(), a.beginPath(), a.arc(e.x, e.y, e.size + 3, 0, 2 * Math.PI);\n        var i = a.createRadialGradient(e.x, e.y, e.size, e.x, e.y, e.size + 3);\n        i.addColorStop(0, \"hsla(\".concat(12 * r, \", 100%, 50%, 0.8)\")), i.addColorStop(1, \"hsla(\".concat(12 * r, \", 100%, 50%, 0)\")), a.fillStyle = i, a.fill();\n      }), r.forEach(function (r) {\n        var i = l(r, 2),\n          o = i[0],\n          n = i[1],\n          h = e[o].x - e[n].x,\n          d = e[o].y - e[n].y,\n          c = 1 - Math.sqrt(h * h + d * d) / Math.max(t.width, t.height);\n        a.beginPath(), a.moveTo(e[o].x, e[o].y), a.lineTo(e[n].x, e[n].y), a.strokeStyle = \"rgba(255, 255, 255, \".concat(.2 * c, \")\"), a.stroke();\n      });\n      for (var o = 0; o < 5; o++) a.beginPath(), a.arc(Math.random() * t.width, Math.random() * t.height, 1.5 * Math.random(), 0, 2 * Math.PI), a.fillStyle = \"rgba(255, 255, 255, 0.5)\", a.fill();\n    };\n  },\n  z = function (t, a) {\n    var e = 0,\n      r = a.createLinearGradient(0, 0, 0, .6 * t.height);\n    r.addColorStop(0, \"#87CEEB\"), r.addColorStop(1, \"#E0F6FF\");\n    var i = {\n        x: .8 * t.width,\n        y: .2 * t.height,\n        radius: 40,\n        glow: 20\n      },\n      o = [{\n        x: .1 * t.width,\n        y: .15 * t.height,\n        radius: 30\n      }, {\n        x: .3 * t.width,\n        y: .1 * t.height,\n        radius: 40\n      }, {\n        x: .6 * t.width,\n        y: .2 * t.height,\n        radius: 35\n      }];\n    return function () {\n      a.fillStyle = r, a.fillRect(0, 0, t.width, .6 * t.height), a.save(), a.beginPath(), a.arc(i.x, i.y, i.radius, 0, 2 * Math.PI);\n      var n = a.createRadialGradient(i.x, i.y, i.radius - i.glow, i.x, i.y, i.radius + i.glow);\n      n.addColorStop(0, \"rgba(255, 255, 0, 1)\"), n.addColorStop(.8, \"rgba(255, 255, 0, 0.3)\"), n.addColorStop(1, \"rgba(255, 255, 0, 0)\"), a.fillStyle = n, a.fill(), a.restore(), o.forEach(function (t) {\n        a.beginPath(), a.arc(t.x, t.y, t.radius, 0, 2 * Math.PI), a.fillStyle = \"rgba(255, 255, 255, 0.8)\", a.fill();\n      });\n      for (var h = 0; h < 7; h++) {\n        a.beginPath(), a.moveTo(0, t.height);\n        for (var l = 0; l <= t.width; l += 5) {\n          var d = 30 * Math.sin(.02 * l + e + .5 * h) * (1 + .1 * h) + (t.height - (h + 1) * (.4 * t.height / 7));\n          a.lineTo(l, d);\n        }\n        a.lineTo(t.width, t.height);\n        var c = a.createLinearGradient(0, 0, 0, t.height);\n        c.addColorStop(0, \"rgba(0, 100, 255, \".concat(.1 + h / 7 * .15, \")\")), c.addColorStop(1, \"rgba(0, 50, 200, \".concat(.1 + h / 7 * .15, \")\")), a.fillStyle = c, a.fill();\n      }\n      e += .03;\n    };\n  },\n  I = function (t, a) {\n    var e = [],\n      r = a.createLinearGradient(0, 0, 0, t.height);\n    r.addColorStop(0, \"#0c1445\"), r.addColorStop(1, \"#1c2754\");\n    for (var i = {\n        x: .8 * t.width,\n        y: .2 * t.height,\n        radius: 50,\n        glow: 20\n      }, o = [{\n        points: [[0, t.height], [.3 * t.width, .7 * t.height], [.5 * t.width, t.height]],\n        color: \"#0a1128\"\n      }, {\n        points: [[.4 * t.width, t.height], [.7 * t.width, .75 * t.height], [t.width, t.height]],\n        color: \"#0d1636\"\n      }], n = 0; n < 200; n++) e.push({\n      x: Math.random() * t.width,\n      y: Math.random() * t.height,\n      vx: 1.5 * (Math.random() - .5),\n      vy: 1 * Math.random() + .5,\n      size: 3 * Math.random() + 1,\n      opacity: .5 * Math.random() + .5\n    });\n    return function () {\n      a.fillStyle = r, a.fillRect(0, 0, t.width, t.height), a.save(), a.beginPath(), a.arc(i.x, i.y, i.radius, 0, 2 * Math.PI);\n      var n = a.createRadialGradient(i.x, i.y, i.radius - i.glow, i.x, i.y, i.radius + i.glow);\n      n.addColorStop(0, \"rgba(255, 255, 230, 1)\"), n.addColorStop(.5, \"rgba(255, 255, 230, 0.3)\"), n.addColorStop(1, \"rgba(255, 255, 230, 0)\"), a.fillStyle = n, a.fill(), a.restore(), o.forEach(function (t) {\n        a.beginPath(), a.moveTo(t.points[0][0], t.points[0][1]), t.points.forEach(function (t) {\n          return a.lineTo(t[0], t[1]);\n        }), a.fillStyle = t.color, a.fill();\n      }), e.forEach(function (e) {\n        e.x += e.vx + .3 * Math.sin(.01 * e.y), e.y += e.vy, e.y > t.height && (e.x = Math.random() * t.width, e.y = -e.size, e.vx = 1.5 * (Math.random() - .5), e.vy = 1 * Math.random() + .5), a.beginPath(), a.arc(e.x, e.y, e.size, 0, 2 * Math.PI), a.fillStyle = \"rgba(255, 255, 255, \".concat(e.opacity, \")\"), a.fill();\n      }), a.fillStyle = \"rgba(255, 255, 255, 0.03)\", a.fillRect(0, 0, t.width, t.height);\n    };\n  },\n  E = function (t, a) {\n    for (var e = [], r = [], i = 0; i < 5; i++) r.push({\n      x: Math.random() * t.width,\n      y: t.height,\n      height: 200 * Math.random() + 300,\n      width: 100 * Math.random() + 50\n    });\n    for (var o = 0; o < 100; o++) e.push({\n      x: Math.random() * t.width,\n      y: Math.random() * t.height,\n      radius: 2 * Math.random() + 1,\n      speed: .5 * Math.random() + .1,\n      angle: Math.random() * Math.PI * 2,\n      angleSpeed: .01 * (Math.random() - .5),\n      glowIntensity: Math.random()\n    });\n    return function () {\n      a.fillStyle = \"rgba(0, 0, 20, 0.1)\", a.fillRect(0, 0, t.width, t.height), r.forEach(function (t) {\n        a.beginPath(), a.moveTo(t.x, t.y), a.lineTo(t.x - t.width / 2, t.y - t.height), a.lineTo(t.x + t.width / 2, t.y - t.height), a.closePath(), a.fillStyle = \"rgba(0, 50, 0, 0.8)\", a.fill();\n      }), e.forEach(function (e) {\n        e.x += Math.cos(e.angle) * e.speed, e.y += Math.sin(e.angle) * e.speed, e.angle += e.angleSpeed, (e.x < 0 || e.x > t.width) && (e.angle = Math.PI - e.angle), (e.y < 0 || e.y > t.height) && (e.angle = -e.angle), e.glowIntensity = .5 * Math.sin(.002 * Date.now() + .1 * e.x) + .5, a.beginPath(), a.arc(e.x, e.y, e.radius, 0, 2 * Math.PI), a.fillStyle = \"rgba(255, 255, 100, \".concat(e.glowIntensity, \")\"), a.fill(), a.beginPath(), a.arc(e.x, e.y, 3 * e.radius, 0, 2 * Math.PI);\n        var r = a.createRadialGradient(e.x, e.y, 0, e.x, e.y, 3 * e.radius);\n        r.addColorStop(0, \"rgba(255, 255, 100, \".concat(.5 * e.glowIntensity, \")\")), r.addColorStop(1, \"rgba(255, 255, 100, 0)\"), a.fillStyle = r, a.fill();\n      });\n    };\n  },\n  T = function (t, a) {\n    var e,\n      r = [];\n    function i(t, a) {\n      for (var e = Math.floor(50 * Math.random()) + 50, r = [], i = 0; i < e; i++) r.push({\n        x: t + 200 * Math.random() - 100,\n        y: a + 100 * Math.random() - 50,\n        radius: 30 * Math.random() + 10\n      });\n      return {\n        particles: r,\n        x: t,\n        y: a,\n        speed: .5 * Math.random() + .1\n      };\n    }\n    for (var o = 0; o < 10; o++) r.push(i(Math.random() * t.width, Math.random() * (t.height / 2)));\n    var n = function () {\n        e = t.height;\n        var r = a.createLinearGradient(0, 0, 0, e);\n        return r.addColorStop(0, \"#1e90ff\"), r.addColorStop(.5, \"#87ceeb\"), r.addColorStop(1, \"#e6f3ff\"), r;\n      },\n      h = n();\n    return function () {\n      e !== t.height && (h = n()), a.fillStyle = h, a.fillRect(0, 0, t.width, t.height), r.forEach(function (e) {\n        e.x += e.speed, e.x > t.width + 200 && (e.x = -200), a.save(), a.translate(e.x, e.y), e.particles.forEach(function (t) {\n          a.beginPath(), a.arc(t.x + 5, t.y + 5, t.radius, 0, 2 * Math.PI), a.fillStyle = \"rgba(0, 0, 0, 0.1)\", a.fill();\n        }), e.particles.forEach(function (t) {\n          a.beginPath(), a.arc(t.x, t.y, t.radius, 0, 2 * Math.PI);\n          var e = a.createRadialGradient(t.x, t.y, 0, t.x, t.y, t.radius);\n          e.addColorStop(0, \"rgba(255, 255, 255, 0.8)\"), e.addColorStop(1, \"rgba(255, 255, 255, 0.2)\"), a.fillStyle = e, a.fill();\n        }), a.restore();\n      });\n      a.beginPath(), a.arc(t.width - 100, 100, 40, 0, 2 * Math.PI);\n      var i = a.createRadialGradient(t.width - 100, 100, 0, t.width - 100, 100, 60);\n      i.addColorStop(0, \"rgba(255, 255, 200, 1)\"), i.addColorStop(.8, \"rgba(255, 255, 0, 0.3)\"), i.addColorStop(1, \"rgba(255, 255, 0, 0)\"), a.fillStyle = i, a.fill();\n    };\n  },\n  F = function (t, a) {\n    var e,\n      r = [],\n      i = [\"#ff6b6b\", \"#feca57\", \"#ff9ff3\", \"#ff9f43\", \"#e17055\"],\n      o = [\"1.jpg\", \"2.jpg\"],\n      n = [],\n      h = !1;\n    e = 0, o.forEach(function (t, a) {\n      var r = new Image();\n      r.onload = function () {\n        n[a] = r, ++e === o.length && (h = !0);\n      }, r.onerror = function () {\n        ++e === o.length && (h = !0);\n      }, r.src = t;\n    });\n    for (var l = 0; l < 100; l++) r.push({\n      x: Math.random() * t.width,\n      y: Math.random() * t.height,\n      size: 20 * Math.random() + 10,\n      speed: 2 * Math.random() + 1,\n      amplitude: 20 * Math.random() + 10,\n      angle: Math.random() * Math.PI * 2,\n      angleSpeed: .05 * (Math.random() - .5),\n      imageIndex: Math.floor(Math.random() * o.length),\n      color: i[Math.floor(Math.random() * i.length)]\n    });\n    return function () {\n      a.fillStyle = \"rgba(135, 206, 235, 0.1)\", a.fillRect(0, 0, t.width, t.height), r.forEach(function (e) {\n        e.y += e.speed, e.x += Math.sin(.01 * e.y) * e.amplitude * .05, e.angle += e.angleSpeed, e.y > t.height && (e.y = -e.size, e.x = Math.random() * t.width), function (t) {\n          a.save(), a.translate(t.x, t.y), a.rotate(t.angle), h && n[t.imageIndex] ? a.drawImage(n[t.imageIndex], -t.size / 2, -t.size / 2, t.size, t.size) : (a.beginPath(), a.ellipse(0, 0, t.size / 2, t.size / 4, 0, 0, 2 * Math.PI), a.fillStyle = t.color, a.fill()), a.restore();\n        }(e);\n      });\n    };\n  },\n  C = function (t, a) {\n    for (var e = [], r = [], i = 0; i < 1e3; i++) e.push({\n      x: Math.random() * t.width,\n      y: Math.random() * t.height,\n      length: 20 * Math.random() + 10,\n      speed: 10 * Math.random() + 15\n    });\n    return function () {\n      a.fillStyle = \"rgba(0, 0, 0, 0.1)\", a.fillRect(0, 0, t.width, t.height), a.strokeStyle = \"rgba(174, 194, 224, 0.5)\", a.lineWidth = 1, e.forEach(function (e) {\n        a.beginPath(), a.moveTo(e.x, e.y), a.lineTo(e.x, e.y + e.length), a.stroke(), e.y += e.speed, e.y > t.height && (e.y = -e.length, r.push({\n          x: e.x,\n          y: t.height,\n          radius: 3 * Math.random() + 1,\n          opacity: 1\n        }));\n      }), r.forEach(function (t, e) {\n        a.beginPath(), a.arc(t.x, t.y, t.radius, 0, 2 * Math.PI), a.fillStyle = \"rgba(174, 194, 224, \".concat(t.opacity, \")\"), a.fill(), t.radius += .1, t.opacity -= .03, t.opacity <= 0 && r.splice(e, 1);\n      });\n    };\n  },\n  R = function (t, a) {\n    for (var e = [], r = [\"🍔\", \"🍕\", \"🌭\", \"🍟\", \"🌮\", \"🍣\", \"🍩\", \"🍦\", \"🍎\", \"🍇\", \"🍓\", \"🍑\", \"🍍\", \"🥑\", \"🥕\", \"🥪\", \"🥨\", \"🧀\", \"🥐\", \"🥯\", \"🍱\", \"🍜\", \"🍙\", \"🍗\", \"🥟\", \"🥘\", \"🍤\", \"🥞\", \"🧇\", \"🥓\"], i = [{\n        r: 255,\n        g: 102,\n        b: 102\n      }, {\n        r: 255,\n        g: 178,\n        b: 102\n      }, {\n        r: 255,\n        g: 255,\n        b: 153\n      }, {\n        r: 153,\n        g: 255,\n        b: 153\n      }, {\n        r: 153,\n        g: 204,\n        b: 255\n      }, {\n        r: 178,\n        g: 102,\n        b: 255\n      }, {\n        r: 255,\n        g: 153,\n        b: 255\n      }], o = 0, n = 1, h = 0, l = 0; l < 50; l++) e.push({\n      x: Math.random() * t.width,\n      y: Math.random() * t.height - t.height,\n      emoji: r[Math.floor(Math.random() * r.length)],\n      size: 20 * Math.random() + 30,\n      speed: 1.5 * Math.random() + .5,\n      rotation: Math.random() * Math.PI * 2,\n      rotationSpeed: .02 * (2 * Math.random() - 1)\n    });\n    return function () {\n      (h += .005) >= 1 && (h = 0, o = n, n = (n + 1) % i.length);\n      var r,\n        l,\n        d,\n        c = (r = i[o], l = i[n], d = h, {\n          r: Math.round(r.r + (l.r - r.r) * d),\n          g: Math.round(r.g + (l.g - r.g) * d),\n          b: Math.round(r.b + (l.b - r.b) * d)\n        }),\n        f = a.createLinearGradient(0, 0, t.width, t.height);\n      f.addColorStop(0, \"rgb(\".concat(c.r, \", \").concat(c.g, \", \").concat(c.b, \")\")), f.addColorStop(1, \"rgb(\".concat(255 - c.r, \", \").concat(255 - c.g, \", \").concat(255 - c.b, \")\")), a.filter = \"blur(5px)\", a.fillStyle = f, a.fillRect(0, 0, t.width, t.height), a.filter = \"none\", e.forEach(function (e) {\n        a.save(), a.translate(e.x, e.y), a.rotate(e.rotation), a.font = \"\".concat(e.size, \"px Arial\"), a.textAlign = \"center\", a.textBaseline = \"middle\", a.strokeStyle = \"white\", a.lineWidth = 3, a.strokeText(e.emoji, 0, 0), a.fillStyle = \"black\", a.fillText(e.emoji, 0, 0), a.restore(), e.y += e.speed, e.rotation += e.rotationSpeed, e.y > t.height + e.size && (e.y = -e.size, e.x = Math.random() * t.width);\n      });\n    };\n  },\n  k = function (t, a) {\n    for (var e = [], r = [], i = [], o = 0; o < 20; o++) e.push({\n      x: Math.random() * t.width,\n      height: 200 * Math.random() + 100,\n      width: 20 * Math.random() + 10\n    });\n    for (var n = 0; n < 50; n++) r.push({\n      x: Math.random() * t.width,\n      y: Math.random() * t.height,\n      radius: 2 * Math.random() + 1,\n      speed: .5 * Math.random() + .1,\n      opacity: Math.random()\n    });\n    for (var h = 0; h < 100; h++) i.push({\n      x: Math.random() * t.width,\n      y: Math.random() * t.height,\n      radius: 50 * Math.random() + 20,\n      speed: .2 * Math.random() + .1\n    });\n    return function () {\n      a.fillStyle = \"#0a0a0a\", a.fillRect(0, 0, t.width, t.height), a.fillStyle = \"#1a1a1a\", e.forEach(function (e) {\n        a.beginPath(), a.moveTo(e.x, t.height), a.lineTo(e.x - e.width / 2, t.height - e.height), a.lineTo(e.x + e.width / 2, t.height - e.height), a.closePath(), a.fill();\n      }), a.fillStyle = \"rgba(200, 200, 200, 0.05)\", i.forEach(function (e) {\n        a.beginPath(), a.arc(e.x, e.y, e.radius, 0, 2 * Math.PI), a.fill(), e.x += e.speed, e.x > t.width + e.radius && (e.x = -e.radius);\n      }), r.forEach(function (e) {\n        a.beginPath(), a.arc(e.x, e.y, e.radius, 0, 2 * Math.PI), a.fillStyle = \"rgba(255, 255, 100, \".concat(e.opacity, \")\"), a.fill(), e.x += Math.sin(.001 * Date.now()) * e.speed, e.y += Math.cos(.001 * Date.now()) * e.speed, e.opacity = .5 * Math.sin(.01 * Date.now()) + .5, e.x < 0 && (e.x = t.width), e.x > t.width && (e.x = 0), e.y < 0 && (e.y = t.height), e.y > t.height && (e.y = 0);\n      });\n    };\n  },\n  j = function (t, a) {\n    for (var e = [], r = 0; r < 5; r++) e.push({\n      x: Math.random() * t.width,\n      y: Math.random() * t.height,\n      size: 50 * Math.random() + 30,\n      speed: .5 * Math.random() + .1,\n      opacity: .5 * Math.random()\n    });\n    return function () {\n      a.fillStyle = \"#000033\", a.fillRect(0, 0, t.width, t.height), e.forEach(function (e) {\n        a.beginPath(), a.moveTo(e.x, e.y), a.bezierCurveTo(e.x - e.size / 2, e.y - e.size / 2, e.x - e.size / 2, e.y + e.size / 2, e.x, e.y + e.size), a.bezierCurveTo(e.x + e.size / 2, e.y + e.size / 2, e.x + e.size / 2, e.y - e.size / 2, e.x, e.y);\n        var r = a.createRadialGradient(e.x, e.y, 0, e.x, e.y, e.size);\n        r.addColorStop(0, \"rgba(255, 255, 255, \".concat(e.opacity, \")\")), r.addColorStop(1, \"rgba(255, 255, 255, 0)\"), a.fillStyle = r, a.fill(), e.y -= e.speed, e.opacity = .2 * Math.sin(.001 * Date.now()) + .3, e.y + e.size < 0 && (e.y = t.height + e.size, e.x = Math.random() * t.width);\n      });\n    };\n  },\n  O = function (t, a) {\n    for (var e = [], r = 0; r < 20; r++) e.push({\n      x: Math.random() * t.width,\n      y: Math.random() * t.height,\n      size: 100 * Math.random() + 50,\n      rotation: Math.random() * Math.PI * 2\n    });\n    return function () {\n      a.clearRect(0, 0, t.width, t.height), e.forEach(function (t) {\n        !function (t, e, r, i) {\n          a.save(), a.translate(t, e), a.rotate(i), a.beginPath();\n          for (var o = 0; o < 8; o++) {\n            var n = 2 * Math.PI / 8 * o;\n            a.moveTo(0, 0), a.lineTo(Math.cos(n) * r, Math.sin(n) * r);\n          }\n          for (var h = r / 4; h < r; h += r / 4) {\n            a.moveTo(h, 0);\n            for (var l = 1; l < 8; l++) {\n              var d = 2 * Math.PI / 8 * l;\n              a.lineTo(Math.cos(d) * h, Math.sin(d) * h);\n            }\n            a.closePath();\n          }\n          a.strokeStyle = \"rgba(255, 255, 255, 0.1)\", a.stroke(), a.restore();\n        }(t.x, t.y, t.size, t.rotation);\n      });\n    };\n  },\n  G = function (t, a) {\n    for (var e = [], r = [], i = [], o = 0; o < 15; o++) e.push({\n      x: Math.random() * t.width,\n      y: t.height - 100 * Math.random() - 50,\n      width: 30 * Math.random() + 20,\n      height: 40 * Math.random() + 30\n    });\n    for (var n = 0; n < 10; n++) r.push({\n      x: Math.random() * t.width,\n      y: t.height,\n      speed: .5 * Math.random() + .1,\n      size: 30 * Math.random() + 20\n    });\n    for (var h = 0; h < 50; h++) i.push({\n      x: Math.random() * t.width,\n      y: Math.random() * t.height,\n      radius: 100 * Math.random() + 50,\n      speed: .2 * Math.random() + .1\n    });\n    return function () {\n      var o = a.createLinearGradient(0, 0, 0, t.height);\n      o.addColorStop(0, \"#0a0a1a\"), o.addColorStop(1, \"#1a0a1a\"), a.fillStyle = o, a.fillRect(0, 0, t.width, t.height), a.beginPath(), a.arc(.8 * t.width, .2 * t.height, 40, 0, 2 * Math.PI), a.fillStyle = \"rgba(255, 255, 200, 0.8)\", a.fill(), a.fillStyle = \"#333\", e.forEach(function (t) {\n        a.fillRect(t.x, t.y, t.width, t.height), a.fillStyle = \"#222\", a.fillRect(t.x + .1 * t.width, t.y, .8 * t.width, .1 * t.height);\n      }), r.forEach(function (e) {\n        a.beginPath(), a.arc(e.x, e.y - e.size, .5 * e.size, 0, 2 * Math.PI), a.fillStyle = \"#3a5\", a.fill(), a.beginPath(), a.moveTo(e.x, e.y - e.size), a.lineTo(e.x - .5 * e.size, e.y), a.lineTo(e.x + .5 * e.size, e.y), a.closePath(), a.fillStyle = \"#3a5\", a.fill(), e.y -= e.speed, e.y < .7 * t.height && (e.y = t.height, e.x = Math.random() * t.width);\n      }), a.fillStyle = \"rgba(255, 255, 255, 0.05)\", i.forEach(function (e) {\n        a.beginPath(), a.arc(e.x, e.y, e.radius, 0, 2 * Math.PI), a.fill(), e.x += e.speed, e.x > t.width + e.radius && (e.x = -e.radius);\n      });\n    };\n  },\n  A = function (t, a) {\n    for (var e = [], r = [], i = 0; i < 200; i++) e.push({\n      x: Math.random() * t.width,\n      y: Math.random() * t.height,\n      length: 20 * Math.random() + 10,\n      speed: 5 * Math.random() + 5\n    });\n    return function () {\n      a.fillStyle = \"rgba(20, 0, 0, 0.1)\", a.fillRect(0, 0, t.width, t.height), a.strokeStyle = \"#800\", a.lineWidth = 1, e.forEach(function (e) {\n        a.beginPath(), a.moveTo(e.x, e.y), a.lineTo(e.x, e.y + e.length), a.stroke(), e.y += e.speed, e.y > t.height && (e.y = 0, e.x = Math.random() * t.width, r.push({\n          x: e.x,\n          y: t.height,\n          size: 5 * Math.random() + 2,\n          opacity: 1\n        }));\n      }), r.forEach(function (t, e) {\n        a.beginPath(), a.arc(t.x, t.y, t.size, 0, 2 * Math.PI), a.fillStyle = \"rgba(128, 0, 0, \".concat(t.opacity, \")\"), a.fill(), t.opacity -= .005, t.opacity <= 0 && r.splice(e, 1);\n      });\n    };\n  },\n  W = function (t, a) {\n    for (var e = [], r = [], i = 0; i < 50; i++) e.push({\n      x: Math.random() * t.width,\n      y: Math.random() * t.height,\n      size: 5 * Math.random() + 2,\n      speedX: 2 * Math.random() - 1,\n      speedY: 2 * Math.random() - 1\n    });\n    for (var o = 0; o < 20; o++) r.push({\n      x: Math.random() * t.width,\n      y: Math.random() * t.height\n    });\n    return function () {\n      a.fillStyle = \"rgba(0, 0, 0, 0.1)\", a.fillRect(0, 0, t.width, t.height), a.strokeStyle = \"rgba(255, 255, 255, 0.1)\", a.beginPath(), r.forEach(function (t, e) {\n        r.slice(e + 1).forEach(function (e) {\n          a.moveTo(t.x, t.y), a.lineTo(e.x, e.y);\n        });\n      }), a.stroke(), a.fillStyle = \"#400\", e.forEach(function (e) {\n        a.beginPath(), a.arc(e.x, e.y, e.size, 0, 2 * Math.PI), a.fill(), e.x += e.speedX, e.y += e.speedY, (e.x < 0 || e.x > t.width) && (e.speedX *= -1), (e.y < 0 || e.y > t.height) && (e.speedY *= -1), Math.random() < .01 && (e.speedX = 2 * Math.random() - 1, e.speedY = 2 * Math.random() - 1);\n      });\n    };\n  },\n  L = function (i) {\n    var o = i.animationName,\n      n = i.fallbackAnimation,\n      l = void 0 === n ? \"geometricShapes\" : n,\n      L = i.fps,\n      D = void 0 === L ? 60 : L,\n      X = i.style,\n      Y = a(null),\n      q = a(null),\n      B = e(function () {\n        var t = Y.current,\n          a = t.getContext(\"2d\");\n        t.width = window.innerWidth, t.height = window.innerHeight;\n        var e = {\n            starryNight: d,\n            floatingBubbles: c,\n            gradientWave: f,\n            particleNetwork: s,\n            galaxySpiral: g,\n            rainbowWaves: y,\n            geometricShapes: v,\n            fireflies: b,\n            matrixRain: w,\n            quantumField: x,\n            electricStorm: p,\n            cosmicDust: m,\n            neonPulse: M,\n            auroraBorealis: u,\n            oceanWaves: z,\n            neuralNetwork: P,\n            dnaHelix: S,\n            snowFall: I,\n            realisticRain: C,\n            realisticClouds: T,\n            fireflyForest: E,\n            autumnLeaves: F,\n            fallingFoodFiesta: R,\n            hauntedForest: k,\n            ghostlyApparitions: j,\n            spiderwebOverlay: O,\n            undeadGraveyard: G,\n            bloodRain: A,\n            creepyCrawlies: W\n          },\n          r = e[o];\n        return r || (console.warn('Animation \"'.concat(o, '\" not found. Using fallback animation.')), r = e[l] || e.geometricShapes), r(t, a);\n      }, [o, l]);\n    return r(function () {\n      var t, a, e;\n      t = B(), a = 0, e = 1e3 / D, q.current = requestAnimationFrame(function r(i) {\n        q.current = requestAnimationFrame(r);\n        var o = i - a;\n        o >= e && (a = i - o % e, t());\n      });\n      var r = function () {\n        Y.current && (Y.current.width = window.innerWidth, Y.current.height = window.innerHeight, B());\n      };\n      return window.addEventListener(\"resize\", r), function () {\n        q.current && cancelAnimationFrame(q.current), window.removeEventListener(\"resize\", r);\n      };\n    }, [D, B]), t.createElement(\"canvas\", {\n      ref: Y,\n      style: h({\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        zIndex: -1\n      }, X)\n    });\n  };\nexport { L as AnimatedBackground, u as auroraBorealis, A as bloodRain, m as cosmicDust, W as creepyCrawlies, p as electricStorm, R as fallingFoodFiesta, b as fireflies, c as floatingBubbles, g as galaxySpiral, v as geometricShapes, j as ghostlyApparitions, f as gradientWave, k as hauntedForest, w as matrixRain, M as neonPulse, s as particleNetwork, x as quantumField, y as rainbowWaves, O as spiderwebOverlay, d as starryNight, G as undeadGraveyard };","map":{"version":3,"names":["d","starryNight","t","a","e","r","push","x","Math","random","width","y","height","radius","vx","floor","vy","twinkle","fillStyle","fillRect","forEach","abs","sin","beginPath","arc","PI","concat","fill","c","floatingBubbles","speed","color","strokeStyle","stroke","f","gradientWave","createLinearGradient","addColorStop","i","moveTo","o","lineTo","lineWidth","s","particleNetwork","length","n","h","sqrt","g","galaxySpiral","arguments","cos","angle","distance","save","translate","rotate","restore","rainbowWaves","u","auroraBorealis","pos","closePath","M","neonPulse","phase","createRadialGradient","m","cosmicDust","size","speedX","speedY","p","electricStorm","points","life","splice","quantumField","hue","v","geometricShapes","type","rotation","clearRect","b","fireflies","brightness","max","min","w","matrixRain","font","fillText","S","dnaHelix","P","neuralNetwork","l","z","oceanWaves","glow","I","snowFall","opacity","E","fireflyForest","angleSpeed","glowIntensity","Date","now","T","realisticClouds","particles","createSkyGradient","F","autumnLeaves","Image","onload","onerror","src","amplitude","imageIndex","drawImage","ellipse","C","realisticRain","R","fallingFoodFiesta","emoji","rotationSpeed","round","filter","textAlign","textBaseline","strokeText","k","hauntedForest","j","ghostlyApparitions","bezierCurveTo","O","spiderwebOverlay","G","undeadGraveyard","A","bloodRain","W","creepyCrawlies","slice","L","AnimatedBackground","animationName","fallbackAnimation","fps","D","X","style","Y","q","B","current","getContext","window","innerWidth","innerHeight","console","warn","requestAnimationFrame","handleResize","addEventListener","cancelAnimationFrame","removeEventListener","createElement","ref","position","top","left","zIndex"],"sources":["D:\\AI-Job-Matching-System\\node_modules\\animated-backgrounds\\src\\backgroundAnimations.js","D:\\AI-Job-Matching-System\\node_modules\\animated-backgrounds\\src\\index.js"],"sourcesContent":["// src/backgroundAnimations.js\r\n\r\nexport const starryNight = (canvas, ctx) => {\r\n    const stars = [];\r\n    for (let i = 0; i < 150; i++) {\r\n        stars.push({\r\n            x: Math.random() * canvas.width,\r\n            y: Math.random() * canvas.height,\r\n            radius: Math.random() * 2,\r\n            vx: Math.floor(Math.random() * 50) - 25,\r\n            vy: Math.floor(Math.random() * 50) - 25,\r\n            twinkle: Math.random()\r\n        });\r\n    }\r\n\r\n    return () => {\r\n        ctx.fillStyle = 'rgba(15, 23, 42, 0.1)';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n        ctx.fillStyle = '#FFF';\r\n        stars.forEach(star => {\r\n            star.twinkle += 0.02;\r\n            const opacity = Math.abs(Math.sin(star.twinkle));\r\n            ctx.beginPath();\r\n            ctx.arc(star.x, star.y, star.radius, 0, 2 * Math.PI);\r\n            ctx.fillStyle = `rgba(255, 255, 255, ${opacity})`;\r\n            ctx.fill();\r\n\r\n            star.x += star.vx / 60;\r\n            star.y += star.vy / 60;\r\n\r\n            if (star.x < 0 || star.x > canvas.width) star.vx = -star.vx;\r\n            if (star.y < 0 || star.y > canvas.height) star.vy = -star.vy;\r\n        });\r\n    };\r\n};\r\n\r\nexport const floatingBubbles = (canvas, ctx) => {\r\n    const bubbles = [];\r\n    for (let i = 0; i < 75; i++) {\r\n        bubbles.push({\r\n            x: Math.random() * canvas.width,\r\n            y: Math.random() * canvas.height,\r\n            radius: Math.random() * 30 + 5,\r\n            speed: Math.random() * 0.7 + 0.1,\r\n            color: `hsla(${Math.random() * 360}, 70%, 60%, 0.6)`\r\n        });\r\n    }\r\n\r\n    return () => {\r\n        ctx.fillStyle = 'rgba(30, 41, 59, 0.1)';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        bubbles.forEach(bubble => {\r\n            ctx.beginPath();\r\n            ctx.arc(bubble.x, bubble.y, bubble.radius, 0, Math.PI * 2);\r\n            ctx.fillStyle = bubble.color;\r\n            ctx.fill();\r\n            ctx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\r\n            ctx.stroke();\r\n\r\n            bubble.y -= bubble.speed;\r\n            bubble.x += Math.sin(bubble.y * 0.03) * 0.5;\r\n            if (bubble.y + bubble.radius < 0) {\r\n                bubble.y = canvas.height + bubble.radius;\r\n                bubble.x = Math.random() * canvas.width;\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const gradientWave = (canvas, ctx) => {\r\n    let time = 0;\r\n\r\n    return () => {\r\n        time += 0.01;\r\n\r\n        const gradient = ctx.createLinearGradient(0, 0, canvas.width, canvas.height);\r\n        gradient.addColorStop(0, `hsl(${time * 10 % 360}, 70%, 50%)`);\r\n        gradient.addColorStop(1, `hsl(${(time * 10 + 180) % 360}, 70%, 50%)`);\r\n\r\n        ctx.fillStyle = gradient;\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        for (let i = 0; i < 7; i++) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(0, canvas.height * 0.15 * i + Math.sin(time + i) * 30);\r\n            for (let x = 0; x < canvas.width; x += 10) {\r\n                ctx.lineTo(x, canvas.height * 0.15 * i + Math.sin(time + i + x * 0.01) * 30);\r\n            }\r\n            ctx.strokeStyle = `rgba(255, 255, 255, ${0.1 - i * 0.01})`;\r\n            ctx.lineWidth = 2;\r\n            ctx.stroke();\r\n        }\r\n    };\r\n};\r\n\r\nexport const particleNetwork = (canvas, ctx) => {\r\n    const particles = [];\r\n    const particleCount = 150;\r\n    const maxDistance = 120;\r\n\r\n    for (let i = 0; i < particleCount; i++) {\r\n        particles.push({\r\n            x: Math.random() * canvas.width,\r\n            y: Math.random() * canvas.height,\r\n            radius: Math.random() * 3 + 1,\r\n            vx: Math.random() * 1.5 - 0.75,\r\n            vy: Math.random() * 1.5 - 0.75,\r\n            color: `hsl(${Math.random() * 360}, 70%, 70%)`\r\n        });\r\n    }\r\n\r\n    return () => {\r\n        ctx.fillStyle = 'rgba(15, 23, 42, 0.1)';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        particles.forEach(particle => {\r\n            particle.x += particle.vx;\r\n            particle.y += particle.vy;\r\n\r\n            if (particle.x < 0 || particle.x > canvas.width) particle.vx *= -1;\r\n            if (particle.y < 0 || particle.y > canvas.height) particle.vy *= -1;\r\n\r\n            ctx.beginPath();\r\n            ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);\r\n            ctx.fillStyle = particle.color;\r\n            ctx.fill();\r\n        });\r\n\r\n        for (let i = 0; i < particles.length; i++) {\r\n            for (let j = i + 1; j < particles.length; j++) {\r\n                const dx = particles[i].x - particles[j].x;\r\n                const dy = particles[i].y - particles[j].y;\r\n                const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n                if (distance < maxDistance) {\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(particles[i].x, particles[i].y);\r\n                    ctx.lineTo(particles[j].x, particles[j].y);\r\n                    ctx.strokeStyle = `rgba(255, 255, 255, ${1 - distance / maxDistance})`;\r\n                    ctx.lineWidth = 0.5;\r\n                    ctx.stroke();\r\n                }\r\n            }\r\n        }\r\n    };\r\n};\r\nexport const galaxySpiral = (canvas, ctx, speed = 0.0001) => {\r\n    const stars = initializeStars(canvas, 2000);\r\n    let rotation = 0;\r\n\r\n    function initializeStars(canvas, starCount) {\r\n        const stars = [];\r\n        for (let i = 0; i < starCount; i++) {\r\n            const distance = Math.random() * canvas.width * 0.4;\r\n            const angle = Math.random() * Math.PI * 2;\r\n            stars.push({\r\n                x: Math.cos(angle) * distance,\r\n                y: Math.sin(angle) * distance,\r\n                radius: Math.random() * 1.5 + 0.5,\r\n                color: `hsl(${Math.random() * 60 + 200}, 80%, 70%)`,\r\n                angle: angle,\r\n                distance: distance\r\n            });\r\n        }\r\n        return stars;\r\n    }\r\n\r\n    function drawStars(ctx, stars, rotation, speed) {\r\n        stars.forEach(star => {\r\n            const x = Math.cos(star.angle) * star.distance;\r\n            const y = Math.sin(star.angle) * star.distance;\r\n\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, star.radius, 0, Math.PI * 2);\r\n            ctx.fillStyle = star.color;\r\n            ctx.fill();\r\n\r\n            // Adjust the angle increment here to control the speed of star rotation\r\n            star.angle += speed / (star.distance * 0.00008);\r\n        });\r\n    }\r\n\r\n    return () => {\r\n        ctx.fillStyle = 'rgba(10, 10, 30, 0.1)';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        ctx.save();\r\n        ctx.translate(canvas.width / 2, canvas.height / 2);\r\n        ctx.rotate(rotation);\r\n\r\n        drawStars(ctx, stars, rotation, speed);\r\n\r\n        ctx.restore();\r\n        // Adjust the rotation increment here to control the speed of galaxy rotation\r\n        rotation += speed;\r\n    };\r\n};\r\nexport const rainbowWaves = (canvas, ctx) => {\r\n    let time = 0;\r\n    const waves = 7;\r\n    const colors = ['#FF0000', '#FF7F00', '#FFFF00', '#00FF00', '#0000FF', '#4B0082', '#8B00FF'];\r\n\r\n    return () => {\r\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n        time += 0.02;\r\n\r\n        for (let i = 0; i < waves; i++) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(0, canvas.height / 2);\r\n\r\n            for (let x = 0; x < canvas.width; x++) {\r\n                const y = Math.sin(x * 0.01 + time + i * 0.5) * 50 +\r\n                    Math.cos(x * 0.02 + time * 0.7 + i * 0.3) * 25 +\r\n                    canvas.height / 2;\r\n                ctx.lineTo(x, y);\r\n            }\r\n\r\n            ctx.strokeStyle = colors[i % colors.length];\r\n            ctx.lineWidth = 4;\r\n            ctx.stroke();\r\n        }\r\n    };\r\n};\r\nexport const auroraBorealis = (canvas, ctx) => {\r\n    let time = 0;\r\n    const colorStops = [\r\n        { pos: 0, color: 'rgba(0, 255, 128, 0.5)' },\r\n        { pos: 0.5, color: 'rgba(0, 128, 255, 0.5)' },\r\n        { pos: 1, color: 'rgba(128, 0, 255, 0.5)' }\r\n    ];\r\n\r\n    return () => {\r\n        ctx.fillStyle = 'rgba(0, 0, 20, 0.1)';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n        time += 0.005;\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            const gradient = ctx.createLinearGradient(0, 0, canvas.width, 0);\r\n            colorStops.forEach(stop => {\r\n                gradient.addColorStop(stop.pos, stop.color);\r\n            });\r\n\r\n            ctx.beginPath();\r\n            for (let x = 0; x < canvas.width; x++) {\r\n                const y = Math.sin(x * 0.01 + time + i) * 50 +\r\n                    Math.sin(x * 0.02 - time * 1.5 + i) * 30 +\r\n                    canvas.height * (0.4 + i * 0.2);\r\n                ctx.lineTo(x, y);\r\n            }\r\n            ctx.lineTo(canvas.width, canvas.height);\r\n            ctx.lineTo(0, canvas.height);\r\n            ctx.closePath();\r\n\r\n            ctx.fillStyle = gradient;\r\n            ctx.fill();\r\n        }\r\n    };\r\n};\r\nexport const neonPulse = (canvas, ctx) => {\r\n    const circles = [];\r\n    const colors = ['#FF00FF', '#00FFFF', '#FFFF00', '#FF00AA'];\r\n\r\n    for (let i = 0; i < 20; i++) {\r\n        circles.push({\r\n            x: Math.random() * canvas.width,\r\n            y: Math.random() * canvas.height,\r\n            radius: Math.random() * 50 + 20,\r\n            color: colors[Math.floor(Math.random() * colors.length)],\r\n            phase: Math.random() * Math.PI * 2\r\n        });\r\n    }\r\n\r\n    return () => {\r\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        circles.forEach(circle => {\r\n            const glow = Math.sin(circle.phase) * 20 + 30;\r\n            const gradient = ctx.createRadialGradient(\r\n                circle.x, circle.y, 0,\r\n                circle.x, circle.y, circle.radius\r\n            );\r\n            gradient.addColorStop(0, circle.color);\r\n            gradient.addColorStop(1, 'rgba(0, 0, 0, 0)');\r\n\r\n            ctx.beginPath();\r\n            ctx.arc(circle.x, circle.y, circle.radius + glow, 0, Math.PI * 2);\r\n            ctx.fillStyle = gradient;\r\n            ctx.fill();\r\n\r\n            circle.phase += 0.05;\r\n        });\r\n    };\r\n};\r\nexport const cosmicDust = (canvas, ctx) => {\r\n    const particles = [];\r\n    const particleCount = 300;\r\n\r\n    for (let i = 0; i < particleCount; i++) {\r\n        particles.push({\r\n            x: Math.random() * canvas.width,\r\n            y: Math.random() * canvas.height,\r\n            size: Math.random() * 2 + 0.5,\r\n            speedX: (Math.random() - 0.5) * 0.5,\r\n            speedY: (Math.random() - 0.5) * 0.5,\r\n            color: `hsl(${Math.random() * 60 + 180}, 100%, 70%)`\r\n        });\r\n    }\r\n\r\n    return () => {\r\n        ctx.fillStyle = 'rgba(0, 0, 20, 0.05)';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        particles.forEach(particle => {\r\n            ctx.beginPath();\r\n            ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\r\n            ctx.fillStyle = particle.color;\r\n            ctx.fill();\r\n\r\n            particle.x += particle.speedX;\r\n            particle.y += particle.speedY;\r\n\r\n            if (particle.x < 0 || particle.x > canvas.width) particle.speedX *= -1;\r\n            if (particle.y < 0 || particle.y > canvas.height) particle.speedY *= -1;\r\n        });\r\n    };\r\n};\r\nexport const electricStorm = (canvas, ctx) => {\r\n    let time = 0;\r\n    const bolts = [];\r\n\r\n    function createBolt() {\r\n        const startX = Math.random() * canvas.width;\r\n        let x = startX;\r\n        let y = 0;\r\n        const points = [{ x, y }];\r\n\r\n        while (y < canvas.height) {\r\n            x += (Math.random() - 0.5) * 50;\r\n            y += Math.random() * 20 + 10;\r\n            points.push({ x, y });\r\n        }\r\n\r\n        return {\r\n            points,\r\n            life: 5 + Math.random() * 5,\r\n            width: Math.random() * 3 + 1\r\n        };\r\n    }\r\n\r\n    return () => {\r\n        ctx.fillStyle = 'rgba(0, 0, 20, 0.2)';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        time += 0.1;\r\n        if (Math.random() < 0.1) bolts.push(createBolt());\r\n\r\n        bolts.forEach((bolt, index) => {\r\n            ctx.beginPath();\r\n            ctx.moveTo(bolt.points[0].x, bolt.points[0].y);\r\n            for (let i = 1; i < bolt.points.length; i++) {\r\n                ctx.lineTo(bolt.points[i].x, bolt.points[i].y);\r\n            }\r\n            ctx.strokeStyle = `rgba(180, 220, 255, ${bolt.life / 10})`;\r\n            ctx.lineWidth = bolt.width;\r\n            ctx.stroke();\r\n\r\n            bolt.life -= 0.2;\r\n            if (bolt.life <= 0) bolts.splice(index, 1);\r\n        });\r\n    };\r\n};\r\n\r\nexport const quantumField = (canvas, ctx) => {\r\n    const particles = [];\r\n    const particleCount = 100;\r\n\r\n    for (let i = 0; i < particleCount; i++) {\r\n        particles.push({\r\n            x: Math.random() * canvas.width,\r\n            y: Math.random() * canvas.height,\r\n            size: Math.random() * 4 + 1,\r\n            speedX: (Math.random() - 0.5) * 2,\r\n            speedY: (Math.random() - 0.5) * 2,\r\n            hue: Math.random() * 360\r\n        });\r\n    }\r\n\r\n    return () => {\r\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        particles.forEach(particle => {\r\n            particle.x += particle.speedX;\r\n            particle.y += particle.speedY;\r\n\r\n            if (particle.x < 0 || particle.x > canvas.width) particle.speedX *= -1;\r\n            if (particle.y < 0 || particle.y > canvas.height) particle.speedY *= -1;\r\n\r\n            ctx.beginPath();\r\n            ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\r\n            ctx.fillStyle = `hsla(${particle.hue}, 100%, 50%, 0.8)`;\r\n            ctx.fill();\r\n\r\n            particles.forEach(otherParticle => {\r\n                const dx = particle.x - otherParticle.x;\r\n                const dy = particle.y - otherParticle.y;\r\n                const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n                if (distance < 100) {\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(particle.x, particle.y);\r\n                    ctx.lineTo(otherParticle.x, otherParticle.y);\r\n                    ctx.strokeStyle = `hsla(${(particle.hue + otherParticle.hue) / 2}, 100%, 50%, ${1 - distance / 100})`;\r\n                    ctx.stroke();\r\n                }\r\n            });\r\n\r\n            particle.hue = (particle.hue + 0.5) % 360;\r\n        });\r\n    };\r\n};\r\n\r\nexport const geometricShapes = (canvas, ctx) => {\r\n    const shapes = [];\r\n    const shapeCount = 50;\r\n\r\n    for (let i = 0; i < shapeCount; i++) {\r\n        shapes.push({\r\n            x: Math.random() * canvas.width,\r\n            y: Math.random() * canvas.height,\r\n            size: Math.random() * 30 + 10,\r\n            type: Math.floor(Math.random() * 3),\r\n            rotation: Math.random() * Math.PI * 2,\r\n            speed: Math.random() * 0.5 + 0.1,\r\n            color: `hsl(${Math.random() * 360}, 70%, 50%)`\r\n        });\r\n    }\r\n\r\n    return () => {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        shapes.forEach(shape => {\r\n            ctx.save();\r\n            ctx.translate(shape.x, shape.y);\r\n            ctx.rotate(shape.rotation);\r\n            ctx.fillStyle = shape.color;\r\n\r\n            switch (shape.type) {\r\n                case 0: // Square\r\n                    ctx.fillRect(-shape.size / 2, -shape.size / 2, shape.size, shape.size);\r\n                    break;\r\n                case 1: // Circle\r\n                    ctx.beginPath();\r\n                    ctx.arc(0, 0, shape.size / 2, 0, Math.PI * 2);\r\n                    ctx.fill();\r\n                    break;\r\n                case 2: // Triangle\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(0, -shape.size / 2);\r\n                    ctx.lineTo(shape.size / 2, shape.size / 2);\r\n                    ctx.lineTo(-shape.size / 2, shape.size / 2);\r\n                    ctx.closePath();\r\n                    ctx.fill();\r\n                    break;\r\n            }\r\n\r\n            ctx.restore();\r\n\r\n            shape.rotation += shape.speed * 0.05;\r\n            shape.y += shape.speed;\r\n            if (shape.y > canvas.height + shape.size) {\r\n                shape.y = -shape.size;\r\n                shape.x = Math.random() * canvas.width;\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const fireflies = (canvas, ctx) => {\r\n    const fireflies = [];\r\n    const fireflyCount = 100;\r\n\r\n    for (let i = 0; i < fireflyCount; i++) {\r\n        fireflies.push({\r\n            x: Math.random() * canvas.width,\r\n            y: Math.random() * canvas.height,\r\n            size: Math.random() * 3 + 1,\r\n            speed: Math.random() * 0.5 + 0.1,\r\n            brightness: Math.random(),\r\n            angle: Math.random() * Math.PI * 2\r\n        });\r\n    }\r\n\r\n    return () => {\r\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        fireflies.forEach(firefly => {\r\n            firefly.brightness += Math.random() * 0.1 - 0.05;\r\n            firefly.brightness = Math.max(0, Math.min(1, firefly.brightness));\r\n\r\n            ctx.beginPath();\r\n            ctx.arc(firefly.x, firefly.y, firefly.size, 0, Math.PI * 2);\r\n            ctx.fillStyle = `rgba(255, 255, 100, ${firefly.brightness})`;\r\n            ctx.fill();\r\n\r\n            firefly.x += Math.cos(firefly.angle) * firefly.speed;\r\n            firefly.y += Math.sin(firefly.angle) * firefly.speed;\r\n\r\n            if (firefly.x < 0 || firefly.x > canvas.width || firefly.y < 0 || firefly.y > canvas.height) {\r\n                firefly.angle += Math.PI;\r\n            }\r\n\r\n            if (Math.random() < 0.01) {\r\n                firefly.angle = Math.random() * Math.PI * 2;\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const matrixRain = (canvas, ctx) => {\r\n    const columns = Math.floor(canvas.width / 20);\r\n    const drops = [];\r\n\r\n    for (let i = 0; i < columns; i++) {\r\n        drops[i] = Math.random() * canvas.height;\r\n    }\r\n\r\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%^&*()_+[]{}|;:,.<>?';\r\n\r\n    return () => {\r\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        ctx.fillStyle = '#0F0';\r\n        ctx.font = '15px monospace';\r\n\r\n        for (let i = 0; i < drops.length; i++) {\r\n            const text = characters[Math.floor(Math.random() * characters.length)];\r\n            ctx.fillText(text, i * 20, drops[i] * 20);\r\n\r\n            if (drops[i] * 20 > canvas.height && Math.random() > 0.975) {\r\n                drops[i] = 0;\r\n            }\r\n            drops[i] += 0.6;\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport const dnaHelix = (canvas, ctx) => {\r\n    const speed = 0.02\r\n    const baseRadius = 100\r\n    const amplitude = 50\r\n    const nucleotideSize = 5\r\n    let t = 0;\r\n\r\n    return () => {\r\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        ctx.save();\r\n        ctx.translate(canvas.width / 2, canvas.height / 2);\r\n\r\n        for (let i = 0; i < 2; i++) {\r\n            ctx.beginPath();\r\n            for (let x = -canvas.width / 2; x < canvas.width / 2; x += 10) {\r\n                const y = Math.sin(x * 0.01 + t + i * Math.PI) * amplitude;\r\n                const r = baseRadius + y;\r\n                ctx.lineTo(x, r);\r\n            }\r\n            ctx.strokeStyle = i === 0 ? 'rgba(255, 0, 0, 0.5)' : 'rgba(0, 0, 255, 0.5)';\r\n            ctx.lineWidth = 2;\r\n            ctx.stroke();\r\n\r\n            // Draw nucleotides\r\n            for (let x = -canvas.width / 2; x < canvas.width / 2; x += 40) {\r\n                const y = Math.sin(x * 0.01 + t + i * Math.PI) * amplitude;\r\n                const r = baseRadius + y;\r\n                ctx.fillStyle = i === 0 ? 'rgba(255, 255, 0, 0.8)' : 'rgba(0, 255, 0, 0.8)';\r\n                ctx.beginPath();\r\n                ctx.arc(x, r, nucleotideSize, 0, Math.PI * 2);\r\n                ctx.fill();\r\n            }\r\n        }\r\n\r\n        ctx.restore();\r\n        t += speed;\r\n    };\r\n}\r\n\r\nexport const neuralNetwork = (canvas, ctx) => {\r\n    const nodeCount = 30;\r\n    const connectionProbability = 0.2;\r\n    const speed = 0.3;\r\n    const nodes = [];\r\n    const connections = [];\r\n\r\n    // Create background gradient\r\n    const backgroundGradient = ctx.createLinearGradient(0, 0, canvas.width, canvas.height);\r\n    backgroundGradient.addColorStop(0, '#000000');\r\n    backgroundGradient.addColorStop(1, '#1a1a2e');\r\n\r\n    for (let i = 0; i < nodeCount; i++) {\r\n        nodes.push({\r\n            x: Math.random() * canvas.width,\r\n            y: Math.random() * canvas.height,\r\n            vx: (Math.random() - 0.5) * speed,\r\n            vy: (Math.random() - 0.5) * speed,\r\n            size: Math.random() * 2 + 2\r\n        });\r\n    }\r\n\r\n    // Pre-compute connections\r\n    for (let i = 0; i < nodes.length; i++) {\r\n        for (let j = i + 1; j < nodes.length; j++) {\r\n            if (Math.random() < connectionProbability) {\r\n                connections.push([i, j]);\r\n            }\r\n        }\r\n    }\r\n\r\n    return () => {\r\n        // Draw background\r\n        ctx.fillStyle = backgroundGradient;\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        // Update and draw nodes\r\n        nodes.forEach((node, index) => {\r\n            node.x += node.vx;\r\n            node.y += node.vy;\r\n\r\n            if (node.x < 0 || node.x > canvas.width) node.vx *= -1;\r\n            if (node.y < 0 || node.y > canvas.height) node.vy *= -1;\r\n\r\n            ctx.beginPath();\r\n            ctx.arc(node.x, node.y, node.size, 0, Math.PI * 2);\r\n            ctx.fillStyle = `hsl(${index * (360 / nodeCount)}, 100%, 50%)`;\r\n            ctx.fill();\r\n\r\n            // Add glow effect\r\n            ctx.beginPath();\r\n            ctx.arc(node.x, node.y, node.size + 3, 0, Math.PI * 2);\r\n            const gradient = ctx.createRadialGradient(node.x, node.y, node.size, node.x, node.y, node.size + 3);\r\n            gradient.addColorStop(0, `hsla(${index * (360 / nodeCount)}, 100%, 50%, 0.8)`);\r\n            gradient.addColorStop(1, `hsla(${index * (360 / nodeCount)}, 100%, 50%, 0)`);\r\n            ctx.fillStyle = gradient;\r\n            ctx.fill();\r\n        });\r\n\r\n        // Draw connections\r\n        connections.forEach(([i, j]) => {\r\n            const dx = nodes[i].x - nodes[j].x;\r\n            const dy = nodes[i].y - nodes[j].y;\r\n            const distance = Math.sqrt(dx * dx + dy * dy);\r\n            const opacity = 1 - distance / Math.max(canvas.width, canvas.height);\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(nodes[i].x, nodes[i].y);\r\n            ctx.lineTo(nodes[j].x, nodes[j].y);\r\n            ctx.strokeStyle = `rgba(255, 255, 255, ${opacity * 0.2})`;\r\n            ctx.stroke();\r\n        });\r\n\r\n        // Add subtle particle effect\r\n        for (let i = 0; i < 5; i++) {\r\n            ctx.beginPath();\r\n            ctx.arc(Math.random() * canvas.width, Math.random() * canvas.height, Math.random() * 1.5, 0, Math.PI * 2);\r\n            ctx.fillStyle = 'rgba(255, 255, 255, 0.5)';\r\n            ctx.fill();\r\n        }\r\n    };\r\n}\r\n\r\nexport const oceanWaves = (canvas, ctx) => {\r\n    const waveCount = 7;\r\n    const amplitude = 30;\r\n    const frequency = 0.02;\r\n    const speed = 0.03;\r\n    let time = 0;\r\n\r\n    // Create sky gradient\r\n    const skyGradient = ctx.createLinearGradient(0, 0, 0, canvas.height * 0.6);\r\n    skyGradient.addColorStop(0, '#87CEEB');\r\n    skyGradient.addColorStop(1, '#E0F6FF');\r\n\r\n    // Create sun\r\n    const sun = {\r\n        x: canvas.width * 0.8,\r\n        y: canvas.height * 0.2,\r\n        radius: 40,\r\n        glow: 20\r\n    };\r\n\r\n    // Create clouds\r\n    const clouds = [\r\n        { x: canvas.width * 0.1, y: canvas.height * 0.15, radius: 30 },\r\n        { x: canvas.width * 0.3, y: canvas.height * 0.1, radius: 40 },\r\n        { x: canvas.width * 0.6, y: canvas.height * 0.2, radius: 35 }\r\n    ];\r\n\r\n    return () => {\r\n        // Draw sky\r\n        ctx.fillStyle = skyGradient;\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height * 0.6);\r\n\r\n        // Draw sun\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.arc(sun.x, sun.y, sun.radius, 0, Math.PI * 2);\r\n        const sunGradient = ctx.createRadialGradient(sun.x, sun.y, sun.radius - sun.glow, sun.x, sun.y, sun.radius + sun.glow);\r\n        sunGradient.addColorStop(0, 'rgba(255, 255, 0, 1)');\r\n        sunGradient.addColorStop(0.8, 'rgba(255, 255, 0, 0.3)');\r\n        sunGradient.addColorStop(1, 'rgba(255, 255, 0, 0)');\r\n        ctx.fillStyle = sunGradient;\r\n        ctx.fill();\r\n        ctx.restore();\r\n\r\n        // Draw clouds\r\n        clouds.forEach(cloud => {\r\n            ctx.beginPath();\r\n            ctx.arc(cloud.x, cloud.y, cloud.radius, 0, Math.PI * 2);\r\n            ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\r\n            ctx.fill();\r\n        });\r\n\r\n        // Draw ocean\r\n        for (let i = 0; i < waveCount; i++) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(0, canvas.height);\r\n\r\n            for (let x = 0; x <= canvas.width; x += 5) {\r\n                const y = Math.sin(x * frequency + time + i * 0.5) * amplitude * (1 + i * 0.1) +\r\n                    (canvas.height - (i + 1) * (canvas.height * 0.4 / waveCount));\r\n                ctx.lineTo(x, y);\r\n            }\r\n\r\n            ctx.lineTo(canvas.width, canvas.height);\r\n            const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\r\n            gradient.addColorStop(0, `rgba(0, 100, 255, ${0.1 + (i / waveCount) * 0.15})`);\r\n            gradient.addColorStop(1, `rgba(0, 50, 200, ${0.1 + (i / waveCount) * 0.15})`);\r\n            ctx.fillStyle = gradient;\r\n            ctx.fill();\r\n        }\r\n\r\n        time += speed;\r\n    };\r\n}\r\nexport const snowFall = (canvas, ctx) => {\r\n    const snowflakeCount = 200;\r\n    const snowflakes = [];\r\n    const backgroundGradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\r\n    backgroundGradient.addColorStop(0, '#0c1445');\r\n    backgroundGradient.addColorStop(1, '#1c2754');\r\n\r\n    // Create moon\r\n    const moon = {\r\n        x: canvas.width * 0.8,\r\n        y: canvas.height * 0.2,\r\n        radius: 50,\r\n        glow: 20\r\n    };\r\n\r\n    // Create mountains\r\n    const mountains = [\r\n        { points: [[0, canvas.height], [canvas.width * 0.3, canvas.height * 0.7], [canvas.width * 0.5, canvas.height]], color: '#0a1128' },\r\n        { points: [[canvas.width * 0.4, canvas.height], [canvas.width * 0.7, canvas.height * 0.75], [canvas.width, canvas.height]], color: '#0d1636' }\r\n    ];\r\n\r\n    for (let i = 0; i < snowflakeCount; i++) {\r\n        snowflakes.push({\r\n            x: Math.random() * canvas.width,\r\n            y: Math.random() * canvas.height,\r\n            vx: (Math.random() - 0.5) * 1.5,\r\n            vy: Math.random() * 1 + 0.5,\r\n            size: Math.random() * 3 + 1,\r\n            opacity: Math.random() * 0.5 + 0.5\r\n        });\r\n    }\r\n\r\n    return () => {\r\n        ctx.fillStyle = backgroundGradient;\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        // Draw moon\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.arc(moon.x, moon.y, moon.radius, 0, Math.PI * 2);\r\n        const moonGradient = ctx.createRadialGradient(moon.x, moon.y, moon.radius - moon.glow, moon.x, moon.y, moon.radius + moon.glow);\r\n        moonGradient.addColorStop(0, 'rgba(255, 255, 230, 1)');\r\n        moonGradient.addColorStop(0.5, 'rgba(255, 255, 230, 0.3)');\r\n        moonGradient.addColorStop(1, 'rgba(255, 255, 230, 0)');\r\n        ctx.fillStyle = moonGradient;\r\n        ctx.fill();\r\n        ctx.restore();\r\n\r\n        // Draw mountains\r\n        mountains.forEach(mountain => {\r\n            ctx.beginPath();\r\n            ctx.moveTo(mountain.points[0][0], mountain.points[0][1]);\r\n            mountain.points.forEach(point => ctx.lineTo(point[0], point[1]));\r\n            ctx.fillStyle = mountain.color;\r\n            ctx.fill();\r\n        });\r\n\r\n        snowflakes.forEach(flake => {\r\n            flake.x += flake.vx + Math.sin(flake.y * 0.01) * 0.3;\r\n            flake.y += flake.vy;\r\n\r\n            if (flake.y > canvas.height) {\r\n                flake.x = Math.random() * canvas.width;\r\n                flake.y = -flake.size;\r\n                flake.vx = (Math.random() - 0.5) * 1.5;\r\n                flake.vy = Math.random() * 1 + 0.5;\r\n            }\r\n\r\n            ctx.beginPath();\r\n            ctx.arc(flake.x, flake.y, flake.size, 0, Math.PI * 2);\r\n            ctx.fillStyle = `rgba(255, 255, 255, ${flake.opacity})`;\r\n            ctx.fill();\r\n        });\r\n\r\n        // Add a subtle glow effect\r\n        ctx.fillStyle = 'rgba(255, 255, 255, 0.03)';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    };\r\n}\r\n\r\n\r\nexport const fireflyForest = (canvas, ctx) => {\r\n    const fireflies = [];\r\n    const fireflyCount = 100;\r\n    const trees = [];\r\n    const treeCount = 5;\r\n\r\n    // Create trees\r\n    for (let i = 0; i < treeCount; i++) {\r\n        trees.push({\r\n            x: Math.random() * canvas.width,\r\n            y: canvas.height,\r\n            height: Math.random() * 200 + 300,\r\n            width: Math.random() * 100 + 50\r\n        });\r\n    }\r\n\r\n    // Create fireflies\r\n    for (let i = 0; i < fireflyCount; i++) {\r\n        fireflies.push({\r\n            x: Math.random() * canvas.width,\r\n            y: Math.random() * canvas.height,\r\n            radius: Math.random() * 2 + 1,\r\n            speed: Math.random() * 0.5 + 0.1,\r\n            angle: Math.random() * Math.PI * 2,\r\n            angleSpeed: (Math.random() - 0.5) * 0.01,\r\n            glowIntensity: Math.random()\r\n        });\r\n    }\r\n\r\n    return () => {\r\n        // Night sky\r\n        ctx.fillStyle = 'rgba(0, 0, 20, 0.1)';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        // Draw trees\r\n        trees.forEach(tree => {\r\n            ctx.beginPath();\r\n            ctx.moveTo(tree.x, tree.y);\r\n            ctx.lineTo(tree.x - tree.width / 2, tree.y - tree.height);\r\n            ctx.lineTo(tree.x + tree.width / 2, tree.y - tree.height);\r\n            ctx.closePath();\r\n            ctx.fillStyle = 'rgba(0, 50, 0, 0.8)';\r\n            ctx.fill();\r\n        });\r\n\r\n        // Update and draw fireflies\r\n        fireflies.forEach(fly => {\r\n            fly.x += Math.cos(fly.angle) * fly.speed;\r\n            fly.y += Math.sin(fly.angle) * fly.speed;\r\n            fly.angle += fly.angleSpeed;\r\n\r\n            if (fly.x < 0 || fly.x > canvas.width) fly.angle = Math.PI - fly.angle;\r\n            if (fly.y < 0 || fly.y > canvas.height) fly.angle = -fly.angle;\r\n\r\n            fly.glowIntensity = Math.sin(Date.now() * 0.002 + fly.x * 0.1) * 0.5 + 0.5;\r\n\r\n            ctx.beginPath();\r\n            ctx.arc(fly.x, fly.y, fly.radius, 0, Math.PI * 2);\r\n            ctx.fillStyle = `rgba(255, 255, 100, ${fly.glowIntensity})`;\r\n            ctx.fill();\r\n\r\n            ctx.beginPath();\r\n            ctx.arc(fly.x, fly.y, fly.radius * 3, 0, Math.PI * 2);\r\n            const gradient = ctx.createRadialGradient(fly.x, fly.y, 0, fly.x, fly.y, fly.radius * 3);\r\n            gradient.addColorStop(0, `rgba(255, 255, 100, ${fly.glowIntensity * 0.5})`);\r\n            gradient.addColorStop(1, 'rgba(255, 255, 100, 0)');\r\n            ctx.fillStyle = gradient;\r\n            ctx.fill();\r\n        });\r\n    };\r\n};\r\nexport const realisticClouds = (canvas, ctx) => {\r\n    const clouds = [];\r\n    const cloudCount = 10;\r\n    let gradientHeight;\r\n\r\n    function createCloud(x, y) {\r\n        const particleCount = Math.floor(Math.random() * 50) + 50;\r\n        const particles = [];\r\n\r\n        for (let i = 0; i < particleCount; i++) {\r\n            particles.push({\r\n                x: x + Math.random() * 200 - 100,\r\n                y: y + Math.random() * 100 - 50,\r\n                radius: Math.random() * 30 + 10\r\n            });\r\n        }\r\n\r\n        return {\r\n            particles,\r\n            x,\r\n            y,\r\n            speed: Math.random() * 0.5 + 0.1\r\n        };\r\n    }\r\n\r\n    for (let i = 0; i < cloudCount; i++) {\r\n        clouds.push(createCloud(Math.random() * canvas.width, Math.random() * (canvas.height / 2)));\r\n    }\r\n\r\n    // Create gradient for the sky\r\n    const createSkyGradient = () => {\r\n        gradientHeight = canvas.height;\r\n        const gradient = ctx.createLinearGradient(0, 0, 0, gradientHeight);\r\n        gradient.addColorStop(0, '#1e90ff');  // Dodger Blue\r\n        gradient.addColorStop(0.5, '#87ceeb'); // Sky Blue\r\n        gradient.addColorStop(1, '#e6f3ff');  // Very Light Blue\r\n        return gradient;\r\n    }\r\n\r\n    let skyGradient = createSkyGradient();\r\n\r\n    return () => {\r\n        // Redraw sky gradient if canvas size has changed\r\n        if (gradientHeight !== canvas.height) {\r\n            skyGradient = createSkyGradient();\r\n        }\r\n\r\n        // Draw sky\r\n        ctx.fillStyle = skyGradient;\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        clouds.forEach(cloud => {\r\n            cloud.x += cloud.speed;\r\n            if (cloud.x > canvas.width + 200) {\r\n                cloud.x = -200;\r\n            }\r\n\r\n            ctx.save();\r\n            ctx.translate(cloud.x, cloud.y);\r\n\r\n            // Draw cloud shadow\r\n            cloud.particles.forEach(particle => {\r\n                ctx.beginPath();\r\n                ctx.arc(particle.x + 5, particle.y + 5, particle.radius, 0, Math.PI * 2);\r\n                ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\r\n                ctx.fill();\r\n            });\r\n\r\n            // Draw cloud\r\n            cloud.particles.forEach(particle => {\r\n                ctx.beginPath();\r\n                ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);\r\n                const gradient = ctx.createRadialGradient(particle.x, particle.y, 0, particle.x, particle.y, particle.radius);\r\n                gradient.addColorStop(0, 'rgba(255, 255, 255, 0.8)');\r\n                gradient.addColorStop(1, 'rgba(255, 255, 255, 0.2)');\r\n                ctx.fillStyle = gradient;\r\n                ctx.fill();\r\n            });\r\n\r\n            ctx.restore();\r\n        });\r\n\r\n        // Optional: Add sun\r\n        const sunRadius = 40;\r\n        const sunGlow = 20;\r\n        ctx.beginPath();\r\n        ctx.arc(canvas.width - 100, 100, sunRadius, 0, Math.PI * 2);\r\n        const sunGradient = ctx.createRadialGradient(canvas.width - 100, 100, 0, canvas.width - 100, 100, sunRadius + sunGlow);\r\n        sunGradient.addColorStop(0, 'rgba(255, 255, 200, 1)');\r\n        sunGradient.addColorStop(0.8, 'rgba(255, 255, 0, 0.3)');\r\n        sunGradient.addColorStop(1, 'rgba(255, 255, 0, 0)');\r\n        ctx.fillStyle = sunGradient;\r\n        ctx.fill();\r\n    };\r\n};\r\n\r\nexport const autumnLeaves = (canvas, ctx) => {\r\n    const leaves = [];\r\n    const leafCount = 100;\r\n    const leafColors = ['#ff6b6b', '#feca57', '#ff9ff3', '#ff9f43', '#e17055'];\r\n    const leafImages = [\r\n        '1.jpg',\r\n        '2.jpg',\r\n    ];\r\n    const leafImagesLoaded = [];\r\n    let imagesLoaded = false;\r\n\r\n    // Load images\r\n    const loadImages = () => {\r\n        let loadedCount = 0;\r\n        leafImages.forEach((src, index) => {\r\n            const img = new Image();\r\n            img.onload = () => {\r\n                leafImagesLoaded[index] = img;\r\n                loadedCount++;\r\n                if (loadedCount === leafImages.length) {\r\n                    imagesLoaded = true;\r\n                }\r\n            };\r\n            img.onerror = () => {\r\n                loadedCount++;\r\n                if (loadedCount === leafImages.length) {\r\n                    imagesLoaded = true;\r\n                }\r\n            };\r\n            img.src = src;\r\n        });\r\n    };\r\n\r\n    loadImages();\r\n\r\n    for (let i = 0; i < leafCount; i++) {\r\n        leaves.push({\r\n            x: Math.random() * canvas.width,\r\n            y: Math.random() * canvas.height,\r\n            size: Math.random() * 20 + 10,\r\n            speed: Math.random() * 2 + 1,\r\n            amplitude: Math.random() * 20 + 10,\r\n            angle: Math.random() * Math.PI * 2,\r\n            angleSpeed: (Math.random() - 0.5) * 0.05,\r\n            imageIndex: Math.floor(Math.random() * leafImages.length),\r\n            color: leafColors[Math.floor(Math.random() * leafColors.length)]\r\n        });\r\n    }\r\n\r\n    const drawLeaf = (leaf) => {\r\n        ctx.save();\r\n        ctx.translate(leaf.x, leaf.y);\r\n        ctx.rotate(leaf.angle);\r\n\r\n        if (imagesLoaded && leafImagesLoaded[leaf.imageIndex]) {\r\n            ctx.drawImage(leafImagesLoaded[leaf.imageIndex], -leaf.size / 2, -leaf.size / 2, leaf.size, leaf.size);\r\n        } else {\r\n            // Fallback: draw a colored oval if image is not available\r\n            ctx.beginPath();\r\n            ctx.ellipse(0, 0, leaf.size / 2, leaf.size / 4, 0, 0, Math.PI * 2);\r\n            ctx.fillStyle = leaf.color;\r\n            ctx.fill();\r\n        }\r\n\r\n        ctx.restore();\r\n    };\r\n\r\n    return () => {\r\n        ctx.fillStyle = 'rgba(135, 206, 235, 0.1)';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        leaves.forEach(leaf => {\r\n            leaf.y += leaf.speed;\r\n            leaf.x += Math.sin(leaf.y * 0.01) * leaf.amplitude * 0.05;\r\n            leaf.angle += leaf.angleSpeed;\r\n\r\n            if (leaf.y > canvas.height) {\r\n                leaf.y = -leaf.size;\r\n                leaf.x = Math.random() * canvas.width;\r\n            }\r\n\r\n            drawLeaf(leaf);\r\n        });\r\n    };\r\n};\r\n\r\nexport const realisticRain = (canvas, ctx) => {\r\n    const raindrops = [];\r\n    const dropCount = 1000;\r\n    const splashes = [];\r\n\r\n    for (let i = 0; i < dropCount; i++) {\r\n        raindrops.push({\r\n            x: Math.random() * canvas.width,\r\n            y: Math.random() * canvas.height,\r\n            length: Math.random() * 20 + 10,\r\n            speed: Math.random() * 10 + 15\r\n        });\r\n    }\r\n\r\n    return () => {\r\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        // Draw and update raindrops\r\n        ctx.strokeStyle = 'rgba(174, 194, 224, 0.5)';\r\n        ctx.lineWidth = 1;\r\n        raindrops.forEach(drop => {\r\n            ctx.beginPath();\r\n            ctx.moveTo(drop.x, drop.y);\r\n            ctx.lineTo(drop.x, drop.y + drop.length);\r\n            ctx.stroke();\r\n\r\n            drop.y += drop.speed;\r\n\r\n            if (drop.y > canvas.height) {\r\n                drop.y = -drop.length;\r\n                splashes.push({\r\n                    x: drop.x,\r\n                    y: canvas.height,\r\n                    radius: Math.random() * 3 + 1,\r\n                    opacity: 1\r\n                });\r\n            }\r\n        });\r\n\r\n        // Draw and update splashes\r\n        splashes.forEach((splash, index) => {\r\n            ctx.beginPath();\r\n            ctx.arc(splash.x, splash.y, splash.radius, 0, Math.PI * 2);\r\n            ctx.fillStyle = `rgba(174, 194, 224, ${splash.opacity})`;\r\n            ctx.fill();\r\n\r\n            splash.radius += 0.1;\r\n            splash.opacity -= 0.03;\r\n\r\n            if (splash.opacity <= 0) {\r\n                splashes.splice(index, 1);\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const fallingFoodFiesta = (canvas, ctx) => {\r\n    const foodItems = [];\r\n    const foodTypes = ['🍔', '🍕', '🌭', '🍟', '🌮', '🍣', '🍩', '🍦', '🍎', '🍇', '🍓', '🍑', '🍍', '🥑', '🥕', '🥪', '🥨', '🧀', '🥐', '🥯', '🍱', '🍜', '🍙', '🍗', '🥟', '🥘', '🍤', '🥞', '🧇', '🥓'];\r\n    const numItems = 50;\r\n\r\n    // Lighter gradient colors\r\n    const colors = [\r\n        { r: 255, g: 102, b: 102 },  // Light Red\r\n        { r: 255, g: 178, b: 102 },  // Light Orange\r\n        { r: 255, g: 255, b: 153 },  // Light Yellow\r\n        { r: 153, g: 255, b: 153 },  // Light Green\r\n        { r: 153, g: 204, b: 255 },  // Light Blue\r\n        { r: 178, g: 102, b: 255 },  // Light Indigo\r\n        { r: 255, g: 153, b: 255 }   // Light Violet\r\n    ];\r\n\r\n    let colorIndex = 0;\r\n    let nextColorIndex = 1;\r\n    let colorT = 0;\r\n    const colorSpeed = 0.005;\r\n\r\n    for (let i = 0; i < numItems; i++) {\r\n        foodItems.push({\r\n            x: Math.random() * canvas.width,\r\n            y: Math.random() * canvas.height - canvas.height,\r\n            emoji: foodTypes[Math.floor(Math.random() * foodTypes.length)],\r\n            size: Math.random() * 20 + 30,\r\n            speed: Math.random() * 1.5 + 0.5,\r\n            rotation: Math.random() * Math.PI * 2,\r\n            rotationSpeed: (Math.random() * 2 - 1) * 0.02\r\n        });\r\n    }\r\n\r\n    const lerpColor = (color1, color2, t) => {\r\n        return {\r\n            r: Math.round(color1.r + (color2.r - color1.r) * t),\r\n            g: Math.round(color1.g + (color2.g - color1.g) * t),\r\n            b: Math.round(color1.b + (color2.b - color1.b) * t)\r\n        };\r\n    };\r\n\r\n    return () => {\r\n        // Update gradient colors\r\n        colorT += colorSpeed;\r\n        if (colorT >= 1) {\r\n            colorT = 0;\r\n            colorIndex = nextColorIndex;\r\n            nextColorIndex = (nextColorIndex + 1) % colors.length;\r\n        }\r\n        const currentColor = lerpColor(colors[colorIndex], colors[nextColorIndex], colorT);\r\n\r\n        // Create moving gradient with lighter colors\r\n        const gradient = ctx.createLinearGradient(0, 0, canvas.width, canvas.height);\r\n        gradient.addColorStop(0, `rgb(${currentColor.r}, ${currentColor.g}, ${currentColor.b})`);\r\n        gradient.addColorStop(1, `rgb(${255 - currentColor.r}, ${255 - currentColor.g}, ${255 - currentColor.b})`);\r\n\r\n        // Apply blur effect to the gradient\r\n        ctx.filter = 'blur(5px)';\r\n\r\n        // Draw gradient background\r\n        ctx.fillStyle = gradient;\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        // Reset filter for subsequent drawing\r\n        ctx.filter = 'none';\r\n\r\n        // Draw food items\r\n        foodItems.forEach(item => {\r\n            ctx.save();\r\n            ctx.translate(item.x, item.y);\r\n            ctx.rotate(item.rotation);\r\n            ctx.font = `${item.size}px Arial`;\r\n            ctx.textAlign = 'center';\r\n            ctx.textBaseline = 'middle';\r\n\r\n            // Add a white outline for better visibility\r\n            ctx.strokeStyle = 'white';\r\n            ctx.lineWidth = 3;\r\n            ctx.strokeText(item.emoji, 0, 0);\r\n\r\n            // Fill with black for contrast\r\n            ctx.fillStyle = 'black';\r\n            ctx.fillText(item.emoji, 0, 0);\r\n            ctx.restore();\r\n\r\n            item.y += item.speed;\r\n            item.rotation += item.rotationSpeed;\r\n            if (item.y > canvas.height + item.size) {\r\n                item.y = -item.size;\r\n                item.x = Math.random() * canvas.width;\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const hauntedForest = (canvas, ctx) => {\r\n    const trees = [];\r\n    const fireflies = [];\r\n    const fog = [];\r\n\r\n    // Initialize trees\r\n    for (let i = 0; i < 20; i++) {\r\n        trees.push({\r\n            x: Math.random() * canvas.width,\r\n            height: Math.random() * 200 + 100,\r\n            width: Math.random() * 20 + 10,\r\n        });\r\n    }\r\n\r\n    // Initialize fireflies\r\n    for (let i = 0; i < 50; i++) {\r\n        fireflies.push({\r\n            x: Math.random() * canvas.width,\r\n            y: Math.random() * canvas.height,\r\n            radius: Math.random() * 2 + 1,\r\n            speed: Math.random() * 0.5 + 0.1,\r\n            opacity: Math.random(),\r\n        });\r\n    }\r\n\r\n    // Initialize fog\r\n    for (let i = 0; i < 100; i++) {\r\n        fog.push({\r\n            x: Math.random() * canvas.width,\r\n            y: Math.random() * canvas.height,\r\n            radius: Math.random() * 50 + 20,\r\n            speed: Math.random() * 0.2 + 0.1,\r\n        });\r\n    }\r\n\r\n    return () => {\r\n        ctx.fillStyle = '#0a0a0a';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        // Draw trees\r\n        ctx.fillStyle = '#1a1a1a';\r\n        trees.forEach(tree => {\r\n            ctx.beginPath();\r\n            ctx.moveTo(tree.x, canvas.height);\r\n            ctx.lineTo(tree.x - tree.width / 2, canvas.height - tree.height);\r\n            ctx.lineTo(tree.x + tree.width / 2, canvas.height - tree.height);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        });\r\n\r\n        // Draw fog\r\n        ctx.fillStyle = 'rgba(200, 200, 200, 0.05)';\r\n        fog.forEach(particle => {\r\n            ctx.beginPath();\r\n            ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);\r\n            ctx.fill();\r\n\r\n            particle.x += particle.speed;\r\n            if (particle.x > canvas.width + particle.radius) {\r\n                particle.x = -particle.radius;\r\n            }\r\n        });\r\n\r\n        // Draw fireflies\r\n        fireflies.forEach(firefly => {\r\n            ctx.beginPath();\r\n            ctx.arc(firefly.x, firefly.y, firefly.radius, 0, Math.PI * 2);\r\n            ctx.fillStyle = `rgba(255, 255, 100, ${firefly.opacity})`;\r\n            ctx.fill();\r\n\r\n            firefly.x += Math.sin(Date.now() * 0.001) * firefly.speed;\r\n            firefly.y += Math.cos(Date.now() * 0.001) * firefly.speed;\r\n            firefly.opacity = Math.sin(Date.now() * 0.01) * 0.5 + 0.5;\r\n\r\n            if (firefly.x < 0) firefly.x = canvas.width;\r\n            if (firefly.x > canvas.width) firefly.x = 0;\r\n            if (firefly.y < 0) firefly.y = canvas.height;\r\n            if (firefly.y > canvas.height) firefly.y = 0;\r\n        });\r\n    };\r\n};\r\n\r\nexport const ghostlyApparitions = (canvas, ctx) => {\r\n    const ghosts = [];\r\n    const numGhosts = 5;\r\n\r\n    for (let i = 0; i < numGhosts; i++) {\r\n        ghosts.push({\r\n            x: Math.random() * canvas.width,\r\n            y: Math.random() * canvas.height,\r\n            size: Math.random() * 50 + 30,\r\n            speed: Math.random() * 0.5 + 0.1,\r\n            opacity: Math.random() * 0.5,\r\n        });\r\n    }\r\n\r\n    return () => {\r\n        ctx.fillStyle = '#000033';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        ghosts.forEach(ghost => {\r\n            ctx.beginPath();\r\n            ctx.moveTo(ghost.x, ghost.y);\r\n            ctx.bezierCurveTo(\r\n                ghost.x - ghost.size / 2, ghost.y - ghost.size / 2,\r\n                ghost.x - ghost.size / 2, ghost.y + ghost.size / 2,\r\n                ghost.x, ghost.y + ghost.size\r\n            );\r\n            ctx.bezierCurveTo(\r\n                ghost.x + ghost.size / 2, ghost.y + ghost.size / 2,\r\n                ghost.x + ghost.size / 2, ghost.y - ghost.size / 2,\r\n                ghost.x, ghost.y\r\n            );\r\n\r\n            const gradient = ctx.createRadialGradient(\r\n                ghost.x, ghost.y, 0,\r\n                ghost.x, ghost.y, ghost.size\r\n            );\r\n            gradient.addColorStop(0, `rgba(255, 255, 255, ${ghost.opacity})`);\r\n            gradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\r\n\r\n            ctx.fillStyle = gradient;\r\n            ctx.fill();\r\n\r\n            ghost.y -= ghost.speed;\r\n            ghost.opacity = Math.sin(Date.now() * 0.001) * 0.2 + 0.3;\r\n\r\n            if (ghost.y + ghost.size < 0) {\r\n                ghost.y = canvas.height + ghost.size;\r\n                ghost.x = Math.random() * canvas.width;\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const spiderwebOverlay = (canvas, ctx) => {\r\n    const webs = [];\r\n    const numWebs = 20;\r\n\r\n    for (let i = 0; i < numWebs; i++) {\r\n        webs.push({\r\n            x: Math.random() * canvas.width,\r\n            y: Math.random() * canvas.height,\r\n            size: Math.random() * 100 + 50,\r\n            rotation: Math.random() * Math.PI * 2,\r\n        });\r\n    }\r\n\r\n    const drawWeb = (x, y, size, rotation) => {\r\n        ctx.save();\r\n        ctx.translate(x, y);\r\n        ctx.rotate(rotation);\r\n\r\n        ctx.beginPath();\r\n        for (let i = 0; i < 8; i++) {\r\n            const angle = (Math.PI * 2 / 8) * i;\r\n            ctx.moveTo(0, 0);\r\n            ctx.lineTo(Math.cos(angle) * size, Math.sin(angle) * size);\r\n        }\r\n\r\n        for (let r = size / 4; r < size; r += size / 4) {\r\n            ctx.moveTo(r, 0);\r\n            for (let i = 1; i < 8; i++) {\r\n                const angle = (Math.PI * 2 / 8) * i;\r\n                ctx.lineTo(Math.cos(angle) * r, Math.sin(angle) * r);\r\n            }\r\n            ctx.closePath();\r\n        }\r\n\r\n        ctx.strokeStyle = 'rgba(255, 255, 255, 0.1)';\r\n        ctx.stroke();\r\n        ctx.restore();\r\n    };\r\n\r\n    return () => {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        webs.forEach(web => {\r\n            drawWeb(web.x, web.y, web.size, web.rotation);\r\n        });\r\n    };\r\n};\r\n\r\n// Add these to your existing backgroundAnimations.js file\r\n\r\nexport const undeadGraveyard = (canvas, ctx) => {\r\n    const graves = [];\r\n    const zombies = [];\r\n    const fog = [];\r\n\r\n    // Initialize graves\r\n    for (let i = 0; i < 15; i++) {\r\n        graves.push({\r\n            x: Math.random() * canvas.width,\r\n            y: canvas.height - Math.random() * 100 - 50,\r\n            width: Math.random() * 30 + 20,\r\n            height: Math.random() * 40 + 30\r\n        });\r\n    }\r\n\r\n    // Initialize zombies\r\n    for (let i = 0; i < 10; i++) {\r\n        zombies.push({\r\n            x: Math.random() * canvas.width,\r\n            y: canvas.height,\r\n            speed: Math.random() * 0.5 + 0.1,\r\n            size: Math.random() * 30 + 20\r\n        });\r\n    }\r\n\r\n    // Initialize fog\r\n    for (let i = 0; i < 50; i++) {\r\n        fog.push({\r\n            x: Math.random() * canvas.width,\r\n            y: Math.random() * canvas.height,\r\n            radius: Math.random() * 100 + 50,\r\n            speed: Math.random() * 0.2 + 0.1\r\n        });\r\n    }\r\n\r\n    return () => {\r\n        // Dark, eerie sky\r\n        const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\r\n        gradient.addColorStop(0, '#0a0a1a');\r\n        gradient.addColorStop(1, '#1a0a1a');\r\n        ctx.fillStyle = gradient;\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        // Moon\r\n        ctx.beginPath();\r\n        ctx.arc(canvas.width * 0.8, canvas.height * 0.2, 40, 0, Math.PI * 2);\r\n        ctx.fillStyle = 'rgba(255, 255, 200, 0.8)';\r\n        ctx.fill();\r\n\r\n        // Draw graves\r\n        ctx.fillStyle = '#333';\r\n        graves.forEach(grave => {\r\n            ctx.fillRect(grave.x, grave.y, grave.width, grave.height);\r\n            ctx.fillStyle = '#222';\r\n            ctx.fillRect(grave.x + grave.width * 0.1, grave.y, grave.width * 0.8, grave.height * 0.1);\r\n        });\r\n\r\n        // Draw zombies\r\n        zombies.forEach(zombie => {\r\n            ctx.beginPath();\r\n            ctx.arc(zombie.x, zombie.y - zombie.size, zombie.size * 0.5, 0, Math.PI * 2);\r\n            ctx.fillStyle = '#3a5';\r\n            ctx.fill();\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(zombie.x, zombie.y - zombie.size);\r\n            ctx.lineTo(zombie.x - zombie.size * 0.5, zombie.y);\r\n            ctx.lineTo(zombie.x + zombie.size * 0.5, zombie.y);\r\n            ctx.closePath();\r\n            ctx.fillStyle = '#3a5';\r\n            ctx.fill();\r\n\r\n            zombie.y -= zombie.speed;\r\n            if (zombie.y < canvas.height * 0.7) {\r\n                zombie.y = canvas.height;\r\n                zombie.x = Math.random() * canvas.width;\r\n            }\r\n        });\r\n\r\n        // Draw fog\r\n        ctx.fillStyle = 'rgba(255, 255, 255, 0.05)';\r\n        fog.forEach(particle => {\r\n            ctx.beginPath();\r\n            ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);\r\n            ctx.fill();\r\n\r\n            particle.x += particle.speed;\r\n            if (particle.x > canvas.width + particle.radius) {\r\n                particle.x = -particle.radius;\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const bloodRain = (canvas, ctx) => {\r\n    const drops = [];\r\n    const splats = [];\r\n\r\n    for (let i = 0; i < 200; i++) {\r\n        drops.push({\r\n            x: Math.random() * canvas.width,\r\n            y: Math.random() * canvas.height,\r\n            length: Math.random() * 20 + 10,\r\n            speed: Math.random() * 5 + 5\r\n        });\r\n    }\r\n\r\n    return () => {\r\n        ctx.fillStyle = 'rgba(20, 0, 0, 0.1)';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        // Draw rain\r\n        ctx.strokeStyle = '#800';\r\n        ctx.lineWidth = 1;\r\n        drops.forEach(drop => {\r\n            ctx.beginPath();\r\n            ctx.moveTo(drop.x, drop.y);\r\n            ctx.lineTo(drop.x, drop.y + drop.length);\r\n            ctx.stroke();\r\n\r\n            drop.y += drop.speed;\r\n\r\n            if (drop.y > canvas.height) {\r\n                drop.y = 0;\r\n                drop.x = Math.random() * canvas.width;\r\n\r\n                // Create a splat\r\n                splats.push({\r\n                    x: drop.x,\r\n                    y: canvas.height,\r\n                    size: Math.random() * 5 + 2,\r\n                    opacity: 1\r\n                });\r\n            }\r\n        });\r\n\r\n        // Draw splats\r\n        splats.forEach((splat, index) => {\r\n            ctx.beginPath();\r\n            ctx.arc(splat.x, splat.y, splat.size, 0, Math.PI * 2);\r\n            ctx.fillStyle = `rgba(128, 0, 0, ${splat.opacity})`;\r\n            ctx.fill();\r\n\r\n            splat.opacity -= 0.005;\r\n            if (splat.opacity <= 0) {\r\n                splats.splice(index, 1);\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const creepyCrawlies = (canvas, ctx) => {\r\n    const bugs = [];\r\n    const webNodes = [];\r\n\r\n    for (let i = 0; i < 50; i++) {\r\n        bugs.push({\r\n            x: Math.random() * canvas.width,\r\n            y: Math.random() * canvas.height,\r\n            size: Math.random() * 5 + 2,\r\n            speedX: Math.random() * 2 - 1,\r\n            speedY: Math.random() * 2 - 1\r\n        });\r\n    }\r\n\r\n    for (let i = 0; i < 20; i++) {\r\n        webNodes.push({\r\n            x: Math.random() * canvas.width,\r\n            y: Math.random() * canvas.height\r\n        });\r\n    }\r\n\r\n    return () => {\r\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        // Draw web\r\n        ctx.strokeStyle = 'rgba(255, 255, 255, 0.1)';\r\n        ctx.beginPath();\r\n        webNodes.forEach((node, index) => {\r\n            webNodes.slice(index + 1).forEach(otherNode => {\r\n                ctx.moveTo(node.x, node.y);\r\n                ctx.lineTo(otherNode.x, otherNode.y);\r\n            });\r\n        });\r\n        ctx.stroke();\r\n\r\n        // Draw and move bugs\r\n        ctx.fillStyle = '#400';\r\n        bugs.forEach(bug => {\r\n            ctx.beginPath();\r\n            ctx.arc(bug.x, bug.y, bug.size, 0, Math.PI * 2);\r\n            ctx.fill();\r\n\r\n            bug.x += bug.speedX;\r\n            bug.y += bug.speedY;\r\n\r\n            if (bug.x < 0 || bug.x > canvas.width) bug.speedX *= -1;\r\n            if (bug.y < 0 || bug.y > canvas.height) bug.speedY *= -1;\r\n\r\n            // Occasionally change direction\r\n            if (Math.random() < 0.01) {\r\n                bug.speedX = Math.random() * 2 - 1;\r\n                bug.speedY = Math.random() * 2 - 1;\r\n            }\r\n        });\r\n    };\r\n};","import React, { useRef, useEffect, useCallback } from 'react';\r\nimport {\r\n    starryNight, floatingBubbles,\r\n    gradientWave, particleNetwork, galaxySpiral,\r\n    rainbowWaves, geometricShapes, fireflies,\r\n    matrixRain, quantumField, electricStorm,\r\n    cosmicDust, neonPulse, auroraBorealis, oceanWaves,\r\n    neuralNetwork,\r\n    dnaHelix, snowFall, realisticRain, autumnLeaves, realisticClouds, fireflyForest, fallingFoodFiesta,\r\n    hauntedForest,\r\n    ghostlyApparitions,\r\n    spiderwebOverlay,\r\n    undeadGraveyard,\r\n    bloodRain,\r\n    creepyCrawlies,\r\n} from './backgroundAnimations';\r\n\r\nconst AnimatedBackground = ({ animationName, fallbackAnimation = 'geometricShapes', fps = 60, style }) => {\r\n    const canvasRef = useRef(null);\r\n    const animationRef = useRef(null);\r\n\r\n    const setupCanvas = useCallback(() => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        canvas.width = window.innerWidth;\r\n        canvas.height = window.innerHeight;\r\n\r\n        const animations = {\r\n            starryNight, floatingBubbles, gradientWave, particleNetwork, galaxySpiral,\r\n            rainbowWaves, geometricShapes, fireflies, matrixRain, quantumField,\r\n            electricStorm, cosmicDust, neonPulse, auroraBorealis, oceanWaves,\r\n            neuralNetwork, dnaHelix, snowFall, realisticRain, realisticClouds,\r\n            fireflyForest, autumnLeaves, fallingFoodFiesta,  hauntedForest,\r\n            ghostlyApparitions,\r\n            spiderwebOverlay,\r\n            undeadGraveyard,\r\n            bloodRain,\r\n            creepyCrawlies,\r\n        };\r\n\r\n        let animation = animations[animationName];\r\n\r\n        if (!animation) {\r\n            console.warn(`Animation \"${animationName}\" not found. Using fallback animation.`);\r\n            animation = animations[fallbackAnimation] || animations.geometricShapes;\r\n        }\r\n\r\n        return animation(canvas, ctx);\r\n    }, [animationName, fallbackAnimation]);\r\n\r\n    useEffect(() => {\r\n        const animate = () => {\r\n            const animation = setupCanvas();\r\n            let lastTime = 0;\r\n            const frameInterval = 1000 / fps;\r\n\r\n            const loop = (currentTime) => {\r\n                animationRef.current = requestAnimationFrame(loop);\r\n\r\n                const deltaTime = currentTime - lastTime;\r\n                if (deltaTime >= frameInterval) {\r\n                    lastTime = currentTime - (deltaTime % frameInterval);\r\n                    animation();\r\n                }\r\n            };\r\n\r\n            animationRef.current = requestAnimationFrame(loop);\r\n        };\r\n\r\n        animate();\r\n\r\n        const handleResize = () => {\r\n            if (canvasRef.current) {\r\n                canvasRef.current.width = window.innerWidth;\r\n                canvasRef.current.height = window.innerHeight;\r\n                setupCanvas();\r\n            }\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            if (animationRef.current) {\r\n                cancelAnimationFrame(animationRef.current);\r\n            }\r\n            window.removeEventListener('resize', handleResize);\r\n        };\r\n    }, [fps, setupCanvas]);\r\n\r\n    return (\r\n        <canvas\r\n            ref={canvasRef}\r\n            style={{\r\n                position: 'fixed',\r\n                top: 0,\r\n                left: 0,\r\n                width: '100%',\r\n                height: '100%',\r\n                zIndex: -1,\r\n                ...style\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport {\r\n    AnimatedBackground,\r\n    starryNight,\r\n    floatingBubbles,\r\n    gradientWave,\r\n    particleNetwork,\r\n    galaxySpiral,\r\n    rainbowWaves,\r\n    geometricShapes,\r\n    fireflies,\r\n    matrixRain,\r\n    quantumField,\r\n    electricStorm,\r\n    cosmicDust,\r\n    neonPulse,\r\n    auroraBorealis,\r\n    fallingFoodFiesta,\r\n    hauntedForest,\r\n    ghostlyApparitions,\r\n    spiderwebOverlay,\r\n    undeadGraveyard,\r\n    bloodRain,\r\n    creepyCrawlies,\r\n\r\n\r\n\r\n\r\n};"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,IAAMA,CAAA,GAAc,SAAAC,CAACC,CAAA,EAAQC,CAAA;IAEhC,KADA,IAAMC,CAAA,GAAQ,IACLC,CAAA,GAAI,GAAGA,CAAA,GAAI,KAAKA,CAAA,IACrBD,CAAA,CAAME,IAAA,CAAK;MACPC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGH,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA;MAC1BC,MAAA,EAAwB,IAAhBL,IAAA,CAAKC,MAAA;MACbK,EAAA,EAAIN,IAAA,CAAKO,KAAA,CAAsB,KAAhBP,IAAA,CAAKC,MAAA,MAAiB;MACrCO,EAAA,EAAIR,IAAA,CAAKO,KAAA,CAAsB,KAAhBP,IAAA,CAAKC,MAAA,MAAiB;MACrCQ,OAAA,EAAST,IAAA,CAAKC,MAAA;IAAA;IAItB,OAAO;MACHN,CAAA,CAAIe,SAAA,GAAY,yBAChBf,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GACxCT,CAAA,CAAIe,SAAA,GAAY,QAChBd,CAAA,CAAMgB,OAAA,CAAQ,UAAAhB,CAAA;QACVA,CAAA,CAAKa,OAAA,IAAW;QAChB,IAAMZ,CAAA,GAAUG,IAAA,CAAKa,GAAA,CAAIb,IAAA,CAAKc,GAAA,CAAIlB,CAAA,CAAKa,OAAA;QACvCd,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAIpB,CAAA,CAAKG,CAAA,EAAGH,CAAA,CAAKO,CAAA,EAAGP,CAAA,CAAKS,MAAA,EAAQ,GAAG,IAAIL,IAAA,CAAKiB,EAAA,GACjDtB,CAAA,CAAIe,SAAA,GAAS,uBAAAQ,MAAA,CAA0BrB,CAAA,EAAU,MACjDF,CAAA,CAAIwB,IAAA,IAEJvB,CAAA,CAAKG,CAAA,IAAKH,CAAA,CAAKU,EAAA,GAAK,IACpBV,CAAA,CAAKO,CAAA,IAAKP,CAAA,CAAKY,EAAA,GAAK,KAEhBZ,CAAA,CAAKG,CAAA,GAAI,KAAKH,CAAA,CAAKG,CAAA,GAAIL,CAAA,CAAOQ,KAAA,MAAON,CAAA,CAAKU,EAAA,IAAMV,CAAA,CAAKU,EAAA,IACrDV,CAAA,CAAKO,CAAA,GAAI,KAAKP,CAAA,CAAKO,CAAA,GAAIT,CAAA,CAAOU,MAAA,MAAQR,CAAA,CAAKY,EAAA,IAAMZ,CAAA,CAAKY,EAAA,CAC9D;MAAA;IAAA,CAER;EAAA;EAEaY,CAAA,GAAkB,SAAAC,CAAC3B,CAAA,EAAQC,CAAA;IAEpC,KADA,IAAMC,CAAA,GAAU,IACPC,CAAA,GAAI,GAAGA,CAAA,GAAI,IAAIA,CAAA,IACpBD,CAAA,CAAQE,IAAA,CAAK;MACTC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGH,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA;MAC1BC,MAAA,EAAwB,KAAhBL,IAAA,CAAKC,MAAA,KAAgB;MAC7BqB,KAAA,EAAuB,KAAhBtB,IAAA,CAAKC,MAAA,KAAiB;MAC7BsB,KAAA,EAAK,QAAAL,MAAA,CAA0B,MAAhBlB,IAAA,CAAKC,MAAA,IAAc;IAAA;IAI1C,OAAO;MACHN,CAAA,CAAIe,SAAA,GAAY,yBAChBf,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAExCR,CAAA,CAAQgB,OAAA,CAAQ,UAAAhB,CAAA;QACZD,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAIpB,CAAA,CAAOG,CAAA,EAAGH,CAAA,CAAOO,CAAA,EAAGP,CAAA,CAAOS,MAAA,EAAQ,GAAa,IAAVL,IAAA,CAAKiB,EAAA,GACnDtB,CAAA,CAAIe,SAAA,GAAYd,CAAA,CAAO2B,KAAA,EACvB5B,CAAA,CAAIwB,IAAA,IACJxB,CAAA,CAAI6B,WAAA,GAAc,4BAClB7B,CAAA,CAAI8B,MAAA,IAEJ7B,CAAA,CAAOO,CAAA,IAAKP,CAAA,CAAO0B,KAAA,EACnB1B,CAAA,CAAOG,CAAA,IAAiC,KAA5BC,IAAA,CAAKc,GAAA,CAAe,MAAXlB,CAAA,CAAOO,CAAA,GACxBP,CAAA,CAAOO,CAAA,GAAIP,CAAA,CAAOS,MAAA,GAAS,MAC3BT,CAAA,CAAOO,CAAA,GAAIT,CAAA,CAAOU,MAAA,GAASR,CAAA,CAAOS,MAAA,EAClCT,CAAA,CAAOG,CAAA,GAAIC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA,CAE1C;MAAA;IAAA,CAER;EAAA;EAEawB,CAAA,GAAe,SAAAC,CAACjC,CAAA,EAAQC,CAAA;IACjC,IAAIC,CAAA,GAAO;IAEX,OAAO;MACHA,CAAA,IAAQ;MAER,IAAMC,CAAA,GAAWF,CAAA,CAAIiC,oBAAA,CAAqB,GAAG,GAAGlC,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA;MACrEP,CAAA,CAASgC,YAAA,CAAa,GAAC,OAAAX,MAAA,CAAgB,KAAPtB,CAAA,GAAY,sBAC5CC,CAAA,CAASgC,YAAA,CAAa,GAAC,OAAAX,MAAA,EAAiB,KAAPtB,CAAA,GAAY,OAAO,sBAEpDD,CAAA,CAAIe,SAAA,GAAYb,CAAA,EAChBF,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA;MAExC,KAAK,IAAI0B,CAAA,GAAI,GAAGA,CAAA,GAAI,GAAGA,CAAA,IAAK;QACxBnC,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIoC,MAAA,CAAO,GAAmB,MAAhBrC,CAAA,CAAOU,MAAA,GAAgB0B,CAAA,GAAyB,KAArB9B,IAAA,CAAKc,GAAA,CAAIlB,CAAA,GAAOkC,CAAA;QACzD,KAAK,IAAIE,CAAA,GAAI,GAAGA,CAAA,GAAItC,CAAA,CAAOQ,KAAA,EAAO8B,CAAA,IAAK,IACnCrC,CAAA,CAAIsC,MAAA,CAAOD,CAAA,EAAmB,MAAhBtC,CAAA,CAAOU,MAAA,GAAgB0B,CAAA,GAAoC,KAAhC9B,IAAA,CAAKc,GAAA,CAAIlB,CAAA,GAAOkC,CAAA,GAAQ,MAAJE,CAAA;QAEjErC,CAAA,CAAI6B,WAAA,GAAW,uBAAAN,MAAA,CAA0B,KAAU,MAAJY,CAAA,EAAW,MAC1DnC,CAAA,CAAIuC,SAAA,GAAY,GAChBvC,CAAA,CAAI8B,MAAA,EACR;MAAA;IAAA,CAER;EAAA;EAEaU,CAAA,GAAkB,SAAAC,CAAC1C,CAAA,EAAQC,CAAA;IAKpC,KAJA,IAAMC,CAAA,GAAY,IAITC,CAAA,GAAI,GAAGA,CAAA,GAHM,KAGaA,CAAA,IAC/BD,CAAA,CAAUE,IAAA,CAAK;MACXC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGH,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA;MAC1BC,MAAA,EAAwB,IAAhBL,IAAA,CAAKC,MAAA,KAAe;MAC5BK,EAAA,EAAoB,MAAhBN,IAAA,CAAKC,MAAA,KAAiB;MAC1BO,EAAA,EAAoB,MAAhBR,IAAA,CAAKC,MAAA,KAAiB;MAC1BsB,KAAA,EAAK,OAAAL,MAAA,CAAyB,MAAhBlB,IAAA,CAAKC,MAAA,IAAc;IAAA;IAIzC,OAAO;MACHN,CAAA,CAAIe,SAAA,GAAY,yBAChBf,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAExCR,CAAA,CAAUgB,OAAA,CAAQ,UAAAhB,CAAA;QACdA,CAAA,CAASG,CAAA,IAAKH,CAAA,CAASU,EAAA,EACvBV,CAAA,CAASO,CAAA,IAAKP,CAAA,CAASY,EAAA,GAEnBZ,CAAA,CAASG,CAAA,GAAI,KAAKH,CAAA,CAASG,CAAA,GAAIL,CAAA,CAAOQ,KAAA,MAAON,CAAA,CAASU,EAAA,KAAO,KAC7DV,CAAA,CAASO,CAAA,GAAI,KAAKP,CAAA,CAASO,CAAA,GAAIT,CAAA,CAAOU,MAAA,MAAQR,CAAA,CAASY,EAAA,KAAO,IAElEb,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAIpB,CAAA,CAASG,CAAA,EAAGH,CAAA,CAASO,CAAA,EAAGP,CAAA,CAASS,MAAA,EAAQ,GAAa,IAAVL,IAAA,CAAKiB,EAAA,GACzDtB,CAAA,CAAIe,SAAA,GAAYd,CAAA,CAAS2B,KAAA,EACzB5B,CAAA,CAAIwB,IAAA,EACR;MAAA;MAEA,KAAK,IAAItB,CAAA,GAAI,GAAGA,CAAA,GAAID,CAAA,CAAUyC,MAAA,EAAQxC,CAAA,IAClC,KAAK,IAAIiC,CAAA,GAAIjC,CAAA,GAAI,GAAGiC,CAAA,GAAIlC,CAAA,CAAUyC,MAAA,EAAQP,CAAA,IAAK;QAC3C,IAAME,CAAA,GAAKpC,CAAA,CAAUC,CAAA,EAAGE,CAAA,GAAIH,CAAA,CAAUkC,CAAA,EAAG/B,CAAA;UACnCuC,CAAA,GAAK1C,CAAA,CAAUC,CAAA,EAAGM,CAAA,GAAIP,CAAA,CAAUkC,CAAA,EAAG3B,CAAA;UACnCoC,CAAA,GAAWvC,IAAA,CAAKwC,IAAA,CAAKR,CAAA,GAAKA,CAAA,GAAKM,CAAA,GAAKA,CAAA;QAEtCC,CAAA,GApCI,QAqCJ5C,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIoC,MAAA,CAAOnC,CAAA,CAAUC,CAAA,EAAGE,CAAA,EAAGH,CAAA,CAAUC,CAAA,EAAGM,CAAA,GACxCR,CAAA,CAAIsC,MAAA,CAAOrC,CAAA,CAAUkC,CAAA,EAAG/B,CAAA,EAAGH,CAAA,CAAUkC,CAAA,EAAG3B,CAAA,GACxCR,CAAA,CAAI6B,WAAA,GAAW,uBAAAN,MAAA,CAA0B,IAAIqB,CAAA,GAxCzC,KAwCkE,MACtE5C,CAAA,CAAIuC,SAAA,GAAY,IAChBvC,CAAA,CAAI8B,MAAA,GAEZ;MAAA;IAAA,CAGZ;EAAA;EACagB,CAAA,GAAe,SAAAC,CAAChD,CAAA,EAAQC,CAAA;IAAwB,IAAnBC,CAAA,GAAK+C,SAAA,CAAAN,MAAA,mBAAAM,SAAA,MAAAA,SAAA,MAAG;MACxC9C,CAAA,GAGN,UAAyBH,CAAA,EAAQC,CAAA;QAE7B,KADA,IAAMC,CAAA,GAAQ,IACLC,CAAA,GAAI,GAAGA,CAAA,GAAIF,CAAA,EAAWE,CAAA,IAAK;UAChC,IAAMiC,CAAA,GAAW9B,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA,GAAQ;YAC1C8B,CAAA,GAAQhC,IAAA,CAAKC,MAAA,KAAWD,IAAA,CAAKiB,EAAA,GAAK;UACxCrB,CAAA,CAAME,IAAA,CAAK;YACPC,CAAA,EAAGC,IAAA,CAAK4C,GAAA,CAAIZ,CAAA,IAASF,CAAA;YACrB3B,CAAA,EAAGH,IAAA,CAAKc,GAAA,CAAIkB,CAAA,IAASF,CAAA;YACrBzB,MAAA,EAAwB,MAAhBL,IAAA,CAAKC,MAAA,KAAiB;YAC9BsB,KAAA,EAAK,OAAAL,MAAA,CAAyB,KAAhBlB,IAAA,CAAKC,MAAA,KAAgB,KAAgB;YACnD4C,KAAA,EAAOb,CAAA;YACPc,QAAA,EAAUhB;UAAA,EAElB;QAAA;QACA,OAAOlC,CACX;MAAA,CAlBc,CAAgBF,CAAA,EAAQ;MAClCoC,CAAA,GAAW;IAkCf,OAAO;MACHnC,CAAA,CAAIe,SAAA,GAAY,yBAChBf,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAExCT,CAAA,CAAIoD,IAAA,IACJpD,CAAA,CAAIqD,SAAA,CAAUtD,CAAA,CAAOQ,KAAA,GAAQ,GAAGR,CAAA,CAAOU,MAAA,GAAS,IAChDT,CAAA,CAAIsD,MAAA,CAAOnB,CAAA,GArBf,UAAmBpC,CAAA,EAAKC,CAAA,EAAOC,CAAA,EAAUC,CAAA;QACrCF,CAAA,CAAMiB,OAAA,CAAQ,UAAAjB,CAAA;UACV,IAAMC,CAAA,GAAII,IAAA,CAAK4C,GAAA,CAAIjD,CAAA,CAAKkD,KAAA,IAASlD,CAAA,CAAKmD,QAAA;YAChChB,CAAA,GAAI9B,IAAA,CAAKc,GAAA,CAAInB,CAAA,CAAKkD,KAAA,IAASlD,CAAA,CAAKmD,QAAA;UAEtCpD,CAAA,CAAIqB,SAAA,IACJrB,CAAA,CAAIsB,GAAA,CAAIpB,CAAA,EAAGkC,CAAA,EAAGnC,CAAA,CAAKU,MAAA,EAAQ,GAAa,IAAVL,IAAA,CAAKiB,EAAA,GACnCvB,CAAA,CAAIgB,SAAA,GAAYf,CAAA,CAAK4B,KAAA,EACrB7B,CAAA,CAAIyB,IAAA,IAGJxB,CAAA,CAAKkD,KAAA,IAAShD,CAAA,IAAyB,OAAhBF,CAAA,CAAKmD,QAAA,CAChC;QAAA,EACJ;MAAA,CAUI,CAAUnD,CAAA,EAAKE,CAAA,EAAO,GAAUD,CAAA,GAEhCD,CAAA,CAAIuD,OAAA,IAEJpB,CAAA,IAAYlC,CAAA;IAAA,CAEpB;EAAA;EACaO,CAAA,GAAe,SAAAgD,CAACzD,CAAA,EAAQC,CAAA;IACjC,IAAIC,CAAA,GAAO;MAELC,CAAA,GAAS,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW;IAElF,OAAO;MACHF,CAAA,CAAIe,SAAA,GAAY,uBAChBf,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GACxCR,CAAA,IAAQ;MAER,KAAK,IAAIkC,CAAA,GAAI,GAAGA,CAAA,GARN,GAQiBA,CAAA,IAAK;QAC5BnC,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIoC,MAAA,CAAO,GAAGrC,CAAA,CAAOU,MAAA,GAAS;QAE9B,KAAK,IAAI4B,CAAA,GAAI,GAAGA,CAAA,GAAItC,CAAA,CAAOQ,KAAA,EAAO8B,CAAA,IAAK;UACnC,IAAMM,CAAA,GAA0C,KAAtCtC,IAAA,CAAKc,GAAA,CAAQ,MAAJkB,CAAA,GAAWpC,CAAA,GAAW,KAAJkC,CAAA,IACW,KAA5C9B,IAAA,CAAK4C,GAAA,CAAQ,MAAJZ,CAAA,GAAkB,KAAPpC,CAAA,GAAiB,KAAJkC,CAAA,IACjCpC,CAAA,CAAOU,MAAA,GAAS;UACpBT,CAAA,CAAIsC,MAAA,CAAOD,CAAA,EAAGM,CAAA,CAClB;QAAA;QAEA3C,CAAA,CAAI6B,WAAA,GAAc3B,CAAA,CAAOiC,CAAA,GAAIjC,CAAA,CAAOwC,MAAA,GACpC1C,CAAA,CAAIuC,SAAA,GAAY,GAChBvC,CAAA,CAAI8B,MAAA,EACR;MAAA;IAAA,CAER;EAAA;EACa2B,CAAA,GAAiB,SAAAC,CAAC3D,CAAA,EAAQC,CAAA;IACnC,IAAIC,CAAA,GAAO;MACLC,CAAA,GAAa,CACf;QAAEyD,GAAA,EAAK;QAAG/B,KAAA,EAAO;MAAA,GACjB;QAAE+B,GAAA,EAAK;QAAK/B,KAAA,EAAO;MAAA,GACnB;QAAE+B,GAAA,EAAK;QAAG/B,KAAA,EAAO;MAAA;IAGrB,OAAO;MACH5B,CAAA,CAAIe,SAAA,GAAY,uBAChBf,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GACxCR,CAAA,IAAQ;MAER,KAFc,IAAAkC,CAAA,YAAAA,CAAA;UAGV,IAAMA,CAAA,GAAWnC,CAAA,CAAIiC,oBAAA,CAAqB,GAAG,GAAGlC,CAAA,CAAOQ,KAAA,EAAO;UAC9DL,CAAA,CAAWe,OAAA,CAAQ,UAAAlB,CAAA;YACfoC,CAAA,CAASD,YAAA,CAAanC,CAAA,CAAK4D,GAAA,EAAK5D,CAAA,CAAK6B,KAAA,CACzC;UAAA,IAEA5B,CAAA,CAAIoB,SAAA;UACJ,KAAK,IAAIuB,CAAA,GAAI,GAAGA,CAAA,GAAI5C,CAAA,CAAOQ,KAAA,EAAOoC,CAAA,IAAK;YACnC,IAAMC,CAAA,GAAoC,KAAhCvC,IAAA,CAAKc,GAAA,CAAQ,MAAJwB,CAAA,GAAW1C,CAAA,GAAOoC,CAAA,IACK,KAAtChC,IAAA,CAAKc,GAAA,CAAQ,MAAJwB,CAAA,GAAkB,MAAP1C,CAAA,GAAaoC,CAAA,IACjCtC,CAAA,CAAOU,MAAA,IAAU,KAAU,KAAJ4B,CAAA;YAC3BrC,CAAA,CAAIsC,MAAA,CAAOK,CAAA,EAAGC,CAAA,CAClB;UAAA;UACA5C,CAAA,CAAIsC,MAAA,CAAOvC,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAChCT,CAAA,CAAIsC,MAAA,CAAO,GAAGvC,CAAA,CAAOU,MAAA,GACrBT,CAAA,CAAI4D,SAAA,IAEJ5D,CAAA,CAAIe,SAAA,GAAYoB,CAAA,EAChBnC,CAAA,CAAIwB,IAAA;QAAA,GAlBCa,CAAA,GAAI,GAAGA,CAAA,GAAI,GAAGA,CAAA,IAAGF,CAAA;IAAA,CAqBlC;EAAA;EACa0B,CAAA,GAAY,SAAAC,CAAC/D,CAAA,EAAQC,CAAA;IAI9B,KAHA,IAAMC,CAAA,GAAU,IACVC,CAAA,GAAS,CAAC,WAAW,WAAW,WAAW,YAExCiC,CAAA,GAAI,GAAGA,CAAA,GAAI,IAAIA,CAAA,IACpBlC,CAAA,CAAQE,IAAA,CAAK;MACTC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGH,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA;MAC1BC,MAAA,EAAwB,KAAhBL,IAAA,CAAKC,MAAA,KAAgB;MAC7BsB,KAAA,EAAO1B,CAAA,CAAOG,IAAA,CAAKO,KAAA,CAAMP,IAAA,CAAKC,MAAA,KAAWJ,CAAA,CAAOwC,MAAA;MAChDqB,KAAA,EAAO1D,IAAA,CAAKC,MAAA,KAAWD,IAAA,CAAKiB,EAAA,GAAK;IAAA;IAIzC,OAAO;MACHtB,CAAA,CAAIe,SAAA,GAAY,sBAChBf,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAExCR,CAAA,CAAQgB,OAAA,CAAQ,UAAAlB,CAAA;QACZ,IAAME,CAAA,GAAgC,KAAzBI,IAAA,CAAKc,GAAA,CAAIpB,CAAA,CAAOgE,KAAA,IAAc;UACrC7D,CAAA,GAAWF,CAAA,CAAIgE,oBAAA,CACjBjE,CAAA,CAAOK,CAAA,EAAGL,CAAA,CAAOS,CAAA,EAAG,GACpBT,CAAA,CAAOK,CAAA,EAAGL,CAAA,CAAOS,CAAA,EAAGT,CAAA,CAAOW,MAAA;QAE/BR,CAAA,CAASgC,YAAA,CAAa,GAAGnC,CAAA,CAAO6B,KAAA,GAChC1B,CAAA,CAASgC,YAAA,CAAa,GAAG,qBAEzBlC,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAItB,CAAA,CAAOK,CAAA,EAAGL,CAAA,CAAOS,CAAA,EAAGT,CAAA,CAAOW,MAAA,GAAST,CAAA,EAAM,GAAa,IAAVI,IAAA,CAAKiB,EAAA,GAC1DtB,CAAA,CAAIe,SAAA,GAAYb,CAAA,EAChBF,CAAA,CAAIwB,IAAA,IAEJzB,CAAA,CAAOgE,KAAA,IAAS,GACpB;MAAA;IAAA,CAER;EAAA;EACaE,CAAA,GAAa,SAAAC,CAACnE,CAAA,EAAQC,CAAA;IAI/B,KAHA,IAAMC,CAAA,GAAY,IAGTC,CAAA,GAAI,GAAGA,CAAA,GAFM,KAEaA,CAAA,IAC/BD,CAAA,CAAUE,IAAA,CAAK;MACXC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGH,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA;MAC1B0D,IAAA,EAAsB,IAAhB9D,IAAA,CAAKC,MAAA,KAAe;MAC1B8D,MAAA,EAAgC,MAAvB/D,IAAA,CAAKC,MAAA,KAAW;MACzB+D,MAAA,EAAgC,MAAvBhE,IAAA,CAAKC,MAAA,KAAW;MACzBsB,KAAA,EAAK,OAAAL,MAAA,CAAyB,KAAhBlB,IAAA,CAAKC,MAAA,KAAgB,KAAG;IAAA;IAI9C,OAAO;MACHN,CAAA,CAAIe,SAAA,GAAY,wBAChBf,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAExCR,CAAA,CAAUgB,OAAA,CAAQ,UAAAhB,CAAA;QACdD,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAIpB,CAAA,CAASG,CAAA,EAAGH,CAAA,CAASO,CAAA,EAAGP,CAAA,CAASkE,IAAA,EAAM,GAAa,IAAV9D,IAAA,CAAKiB,EAAA,GACvDtB,CAAA,CAAIe,SAAA,GAAYd,CAAA,CAAS2B,KAAA,EACzB5B,CAAA,CAAIwB,IAAA,IAEJvB,CAAA,CAASG,CAAA,IAAKH,CAAA,CAASmE,MAAA,EACvBnE,CAAA,CAASO,CAAA,IAAKP,CAAA,CAASoE,MAAA,GAEnBpE,CAAA,CAASG,CAAA,GAAI,KAAKH,CAAA,CAASG,CAAA,GAAIL,CAAA,CAAOQ,KAAA,MAAON,CAAA,CAASmE,MAAA,KAAW,KACjEnE,CAAA,CAASO,CAAA,GAAI,KAAKP,CAAA,CAASO,CAAA,GAAIT,CAAA,CAAOU,MAAA,MAAQR,CAAA,CAASoE,MAAA,KAAW,EAC1E;MAAA;IAAA,CAER;EAAA;EACaC,CAAA,GAAgB,SAAAC,CAACxE,CAAA,EAAQC,CAAA;IAElC,IAAMC,CAAA,GAAQ;IAqBd,OAAO;MACHD,CAAA,CAAIe,SAAA,GAAY,uBAChBf,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAGpCJ,IAAA,CAAKC,MAAA,KAAW,MAAKL,CAAA,CAAME,IAAA,CAxBnC;QAMI,KALA,IACIH,CAAA,GADWK,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA,EAElCN,CAAA,GAAI,GACFC,CAAA,GAAS,CAAC;YAAEE,CAAA,EAAAJ,CAAA;YAAGQ,CAAA,EAAAP;UAAA,IAEdA,CAAA,GAAIF,CAAA,CAAOU,MAAA,GACdT,CAAA,IAA6B,MAAvBK,IAAA,CAAKC,MAAA,KAAW,KACtBL,CAAA,IAAqB,KAAhBI,IAAA,CAAKC,MAAA,KAAgB,IAC1BJ,CAAA,CAAOC,IAAA,CAAK;UAAEC,CAAA,EAAAJ,CAAA;UAAGQ,CAAA,EAAAP;QAAA;QAGrB,OAAO;UACHuE,MAAA,EAAAtE,CAAA;UACAuE,IAAA,EAAM,IAAoB,IAAhBpE,IAAA,CAAKC,MAAA;UACfC,KAAA,EAAuB,IAAhBF,IAAA,CAAKC,MAAA,KAAe;QAAA,CAEnC;MAAA,CAOwC,KAEpCL,CAAA,CAAMgB,OAAA,CAAQ,UAAClB,CAAA,EAAMG,CAAA;QACjBF,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIoC,MAAA,CAAOrC,CAAA,CAAKyE,MAAA,CAAO,GAAGpE,CAAA,EAAGL,CAAA,CAAKyE,MAAA,CAAO,GAAGhE,CAAA;QAC5C,KAAK,IAAI2B,CAAA,GAAI,GAAGA,CAAA,GAAIpC,CAAA,CAAKyE,MAAA,CAAO9B,MAAA,EAAQP,CAAA,IACpCnC,CAAA,CAAIsC,MAAA,CAAOvC,CAAA,CAAKyE,MAAA,CAAOrC,CAAA,EAAG/B,CAAA,EAAGL,CAAA,CAAKyE,MAAA,CAAOrC,CAAA,EAAG3B,CAAA;QAEhDR,CAAA,CAAI6B,WAAA,GAAW,uBAAAN,MAAA,CAA0BxB,CAAA,CAAK0E,IAAA,GAAO,IAAK,MAC1DzE,CAAA,CAAIuC,SAAA,GAAYxC,CAAA,CAAKQ,KAAA,EACrBP,CAAA,CAAI8B,MAAA,IAEJ/B,CAAA,CAAK0E,IAAA,IAAQ,IACT1E,CAAA,CAAK0E,IAAA,IAAQ,KAAGxE,CAAA,CAAMyE,MAAA,CAAOxE,CAAA,EAAO,EAC5C;MAAA;IAAA,CAER;EAAA;EAEaE,CAAA,GAAe,SAAAuE,CAAC5E,CAAA,EAAQC,CAAA;IAIjC,KAHA,IAAMC,CAAA,GAAY,IAGTC,CAAA,GAAI,GAAGA,CAAA,GAFM,KAEaA,CAAA,IAC/BD,CAAA,CAAUE,IAAA,CAAK;MACXC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGH,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA;MAC1B0D,IAAA,EAAsB,IAAhB9D,IAAA,CAAKC,MAAA,KAAe;MAC1B8D,MAAA,EAAgC,KAAvB/D,IAAA,CAAKC,MAAA,KAAW;MACzB+D,MAAA,EAAgC,KAAvBhE,IAAA,CAAKC,MAAA,KAAW;MACzBsE,GAAA,EAAqB,MAAhBvE,IAAA,CAAKC,MAAA;IAAA;IAIlB,OAAO;MACHN,CAAA,CAAIe,SAAA,GAAY,uBAChBf,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAExCR,CAAA,CAAUgB,OAAA,CAAQ,UAAAf,CAAA;QACdA,CAAA,CAASE,CAAA,IAAKF,CAAA,CAASkE,MAAA,EACvBlE,CAAA,CAASM,CAAA,IAAKN,CAAA,CAASmE,MAAA,GAEnBnE,CAAA,CAASE,CAAA,GAAI,KAAKF,CAAA,CAASE,CAAA,GAAIL,CAAA,CAAOQ,KAAA,MAAOL,CAAA,CAASkE,MAAA,KAAW,KACjElE,CAAA,CAASM,CAAA,GAAI,KAAKN,CAAA,CAASM,CAAA,GAAIT,CAAA,CAAOU,MAAA,MAAQP,CAAA,CAASmE,MAAA,KAAW,IAEtErE,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAInB,CAAA,CAASE,CAAA,EAAGF,CAAA,CAASM,CAAA,EAAGN,CAAA,CAASiE,IAAA,EAAM,GAAa,IAAV9D,IAAA,CAAKiB,EAAA,GACvDtB,CAAA,CAAIe,SAAA,GAAS,QAAAQ,MAAA,CAAWrB,CAAA,CAAS0E,GAAA,EAAsB,sBACvD5E,CAAA,CAAIwB,IAAA,IAEJvB,CAAA,CAAUgB,OAAA,CAAQ,UAAAlB,CAAA;UACd,IAAME,CAAA,GAAKC,CAAA,CAASE,CAAA,GAAIL,CAAA,CAAcK,CAAA;YAChC+B,CAAA,GAAKjC,CAAA,CAASM,CAAA,GAAIT,CAAA,CAAcS,CAAA;YAChC6B,CAAA,GAAWhC,IAAA,CAAKwC,IAAA,CAAK5C,CAAA,GAAKA,CAAA,GAAKkC,CAAA,GAAKA,CAAA;UAEtCE,CAAA,GAAW,QACXrC,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIoC,MAAA,CAAOlC,CAAA,CAASE,CAAA,EAAGF,CAAA,CAASM,CAAA,GAChCR,CAAA,CAAIsC,MAAA,CAAOvC,CAAA,CAAcK,CAAA,EAAGL,CAAA,CAAcS,CAAA,GAC1CR,CAAA,CAAI6B,WAAA,GAAW,QAAAN,MAAA,EAAYrB,CAAA,CAAS0E,GAAA,GAAM7E,CAAA,CAAc6E,GAAA,IAAO,GAAC,iBAAArD,MAAA,CAAgB,IAAIc,CAAA,GAAW,KAAM,MACrGrC,CAAA,CAAI8B,MAAA,GAEZ;QAAA,IAEA5B,CAAA,CAAS0E,GAAA,IAAO1E,CAAA,CAAS0E,GAAA,GAAM,MAAO,GAC1C;MAAA;IAAA,CAER;EAAA;EAEaC,CAAA,GAAkB,SAAAC,CAAC/E,CAAA,EAAQC,CAAA;IAIpC,KAHA,IAAMC,CAAA,GAAS,IAGNC,CAAA,GAAI,GAAGA,CAAA,GAFG,IAEaA,CAAA,IAC5BD,CAAA,CAAOE,IAAA,CAAK;MACRC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGH,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA;MAC1B0D,IAAA,EAAsB,KAAhB9D,IAAA,CAAKC,MAAA,KAAgB;MAC3ByE,IAAA,EAAM1E,IAAA,CAAKO,KAAA,CAAsB,IAAhBP,IAAA,CAAKC,MAAA;MACtB0E,QAAA,EAAU3E,IAAA,CAAKC,MAAA,KAAWD,IAAA,CAAKiB,EAAA,GAAK;MACpCK,KAAA,EAAuB,KAAhBtB,IAAA,CAAKC,MAAA,KAAiB;MAC7BsB,KAAA,EAAK,OAAAL,MAAA,CAAyB,MAAhBlB,IAAA,CAAKC,MAAA,IAAc;IAAA;IAIzC,OAAO;MACHN,CAAA,CAAIiF,SAAA,CAAU,GAAG,GAAGlF,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAEzCR,CAAA,CAAOgB,OAAA,CAAQ,UAAAhB,CAAA;QAMX,QALAD,CAAA,CAAIoD,IAAA,IACJpD,CAAA,CAAIqD,SAAA,CAAUpD,CAAA,CAAMG,CAAA,EAAGH,CAAA,CAAMO,CAAA,GAC7BR,CAAA,CAAIsD,MAAA,CAAOrD,CAAA,CAAM+E,QAAA,GACjBhF,CAAA,CAAIe,SAAA,GAAYd,CAAA,CAAM2B,KAAA,EAEd3B,CAAA,CAAM8E,IAAA;UACV,KAAK;YACD/E,CAAA,CAAIgB,QAAA,EAAUf,CAAA,CAAMkE,IAAA,GAAO,IAAIlE,CAAA,CAAMkE,IAAA,GAAO,GAAGlE,CAAA,CAAMkE,IAAA,EAAMlE,CAAA,CAAMkE,IAAA;YACjE;UACJ,KAAK;YACDnE,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAI,GAAG,GAAGpB,CAAA,CAAMkE,IAAA,GAAO,GAAG,GAAa,IAAV9D,IAAA,CAAKiB,EAAA,GACtCtB,CAAA,CAAIwB,IAAA;YACJ;UACJ,KAAK;YACDxB,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIoC,MAAA,CAAO,IAAInC,CAAA,CAAMkE,IAAA,GAAO,IAC5BnE,CAAA,CAAIsC,MAAA,CAAOrC,CAAA,CAAMkE,IAAA,GAAO,GAAGlE,CAAA,CAAMkE,IAAA,GAAO,IACxCnE,CAAA,CAAIsC,MAAA,EAAQrC,CAAA,CAAMkE,IAAA,GAAO,GAAGlE,CAAA,CAAMkE,IAAA,GAAO,IACzCnE,CAAA,CAAI4D,SAAA,IACJ5D,CAAA,CAAIwB,IAAA;QAAA;QAIZxB,CAAA,CAAIuD,OAAA,IAEJtD,CAAA,CAAM+E,QAAA,IAA0B,MAAd/E,CAAA,CAAM0B,KAAA,EACxB1B,CAAA,CAAMO,CAAA,IAAKP,CAAA,CAAM0B,KAAA,EACb1B,CAAA,CAAMO,CAAA,GAAIT,CAAA,CAAOU,MAAA,GAASR,CAAA,CAAMkE,IAAA,KAChClE,CAAA,CAAMO,CAAA,IAAKP,CAAA,CAAMkE,IAAA,EACjBlE,CAAA,CAAMG,CAAA,GAAIC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA,CAEzC;MAAA;IAAA,CAER;EAAA;EAEa2E,CAAA,GAAY,SAAAC,CAACpF,CAAA,EAAQC,CAAA;IAI9B,KAHA,IAAMC,CAAA,GAAY,IAGTC,CAAA,GAAI,GAAGA,CAAA,GAFK,KAEaA,CAAA,IAC9BD,CAAA,CAAUE,IAAA,CAAK;MACXC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGH,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA;MAC1B0D,IAAA,EAAsB,IAAhB9D,IAAA,CAAKC,MAAA,KAAe;MAC1BqB,KAAA,EAAuB,KAAhBtB,IAAA,CAAKC,MAAA,KAAiB;MAC7B8E,UAAA,EAAY/E,IAAA,CAAKC,MAAA;MACjB4C,KAAA,EAAO7C,IAAA,CAAKC,MAAA,KAAWD,IAAA,CAAKiB,EAAA,GAAK;IAAA;IAIzC,OAAO;MACHtB,CAAA,CAAIe,SAAA,GAAY,sBAChBf,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAExCR,CAAA,CAAUgB,OAAA,CAAQ,UAAAhB,CAAA;QACdA,CAAA,CAAQmF,UAAA,IAA8B,KAAhB/E,IAAA,CAAKC,MAAA,KAAiB,KAC5CL,CAAA,CAAQmF,UAAA,GAAa/E,IAAA,CAAKgF,GAAA,CAAI,GAAGhF,IAAA,CAAKiF,GAAA,CAAI,GAAGrF,CAAA,CAAQmF,UAAA,IAErDpF,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAIpB,CAAA,CAAQG,CAAA,EAAGH,CAAA,CAAQO,CAAA,EAAGP,CAAA,CAAQkE,IAAA,EAAM,GAAa,IAAV9D,IAAA,CAAKiB,EAAA,GACpDtB,CAAA,CAAIe,SAAA,GAAS,uBAAAQ,MAAA,CAA0BtB,CAAA,CAAQmF,UAAA,EAAa,MAC5DpF,CAAA,CAAIwB,IAAA,IAEJvB,CAAA,CAAQG,CAAA,IAAKC,IAAA,CAAK4C,GAAA,CAAIhD,CAAA,CAAQiD,KAAA,IAASjD,CAAA,CAAQ0B,KAAA,EAC/C1B,CAAA,CAAQO,CAAA,IAAKH,IAAA,CAAKc,GAAA,CAAIlB,CAAA,CAAQiD,KAAA,IAASjD,CAAA,CAAQ0B,KAAA,GAE3C1B,CAAA,CAAQG,CAAA,GAAI,KAAKH,CAAA,CAAQG,CAAA,GAAIL,CAAA,CAAOQ,KAAA,IAASN,CAAA,CAAQO,CAAA,GAAI,KAAKP,CAAA,CAAQO,CAAA,GAAIT,CAAA,CAAOU,MAAA,MACjFR,CAAA,CAAQiD,KAAA,IAAS7C,IAAA,CAAKiB,EAAA,GAGtBjB,IAAA,CAAKC,MAAA,KAAW,QAChBL,CAAA,CAAQiD,KAAA,GAAQ7C,IAAA,CAAKC,MAAA,KAAWD,IAAA,CAAKiB,EAAA,GAAK,EAElD;MAAA;IAAA,CAER;EAAA;EAEaiE,CAAA,GAAa,SAAAC,CAACzF,CAAA,EAAQC,CAAA;IAI/B,KAHA,IAAMC,CAAA,GAAUI,IAAA,CAAKO,KAAA,CAAMb,CAAA,CAAOQ,KAAA,GAAQ,KACpCL,CAAA,GAAQ,IAELiC,CAAA,GAAI,GAAGA,CAAA,GAAIlC,CAAA,EAASkC,CAAA,IACzBjC,CAAA,CAAMiC,CAAA,IAAK9B,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA;IAGtC,IAAM4B,CAAA,GAAa;IAEnB,OAAO;MACHrC,CAAA,CAAIe,SAAA,GAAY,uBAChBf,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAExCT,CAAA,CAAIe,SAAA,GAAY,QAChBf,CAAA,CAAIyF,IAAA,GAAO;MAEX,KAAK,IAAIxF,CAAA,GAAI,GAAGA,CAAA,GAAIC,CAAA,CAAMwC,MAAA,EAAQzC,CAAA,IAAK;QACnC,IAAMkC,CAAA,GAAOE,CAAA,CAAWhC,IAAA,CAAKO,KAAA,CAAsB,KAAhBP,IAAA,CAAKC,MAAA;QACxCN,CAAA,CAAI0F,QAAA,CAASvD,CAAA,EAAU,KAAJlC,CAAA,EAAmB,KAAXC,CAAA,CAAMD,CAAA,IAElB,KAAXC,CAAA,CAAMD,CAAA,IAAUF,CAAA,CAAOU,MAAA,IAAUJ,IAAA,CAAKC,MAAA,KAAW,SACjDJ,CAAA,CAAMD,CAAA,IAAK,IAEfC,CAAA,CAAMD,CAAA,KAAM,EAChB;MAAA;IAAA,CAER;EAAA;EAGa0F,CAAA,GAAW,SAAAC,CAAC7F,CAAA,EAAQC,CAAA;IAC7B,IAIIC,CAAA,GAAI;IAER,OAAO;MACHD,CAAA,CAAIe,SAAA,GAAY,sBAChBf,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAExCT,CAAA,CAAIoD,IAAA,IACJpD,CAAA,CAAIqD,SAAA,CAAUtD,CAAA,CAAOQ,KAAA,GAAQ,GAAGR,CAAA,CAAOU,MAAA,GAAS;MAEhD,KAAK,IAAIP,CAAA,GAAI,GAAGA,CAAA,GAAI,GAAGA,CAAA,IAAK;QACxBF,CAAA,CAAIoB,SAAA;QACJ,KAAK,IAAIe,CAAA,IAAKpC,CAAA,CAAOQ,KAAA,GAAQ,GAAG4B,CAAA,GAAIpC,CAAA,CAAOQ,KAAA,GAAQ,GAAG4B,CAAA,IAAK,IAAI;UAC3D,IACME,CAAA,GAhBC,MACD,KAcIhC,IAAA,CAAKc,GAAA,CAAQ,MAAJgB,CAAA,GAAWlC,CAAA,GAAIC,CAAA,GAAIG,IAAA,CAAKiB,EAAA;UAE3CtB,CAAA,CAAIsC,MAAA,CAAOH,CAAA,EAAGE,CAAA,CAClB;QAAA;QACArC,CAAA,CAAI6B,WAAA,GAAoB,MAAN3B,CAAA,GAAU,yBAAyB,wBACrDF,CAAA,CAAIuC,SAAA,GAAY,GAChBvC,CAAA,CAAI8B,MAAA;QAGJ,KAAK,IAAIa,CAAA,IAAK5C,CAAA,CAAOQ,KAAA,GAAQ,GAAGoC,CAAA,GAAI5C,CAAA,CAAOQ,KAAA,GAAQ,GAAGoC,CAAA,IAAK,IAAI;UAC3D,IACMC,CAAA,GA1BC,MACD,KAwBIvC,IAAA,CAAKc,GAAA,CAAQ,MAAJwB,CAAA,GAAW1C,CAAA,GAAIC,CAAA,GAAIG,IAAA,CAAKiB,EAAA;UAE3CtB,CAAA,CAAIe,SAAA,GAAkB,MAANb,CAAA,GAAU,2BAA2B,wBACrDF,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAIsB,CAAA,EAAGC,CAAA,EA3BA,GA2BmB,GAAa,IAAVvC,IAAA,CAAKiB,EAAA,GACtCtB,CAAA,CAAIwB,IAAA,EACR;QAAA;MACJ;MAEAxB,CAAA,CAAIuD,OAAA,IACJtD,CAAA,IApCU;IAAA,CAsClB;EAAA;EAEa4F,CAAA,GAAgB,SAAAC,CAAC/F,CAAA,EAAQC,CAAA;IAClC,IAGMC,CAAA,GAAQ;MACRC,CAAA,GAAc;MAGdiC,CAAA,GAAqBnC,CAAA,CAAIiC,oBAAA,CAAqB,GAAG,GAAGlC,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA;IAC/E0B,CAAA,CAAmBD,YAAA,CAAa,GAAG,YACnCC,CAAA,CAAmBD,YAAA,CAAa,GAAG;IAEnC,KAAK,IAAIG,CAAA,GAAI,GAAGA,CAAA,GAXE,IAWaA,CAAA,IAC3BpC,CAAA,CAAME,IAAA,CAAK;MACPC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGH,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA;MAC1BE,EAAA,EAbM,MAaDN,IAAA,CAAKC,MAAA,KAAW;MACrBO,EAAA,EAdM,MAcDR,IAAA,CAAKC,MAAA,KAAW;MACrB6D,IAAA,EAAsB,IAAhB9D,IAAA,CAAKC,MAAA,KAAe;IAAA;IAKlC,KAAK,IAAIqC,CAAA,GAAI,GAAGA,CAAA,GAAI1C,CAAA,CAAMyC,MAAA,EAAQC,CAAA,IAC9B,KAAK,IAAIC,CAAA,GAAID,CAAA,GAAI,GAAGC,CAAA,GAAI3C,CAAA,CAAMyC,MAAA,EAAQE,CAAA,IAC9BvC,IAAA,CAAKC,MAAA,KAvBa,MAwBlBJ,CAAA,CAAYC,IAAA,CAAK,CAACwC,CAAA,EAAGC,CAAA;IAKjC,OAAO;MAEH5C,CAAA,CAAIe,SAAA,GAAYoB,CAAA,EAChBnC,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAGxCR,CAAA,CAAMgB,OAAA,CAAQ,UAAChB,CAAA,EAAMC,CAAA;QACjBD,CAAA,CAAKG,CAAA,IAAKH,CAAA,CAAKU,EAAA,EACfV,CAAA,CAAKO,CAAA,IAAKP,CAAA,CAAKY,EAAA,GAEXZ,CAAA,CAAKG,CAAA,GAAI,KAAKH,CAAA,CAAKG,CAAA,GAAIL,CAAA,CAAOQ,KAAA,MAAON,CAAA,CAAKU,EAAA,KAAO,KACjDV,CAAA,CAAKO,CAAA,GAAI,KAAKP,CAAA,CAAKO,CAAA,GAAIT,CAAA,CAAOU,MAAA,MAAQR,CAAA,CAAKY,EAAA,KAAO,IAEtDb,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAIpB,CAAA,CAAKG,CAAA,EAAGH,CAAA,CAAKO,CAAA,EAAGP,CAAA,CAAKkE,IAAA,EAAM,GAAa,IAAV9D,IAAA,CAAKiB,EAAA,GAC3CtB,CAAA,CAAIe,SAAA,GAAS,OAAAQ,MAAA,CAAe,KAALrB,CAAA,EAAuC,iBAC9DF,CAAA,CAAIwB,IAAA,IAGJxB,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAIpB,CAAA,CAAKG,CAAA,EAAGH,CAAA,CAAKO,CAAA,EAAGP,CAAA,CAAKkE,IAAA,GAAO,GAAG,GAAa,IAAV9D,IAAA,CAAKiB,EAAA;QAC/C,IAAMa,CAAA,GAAWnC,CAAA,CAAIgE,oBAAA,CAAqB/D,CAAA,CAAKG,CAAA,EAAGH,CAAA,CAAKO,CAAA,EAAGP,CAAA,CAAKkE,IAAA,EAAMlE,CAAA,CAAKG,CAAA,EAAGH,CAAA,CAAKO,CAAA,EAAGP,CAAA,CAAKkE,IAAA,GAAO;QACjGhC,CAAA,CAASD,YAAA,CAAa,WAACX,MAAA,CAAmB,KAATrB,CAAA,yBACjCiC,CAAA,CAASD,YAAA,CAAa,WAACX,MAAA,CAAmB,KAATrB,CAAA,uBACjCF,CAAA,CAAIe,SAAA,GAAYoB,CAAA,EAChBnC,CAAA,CAAIwB,IAAA,EACR;MAAA,IAGAtB,CAAA,CAAYe,OAAA,CAAQ,UAAAf,CAAA;QAAY,IAAAiC,CAAA,GAAA4D,CAAA,CAAA7F,CAAA;UAAVmC,CAAA,GAACF,CAAA;UAAEQ,CAAA,GAACR,CAAA;UAChBS,CAAA,GAAK3C,CAAA,CAAMoC,CAAA,EAAGjC,CAAA,GAAIH,CAAA,CAAM0C,CAAA,EAAGvC,CAAA;UAC3BP,CAAA,GAAKI,CAAA,CAAMoC,CAAA,EAAG7B,CAAA,GAAIP,CAAA,CAAM0C,CAAA,EAAGnC,CAAA;UAE3BiB,CAAA,GAAU,IADCpB,IAAA,CAAKwC,IAAA,CAAKD,CAAA,GAAKA,CAAA,GAAK/C,CAAA,GAAKA,CAAA,IACXQ,IAAA,CAAKgF,GAAA,CAAItF,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA;QAE7DT,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIoC,MAAA,CAAOnC,CAAA,CAAMoC,CAAA,EAAGjC,CAAA,EAAGH,CAAA,CAAMoC,CAAA,EAAG7B,CAAA,GAChCR,CAAA,CAAIsC,MAAA,CAAOrC,CAAA,CAAM0C,CAAA,EAAGvC,CAAA,EAAGH,CAAA,CAAM0C,CAAA,EAAGnC,CAAA,GAChCR,CAAA,CAAI6B,WAAA,GAAW,uBAAAN,MAAA,CAAoC,KAAVE,CAAA,EAAgB,MACzDzB,CAAA,CAAI8B,MAAA,EACR;MAAA;MAGA,KAAK,IAAIO,CAAA,GAAI,GAAGA,CAAA,GAAI,GAAGA,CAAA,IACnBrC,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAIhB,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA,EAAOF,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA,EAAwB,MAAhBJ,IAAA,CAAKC,MAAA,IAAgB,GAAa,IAAVD,IAAA,CAAKiB,EAAA,GAClGtB,CAAA,CAAIe,SAAA,GAAY,4BAChBf,CAAA,CAAIwB,IAAA;IAAA,CAGhB;EAAA;EAEawE,CAAA,GAAa,SAAAC,CAAClG,CAAA,EAAQC,CAAA;IAC/B,IAIIC,CAAA,GAAO;MAGLC,CAAA,GAAcF,CAAA,CAAIiC,oBAAA,CAAqB,GAAG,GAAG,GAAmB,KAAhBlC,CAAA,CAAOU,MAAA;IAC7DP,CAAA,CAAYgC,YAAA,CAAa,GAAG,YAC5BhC,CAAA,CAAYgC,YAAA,CAAa,GAAG;IAG5B,IAAMC,CAAA,GAAM;QACR/B,CAAA,EAAkB,KAAfL,CAAA,CAAOQ,KAAA;QACVC,CAAA,EAAmB,KAAhBT,CAAA,CAAOU,MAAA;QACVC,MAAA,EAAQ;QACRwF,IAAA,EAAM;MAAA;MAIJ7D,CAAA,GAAS,CACX;QAAEjC,CAAA,EAAkB,KAAfL,CAAA,CAAOQ,KAAA;QAAaC,CAAA,EAAmB,MAAhBT,CAAA,CAAOU,MAAA;QAAeC,MAAA,EAAQ;MAAA,GAC1D;QAAEN,CAAA,EAAkB,KAAfL,CAAA,CAAOQ,KAAA;QAAaC,CAAA,EAAmB,KAAhBT,CAAA,CAAOU,MAAA;QAAcC,MAAA,EAAQ;MAAA,GACzD;QAAEN,CAAA,EAAkB,KAAfL,CAAA,CAAOQ,KAAA;QAAaC,CAAA,EAAmB,KAAhBT,CAAA,CAAOU,MAAA;QAAcC,MAAA,EAAQ;MAAA;IAG7D,OAAO;MAEHV,CAAA,CAAIe,SAAA,GAAYb,CAAA,EAChBF,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAuB,KAAhBR,CAAA,CAAOU,MAAA,GAGxCT,CAAA,CAAIoD,IAAA,IACJpD,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAIc,CAAA,CAAI/B,CAAA,EAAG+B,CAAA,CAAI3B,CAAA,EAAG2B,CAAA,CAAIzB,MAAA,EAAQ,GAAa,IAAVL,IAAA,CAAKiB,EAAA;MAC1C,IAAMqB,CAAA,GAAc3C,CAAA,CAAIgE,oBAAA,CAAqB7B,CAAA,CAAI/B,CAAA,EAAG+B,CAAA,CAAI3B,CAAA,EAAG2B,CAAA,CAAIzB,MAAA,GAASyB,CAAA,CAAI+D,IAAA,EAAM/D,CAAA,CAAI/B,CAAA,EAAG+B,CAAA,CAAI3B,CAAA,EAAG2B,CAAA,CAAIzB,MAAA,GAASyB,CAAA,CAAI+D,IAAA;MACjHvD,CAAA,CAAYT,YAAA,CAAa,GAAG,yBAC5BS,CAAA,CAAYT,YAAA,CAAa,IAAK,2BAC9BS,CAAA,CAAYT,YAAA,CAAa,GAAG,yBAC5BlC,CAAA,CAAIe,SAAA,GAAY4B,CAAA,EAChB3C,CAAA,CAAIwB,IAAA,IACJxB,CAAA,CAAIuD,OAAA,IAGJlB,CAAA,CAAOpB,OAAA,CAAQ,UAAAlB,CAAA;QACXC,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAItB,CAAA,CAAMK,CAAA,EAAGL,CAAA,CAAMS,CAAA,EAAGT,CAAA,CAAMW,MAAA,EAAQ,GAAa,IAAVL,IAAA,CAAKiB,EAAA,GAChDtB,CAAA,CAAIe,SAAA,GAAY,4BAChBf,CAAA,CAAIwB,IAAA,EACR;MAAA;MAGA,KAAK,IAAIoB,CAAA,GAAI,GAAGA,CAAA,GApDF,GAoDiBA,CAAA,IAAK;QAChC5C,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIoC,MAAA,CAAO,GAAGrC,CAAA,CAAOU,MAAA;QAErB,KAAK,IAAIsF,CAAA,GAAI,GAAGA,CAAA,IAAKhG,CAAA,CAAOQ,KAAA,EAAOwF,CAAA,IAAK,GAAG;UACvC,IAAMlG,CAAA,GAxDA,KAwDIQ,IAAA,CAAKc,GAAA,CAvDT,MAuDa4E,CAAA,GAAgB9F,CAAA,GAAW,KAAJ2C,CAAA,KAAwB,IAAQ,KAAJA,CAAA,KACjE7C,CAAA,CAAOU,MAAA,IAAUmC,CAAA,GAAI,MAAsB,KAAhB7C,CAAA,CAAOU,MAAA,GA1DjC;UA2DNT,CAAA,CAAIsC,MAAA,CAAOyD,CAAA,EAAGlG,CAAA,CAClB;QAAA;QAEAG,CAAA,CAAIsC,MAAA,CAAOvC,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA;QAChC,IAAMgB,CAAA,GAAWzB,CAAA,CAAIiC,oBAAA,CAAqB,GAAG,GAAG,GAAGlC,CAAA,CAAOU,MAAA;QAC1DgB,CAAA,CAASS,YAAA,CAAa,wBAACX,MAAA,CAAuB,KAAOqB,CAAA,GAhE3C,IAgE4D,YACtEnB,CAAA,CAASS,YAAA,CAAa,uBAACX,MAAA,CAAsB,KAAOqB,CAAA,GAjE1C,IAiE2D,YACrE5C,CAAA,CAAIe,SAAA,GAAYU,CAAA,EAChBzB,CAAA,CAAIwB,IAAA,EACR;MAAA;MAEAvB,CAAA,IAnEU;IAAA,CAqElB;EAAA;EACakG,CAAA,GAAW,SAAAC,CAACrG,CAAA,EAAQC,CAAA;IAC7B,IACMC,CAAA,GAAa;MACbC,CAAA,GAAqBF,CAAA,CAAIiC,oBAAA,CAAqB,GAAG,GAAG,GAAGlC,CAAA,CAAOU,MAAA;IACpEP,CAAA,CAAmBgC,YAAA,CAAa,GAAG,YACnChC,CAAA,CAAmBgC,YAAA,CAAa,GAAG;IAgBnC,KAbA,IAAMC,CAAA,GAAO;QACT/B,CAAA,EAAkB,KAAfL,CAAA,CAAOQ,KAAA;QACVC,CAAA,EAAmB,KAAhBT,CAAA,CAAOU,MAAA;QACVC,MAAA,EAAQ;QACRwF,IAAA,EAAM;MAAA,GAIJ7D,CAAA,GAAY,CACd;QAAEmC,MAAA,EAAQ,CAAC,CAAC,GAAGzE,CAAA,CAAOU,MAAA,GAAS,CAAgB,KAAfV,CAAA,CAAOQ,KAAA,EAA6B,KAAhBR,CAAA,CAAOU,MAAA,GAAe,CAAgB,KAAfV,CAAA,CAAOQ,KAAA,EAAaR,CAAA,CAAOU,MAAA;QAAUmB,KAAA,EAAO;MAAA,GACvH;QAAE4C,MAAA,EAAQ,CAAC,CAAgB,KAAfzE,CAAA,CAAOQ,KAAA,EAAaR,CAAA,CAAOU,MAAA,GAAS,CAAgB,KAAfV,CAAA,CAAOQ,KAAA,EAA6B,MAAhBR,CAAA,CAAOU,MAAA,GAAgB,CAACV,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA;QAAUmB,KAAA,EAAO;MAAA,IAG9He,CAAA,GAAI,GAAGA,CAAA,GApBO,KAoBaA,CAAA,IAChC1C,CAAA,CAAWE,IAAA,CAAK;MACZC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGH,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA;MAC1BE,EAAA,EAA4B,OAAvBN,IAAA,CAAKC,MAAA,KAAW;MACrBO,EAAA,EAAoB,IAAhBR,IAAA,CAAKC,MAAA,KAAe;MACxB6D,IAAA,EAAsB,IAAhB9D,IAAA,CAAKC,MAAA,KAAe;MAC1B+F,OAAA,EAAyB,KAAhBhG,IAAA,CAAKC,MAAA,KAAiB;IAAA;IAIvC,OAAO;MACHN,CAAA,CAAIe,SAAA,GAAYb,CAAA,EAChBF,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAGxCT,CAAA,CAAIoD,IAAA,IACJpD,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAIc,CAAA,CAAK/B,CAAA,EAAG+B,CAAA,CAAK3B,CAAA,EAAG2B,CAAA,CAAKzB,MAAA,EAAQ,GAAa,IAAVL,IAAA,CAAKiB,EAAA;MAC7C,IAAMqB,CAAA,GAAe3C,CAAA,CAAIgE,oBAAA,CAAqB7B,CAAA,CAAK/B,CAAA,EAAG+B,CAAA,CAAK3B,CAAA,EAAG2B,CAAA,CAAKzB,MAAA,GAASyB,CAAA,CAAK+D,IAAA,EAAM/D,CAAA,CAAK/B,CAAA,EAAG+B,CAAA,CAAK3B,CAAA,EAAG2B,CAAA,CAAKzB,MAAA,GAASyB,CAAA,CAAK+D,IAAA;MAC1HvD,CAAA,CAAaT,YAAA,CAAa,GAAG,2BAC7BS,CAAA,CAAaT,YAAA,CAAa,IAAK,6BAC/BS,CAAA,CAAaT,YAAA,CAAa,GAAG,2BAC7BlC,CAAA,CAAIe,SAAA,GAAY4B,CAAA,EAChB3C,CAAA,CAAIwB,IAAA,IACJxB,CAAA,CAAIuD,OAAA,IAGJlB,CAAA,CAAUpB,OAAA,CAAQ,UAAAlB,CAAA;QACdC,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIoC,MAAA,CAAOrC,CAAA,CAASyE,MAAA,CAAO,GAAG,IAAIzE,CAAA,CAASyE,MAAA,CAAO,GAAG,KACrDzE,CAAA,CAASyE,MAAA,CAAOvD,OAAA,CAAQ,UAAAlB,CAAA;UAAK,OAAIC,CAAA,CAAIsC,MAAA,CAAOvC,CAAA,CAAM,IAAIA,CAAA,CAAM;QAAA,IAC5DC,CAAA,CAAIe,SAAA,GAAYhB,CAAA,CAAS6B,KAAA,EACzB5B,CAAA,CAAIwB,IAAA,EACR;MAAA,IAEAvB,CAAA,CAAWgB,OAAA,CAAQ,UAAAhB,CAAA;QACfA,CAAA,CAAMG,CAAA,IAAKH,CAAA,CAAMU,EAAA,GAAgC,KAA3BN,IAAA,CAAKc,GAAA,CAAc,MAAVlB,CAAA,CAAMO,CAAA,GACrCP,CAAA,CAAMO,CAAA,IAAKP,CAAA,CAAMY,EAAA,EAEbZ,CAAA,CAAMO,CAAA,GAAIT,CAAA,CAAOU,MAAA,KACjBR,CAAA,CAAMG,CAAA,GAAIC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA,EACjCN,CAAA,CAAMO,CAAA,IAAKP,CAAA,CAAMkE,IAAA,EACjBlE,CAAA,CAAMU,EAAA,GAA6B,OAAvBN,IAAA,CAAKC,MAAA,KAAW,KAC5BL,CAAA,CAAMY,EAAA,GAAqB,IAAhBR,IAAA,CAAKC,MAAA,KAAe,KAGnCN,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAIpB,CAAA,CAAMG,CAAA,EAAGH,CAAA,CAAMO,CAAA,EAAGP,CAAA,CAAMkE,IAAA,EAAM,GAAa,IAAV9D,IAAA,CAAKiB,EAAA,GAC9CtB,CAAA,CAAIe,SAAA,GAAS,uBAAAQ,MAAA,CAA0BtB,CAAA,CAAMoG,OAAA,EAAU,MACvDrG,CAAA,CAAIwB,IAAA,EACR;MAAA,IAGAxB,CAAA,CAAIe,SAAA,GAAY,6BAChBf,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA;IAAA,CAEhD;EAAA;EAGa6F,CAAA,GAAgB,SAAAC,CAACxG,CAAA,EAAQC,CAAA;IAOlC,KANA,IAAMC,CAAA,GAAY,IAEZC,CAAA,GAAQ,IAILiC,CAAA,GAAI,GAAGA,CAAA,GAHE,GAGaA,CAAA,IAC3BjC,CAAA,CAAMC,IAAA,CAAK;MACPC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGT,CAAA,CAAOU,MAAA;MACVA,MAAA,EAAwB,MAAhBJ,IAAA,CAAKC,MAAA,KAAiB;MAC9BC,KAAA,EAAuB,MAAhBF,IAAA,CAAKC,MAAA,KAAiB;IAAA;IAKrC,KAAK,IAAI+B,CAAA,GAAI,GAAGA,CAAA,GAfK,KAeaA,CAAA,IAC9BpC,CAAA,CAAUE,IAAA,CAAK;MACXC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGH,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA;MAC1BC,MAAA,EAAwB,IAAhBL,IAAA,CAAKC,MAAA,KAAe;MAC5BqB,KAAA,EAAuB,KAAhBtB,IAAA,CAAKC,MAAA,KAAiB;MAC7B4C,KAAA,EAAO7C,IAAA,CAAKC,MAAA,KAAWD,IAAA,CAAKiB,EAAA,GAAK;MACjCkF,UAAA,EAAoC,OAAvBnG,IAAA,CAAKC,MAAA,KAAW;MAC7BmG,aAAA,EAAepG,IAAA,CAAKC,MAAA;IAAA;IAI5B,OAAO;MAEHN,CAAA,CAAIe,SAAA,GAAY,uBAChBf,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAGxCP,CAAA,CAAMe,OAAA,CAAQ,UAAAlB,CAAA;QACVC,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIoC,MAAA,CAAOrC,CAAA,CAAKK,CAAA,EAAGL,CAAA,CAAKS,CAAA,GACxBR,CAAA,CAAIsC,MAAA,CAAOvC,CAAA,CAAKK,CAAA,GAAIL,CAAA,CAAKQ,KAAA,GAAQ,GAAGR,CAAA,CAAKS,CAAA,GAAIT,CAAA,CAAKU,MAAA,GAClDT,CAAA,CAAIsC,MAAA,CAAOvC,CAAA,CAAKK,CAAA,GAAIL,CAAA,CAAKQ,KAAA,GAAQ,GAAGR,CAAA,CAAKS,CAAA,GAAIT,CAAA,CAAKU,MAAA,GAClDT,CAAA,CAAI4D,SAAA,IACJ5D,CAAA,CAAIe,SAAA,GAAY,uBAChBf,CAAA,CAAIwB,IAAA,EACR;MAAA,IAGAvB,CAAA,CAAUgB,OAAA,CAAQ,UAAAhB,CAAA;QACdA,CAAA,CAAIG,CAAA,IAAKC,IAAA,CAAK4C,GAAA,CAAIhD,CAAA,CAAIiD,KAAA,IAASjD,CAAA,CAAI0B,KAAA,EACnC1B,CAAA,CAAIO,CAAA,IAAKH,IAAA,CAAKc,GAAA,CAAIlB,CAAA,CAAIiD,KAAA,IAASjD,CAAA,CAAI0B,KAAA,EACnC1B,CAAA,CAAIiD,KAAA,IAASjD,CAAA,CAAIuG,UAAA,GAEbvG,CAAA,CAAIG,CAAA,GAAI,KAAKH,CAAA,CAAIG,CAAA,GAAIL,CAAA,CAAOQ,KAAA,MAAON,CAAA,CAAIiD,KAAA,GAAQ7C,IAAA,CAAKiB,EAAA,GAAKrB,CAAA,CAAIiD,KAAA,IAC7DjD,CAAA,CAAIO,CAAA,GAAI,KAAKP,CAAA,CAAIO,CAAA,GAAIT,CAAA,CAAOU,MAAA,MAAQR,CAAA,CAAIiD,KAAA,IAASjD,CAAA,CAAIiD,KAAA,GAEzDjD,CAAA,CAAIwG,aAAA,GAA6D,KAA7CpG,IAAA,CAAKc,GAAA,CAAiB,OAAbuF,IAAA,CAAKC,GAAA,KAAwB,KAAR1G,CAAA,CAAIG,CAAA,IAAiB,IAEvEJ,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAIpB,CAAA,CAAIG,CAAA,EAAGH,CAAA,CAAIO,CAAA,EAAGP,CAAA,CAAIS,MAAA,EAAQ,GAAa,IAAVL,IAAA,CAAKiB,EAAA,GAC1CtB,CAAA,CAAIe,SAAA,GAAS,uBAAAQ,MAAA,CAA0BtB,CAAA,CAAIwG,aAAA,EAAgB,MAC3DzG,CAAA,CAAIwB,IAAA,IAEJxB,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAIpB,CAAA,CAAIG,CAAA,EAAGH,CAAA,CAAIO,CAAA,EAAgB,IAAbP,CAAA,CAAIS,MAAA,EAAY,GAAa,IAAVL,IAAA,CAAKiB,EAAA;QAC9C,IAAMpB,CAAA,GAAWF,CAAA,CAAIgE,oBAAA,CAAqB/D,CAAA,CAAIG,CAAA,EAAGH,CAAA,CAAIO,CAAA,EAAG,GAAGP,CAAA,CAAIG,CAAA,EAAGH,CAAA,CAAIO,CAAA,EAAgB,IAAbP,CAAA,CAAIS,MAAA;QAC7ER,CAAA,CAASgC,YAAA,CAAa,GAAC,uBAAAX,MAAA,CAA6C,KAApBtB,CAAA,CAAIwG,aAAA,SACpDvG,CAAA,CAASgC,YAAA,CAAa,GAAG,2BACzBlC,CAAA,CAAIe,SAAA,GAAYb,CAAA,EAChBF,CAAA,CAAIwB,IAAA,EACR;MAAA;IAAA,CAER;EAAA;EACaoF,CAAA,GAAkB,SAAAC,CAAC9G,CAAA,EAAQC,CAAA;IACpC,IAEIC,CAAA;MAFEC,CAAA,GAAS;IAIf,SAASiC,EAAYpC,CAAA,EAAGC,CAAA;MAIpB,KAHA,IAAMC,CAAA,GAAgBI,IAAA,CAAKO,KAAA,CAAsB,KAAhBP,IAAA,CAAKC,MAAA,MAAiB,IACjDJ,CAAA,GAAY,IAETiC,CAAA,GAAI,GAAGA,CAAA,GAAIlC,CAAA,EAAekC,CAAA,IAC/BjC,CAAA,CAAUC,IAAA,CAAK;QACXC,CAAA,EAAGL,CAAA,GAAoB,MAAhBM,IAAA,CAAKC,MAAA,KAAiB;QAC7BE,CAAA,EAAGR,CAAA,GAAoB,MAAhBK,IAAA,CAAKC,MAAA,KAAiB;QAC7BI,MAAA,EAAwB,KAAhBL,IAAA,CAAKC,MAAA,KAAgB;MAAA;MAIrC,OAAO;QACHwG,SAAA,EAAA5G,CAAA;QACAE,CAAA,EAAAL,CAAA;QACAS,CAAA,EAAAR,CAAA;QACA2B,KAAA,EAAuB,KAAhBtB,IAAA,CAAKC,MAAA,KAAiB;MAAA,CAErC;IAAA;IAEA,KAAK,IAAI+B,CAAA,GAAI,GAAGA,CAAA,GAvBG,IAuBaA,CAAA,IAC5BnC,CAAA,CAAOC,IAAA,CAAKgC,CAAA,CAAY9B,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA,EAAOF,IAAA,CAAKC,MAAA,MAAYP,CAAA,CAAOU,MAAA,GAAS;IAI3F,IAAMkC,CAAA,GAAoB,SAAAoE,CAAA;QACtB9G,CAAA,GAAiBF,CAAA,CAAOU,MAAA;QACxB,IAAMP,CAAA,GAAWF,CAAA,CAAIiC,oBAAA,CAAqB,GAAG,GAAG,GAAGhC,CAAA;QAInD,OAHAC,CAAA,CAASgC,YAAA,CAAa,GAAG,YACzBhC,CAAA,CAASgC,YAAA,CAAa,IAAK,YAC3BhC,CAAA,CAASgC,YAAA,CAAa,GAAG,YAClBhC,CAAA;MAAA;MAGP0C,CAAA,GAAcD,CAAA;IAElB,OAAO;MAEC1C,CAAA,KAAmBF,CAAA,CAAOU,MAAA,KAC1BmC,CAAA,GAAcD,CAAA,KAIlB3C,CAAA,CAAIe,SAAA,GAAY6B,CAAA,EAChB5C,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAExCP,CAAA,CAAOe,OAAA,CAAQ,UAAAhB,CAAA;QACXA,CAAA,CAAMG,CAAA,IAAKH,CAAA,CAAM0B,KAAA,EACb1B,CAAA,CAAMG,CAAA,GAAIL,CAAA,CAAOQ,KAAA,GAAQ,QACzBN,CAAA,CAAMG,CAAA,IAAK,MAGfJ,CAAA,CAAIoD,IAAA,IACJpD,CAAA,CAAIqD,SAAA,CAAUpD,CAAA,CAAMG,CAAA,EAAGH,CAAA,CAAMO,CAAA,GAG7BP,CAAA,CAAM6G,SAAA,CAAU7F,OAAA,CAAQ,UAAAlB,CAAA;UACpBC,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAItB,CAAA,CAASK,CAAA,GAAI,GAAGL,CAAA,CAASS,CAAA,GAAI,GAAGT,CAAA,CAASW,MAAA,EAAQ,GAAa,IAAVL,IAAA,CAAKiB,EAAA,GACjEtB,CAAA,CAAIe,SAAA,GAAY,sBAChBf,CAAA,CAAIwB,IAAA,EACR;QAAA,IAGAvB,CAAA,CAAM6G,SAAA,CAAU7F,OAAA,CAAQ,UAAAlB,CAAA;UACpBC,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAItB,CAAA,CAASK,CAAA,EAAGL,CAAA,CAASS,CAAA,EAAGT,CAAA,CAASW,MAAA,EAAQ,GAAa,IAAVL,IAAA,CAAKiB,EAAA;UACzD,IAAMrB,CAAA,GAAWD,CAAA,CAAIgE,oBAAA,CAAqBjE,CAAA,CAASK,CAAA,EAAGL,CAAA,CAASS,CAAA,EAAG,GAAGT,CAAA,CAASK,CAAA,EAAGL,CAAA,CAASS,CAAA,EAAGT,CAAA,CAASW,MAAA;UACtGT,CAAA,CAASiC,YAAA,CAAa,GAAG,6BACzBjC,CAAA,CAASiC,YAAA,CAAa,GAAG,6BACzBlC,CAAA,CAAIe,SAAA,GAAYd,CAAA,EAChBD,CAAA,CAAIwB,IAAA,EACR;QAAA,IAEAxB,CAAA,CAAIuD,OAAA,EACR;MAAA;MAKAvD,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAItB,CAAA,CAAOQ,KAAA,GAAQ,KAAK,KAHV,IAG0B,GAAa,IAAVF,IAAA,CAAKiB,EAAA;MACpD,IAAMa,CAAA,GAAcnC,CAAA,CAAIgE,oBAAA,CAAqBjE,CAAA,CAAOQ,KAAA,GAAQ,KAAK,KAAK,GAAGR,CAAA,CAAOQ,KAAA,GAAQ,KAAK,KAAK;MAClG4B,CAAA,CAAYD,YAAA,CAAa,GAAG,2BAC5BC,CAAA,CAAYD,YAAA,CAAa,IAAK,2BAC9BC,CAAA,CAAYD,YAAA,CAAa,GAAG,yBAC5BlC,CAAA,CAAIe,SAAA,GAAYoB,CAAA,EAChBnC,CAAA,CAAIwB,IAAA;IAAA,CAEZ;EAAA;EAEawF,CAAA,GAAe,SAAAC,CAAClH,CAAA,EAAQC,CAAA;IACjC,IAYQC,CAAA;MAZFC,CAAA,GAAS;MAETiC,CAAA,GAAa,CAAC,WAAW,WAAW,WAAW,WAAW;MAC1DE,CAAA,GAAa,CACf,SACA;MAEEM,CAAA,GAAmB;MACrBC,CAAA,IAAe;IAIX3C,CAAA,GAAc,GAClBoC,CAAA,CAAWpB,OAAA,CAAQ,UAAClB,CAAA,EAAKC,CAAA;MACrB,IAAME,CAAA,GAAM,IAAIgH,KAAA;MAChBhH,CAAA,CAAIiH,MAAA,GAAS;QACTxE,CAAA,CAAiB3C,CAAA,IAASE,CAAA,IAC1BD,CAAA,KACoBoC,CAAA,CAAWK,MAAA,KAC3BE,CAAA,IAAe;MAAA,GAGvB1C,CAAA,CAAIkH,OAAA,GAAU;QAAA,EACVnH,CAAA,KACoBoC,CAAA,CAAWK,MAAA,KAC3BE,CAAA,IAAe;MAAA,GAGvB1C,CAAA,CAAImH,GAAA,GAAMtH,CACd;IAAA;IAKJ,KAAK,IAAIgG,CAAA,GAAI,GAAGA,CAAA,GAjCE,KAiCaA,CAAA,IAC3B7F,CAAA,CAAOC,IAAA,CAAK;MACRC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGH,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA;MAC1B0D,IAAA,EAAsB,KAAhB9D,IAAA,CAAKC,MAAA,KAAgB;MAC3BqB,KAAA,EAAuB,IAAhBtB,IAAA,CAAKC,MAAA,KAAe;MAC3BgH,SAAA,EAA2B,KAAhBjH,IAAA,CAAKC,MAAA,KAAgB;MAChC4C,KAAA,EAAO7C,IAAA,CAAKC,MAAA,KAAWD,IAAA,CAAKiB,EAAA,GAAK;MACjCkF,UAAA,EAAoC,OAAvBnG,IAAA,CAAKC,MAAA,KAAW;MAC7BiH,UAAA,EAAYlH,IAAA,CAAKO,KAAA,CAAMP,IAAA,CAAKC,MAAA,KAAW+B,CAAA,CAAWK,MAAA;MAClDd,KAAA,EAAOO,CAAA,CAAW9B,IAAA,CAAKO,KAAA,CAAMP,IAAA,CAAKC,MAAA,KAAW6B,CAAA,CAAWO,MAAA;IAAA;IAsBhE,OAAO;MACH1C,CAAA,CAAIe,SAAA,GAAY,4BAChBf,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAExCP,CAAA,CAAOe,OAAA,CAAQ,UAAAhB,CAAA;QACXA,CAAA,CAAKO,CAAA,IAAKP,CAAA,CAAK0B,KAAA,EACf1B,CAAA,CAAKG,CAAA,IAAKC,IAAA,CAAKc,GAAA,CAAa,MAATlB,CAAA,CAAKO,CAAA,IAAYP,CAAA,CAAKqH,SAAA,GAAY,KACrDrH,CAAA,CAAKiD,KAAA,IAASjD,CAAA,CAAKuG,UAAA,EAEfvG,CAAA,CAAKO,CAAA,GAAIT,CAAA,CAAOU,MAAA,KAChBR,CAAA,CAAKO,CAAA,IAAKP,CAAA,CAAKkE,IAAA,EACflE,CAAA,CAAKG,CAAA,GAAIC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA,GA7B3B,UAACR,CAAA;UACdC,CAAA,CAAIoD,IAAA,IACJpD,CAAA,CAAIqD,SAAA,CAAUtD,CAAA,CAAKK,CAAA,EAAGL,CAAA,CAAKS,CAAA,GAC3BR,CAAA,CAAIsD,MAAA,CAAOvD,CAAA,CAAKmD,KAAA,GAEZN,CAAA,IAAgBD,CAAA,CAAiB5C,CAAA,CAAKwH,UAAA,IACtCvH,CAAA,CAAIwH,SAAA,CAAU7E,CAAA,CAAiB5C,CAAA,CAAKwH,UAAA,IAAcxH,CAAA,CAAKoE,IAAA,GAAO,IAAIpE,CAAA,CAAKoE,IAAA,GAAO,GAAGpE,CAAA,CAAKoE,IAAA,EAAMpE,CAAA,CAAKoE,IAAA,KAGjGnE,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIyH,OAAA,CAAQ,GAAG,GAAG1H,CAAA,CAAKoE,IAAA,GAAO,GAAGpE,CAAA,CAAKoE,IAAA,GAAO,GAAG,GAAG,GAAa,IAAV9D,IAAA,CAAKiB,EAAA,GAC3DtB,CAAA,CAAIe,SAAA,GAAYhB,CAAA,CAAK6B,KAAA,EACrB5B,CAAA,CAAIwB,IAAA,KAGRxB,CAAA,CAAIuD,OAAA;QAAA,CAiBA,CAAStD,CAAA,CACb;MAAA;IAAA,CAER;EAAA;EAEayH,CAAA,GAAgB,SAAAC,CAAC5H,CAAA,EAAQC,CAAA;IAKlC,KAJA,IAAMC,CAAA,GAAY,IAEZC,CAAA,GAAW,IAERiC,CAAA,GAAI,GAAGA,CAAA,GAHE,KAGaA,CAAA,IAC3BlC,CAAA,CAAUE,IAAA,CAAK;MACXC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGH,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA;MAC1BiC,MAAA,EAAwB,KAAhBrC,IAAA,CAAKC,MAAA,KAAgB;MAC7BqB,KAAA,EAAuB,KAAhBtB,IAAA,CAAKC,MAAA,KAAgB;IAAA;IAIpC,OAAO;MACHN,CAAA,CAAIe,SAAA,GAAY,sBAChBf,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAGxCT,CAAA,CAAI6B,WAAA,GAAc,4BAClB7B,CAAA,CAAIuC,SAAA,GAAY,GAChBtC,CAAA,CAAUgB,OAAA,CAAQ,UAAAhB,CAAA;QACdD,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIoC,MAAA,CAAOnC,CAAA,CAAKG,CAAA,EAAGH,CAAA,CAAKO,CAAA,GACxBR,CAAA,CAAIsC,MAAA,CAAOrC,CAAA,CAAKG,CAAA,EAAGH,CAAA,CAAKO,CAAA,GAAIP,CAAA,CAAKyC,MAAA,GACjC1C,CAAA,CAAI8B,MAAA,IAEJ7B,CAAA,CAAKO,CAAA,IAAKP,CAAA,CAAK0B,KAAA,EAEX1B,CAAA,CAAKO,CAAA,GAAIT,CAAA,CAAOU,MAAA,KAChBR,CAAA,CAAKO,CAAA,IAAKP,CAAA,CAAKyC,MAAA,EACfxC,CAAA,CAASC,IAAA,CAAK;UACVC,CAAA,EAAGH,CAAA,CAAKG,CAAA;UACRI,CAAA,EAAGT,CAAA,CAAOU,MAAA;UACVC,MAAA,EAAwB,IAAhBL,IAAA,CAAKC,MAAA,KAAe;UAC5B+F,OAAA,EAAS;QAAA,GAGrB;MAAA,IAGAnG,CAAA,CAASe,OAAA,CAAQ,UAAClB,CAAA,EAAQE,CAAA;QACtBD,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAItB,CAAA,CAAOK,CAAA,EAAGL,CAAA,CAAOS,CAAA,EAAGT,CAAA,CAAOW,MAAA,EAAQ,GAAa,IAAVL,IAAA,CAAKiB,EAAA,GACnDtB,CAAA,CAAIe,SAAA,GAAS,uBAAAQ,MAAA,CAA0BxB,CAAA,CAAOsG,OAAA,EAAU,MACxDrG,CAAA,CAAIwB,IAAA,IAEJzB,CAAA,CAAOW,MAAA,IAAU,IACjBX,CAAA,CAAOsG,OAAA,IAAW,KAEdtG,CAAA,CAAOsG,OAAA,IAAW,KAClBnG,CAAA,CAASwE,MAAA,CAAOzE,CAAA,EAAO,EAE/B;MAAA;IAAA,CAER;EAAA;EAGa2H,CAAA,GAAoB,SAAAC,CAAC9H,CAAA,EAAQC,CAAA;IAqBtC,KApBA,IAAMC,CAAA,GAAY,IACZC,CAAA,GAAY,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAI3LiC,CAAA,GAAS,CACX;QAAEjC,CAAA,EAAG;QAAK4C,CAAA,EAAG;QAAKoC,CAAA,EAAG;MAAA,GACrB;QAAEhF,CAAA,EAAG;QAAK4C,CAAA,EAAG;QAAKoC,CAAA,EAAG;MAAA,GACrB;QAAEhF,CAAA,EAAG;QAAK4C,CAAA,EAAG;QAAKoC,CAAA,EAAG;MAAA,GACrB;QAAEhF,CAAA,EAAG;QAAK4C,CAAA,EAAG;QAAKoC,CAAA,EAAG;MAAA,GACrB;QAAEhF,CAAA,EAAG;QAAK4C,CAAA,EAAG;QAAKoC,CAAA,EAAG;MAAA,GACrB;QAAEhF,CAAA,EAAG;QAAK4C,CAAA,EAAG;QAAKoC,CAAA,EAAG;MAAA,GACrB;QAAEhF,CAAA,EAAG;QAAK4C,CAAA,EAAG;QAAKoC,CAAA,EAAG;MAAA,IAGrB7C,CAAA,GAAa,GACbM,CAAA,GAAiB,GACjBC,CAAA,GAAS,GAGJmD,CAAA,GAAI,GAAGA,CAAA,GAlBC,IAkBaA,CAAA,IAC1B9F,CAAA,CAAUE,IAAA,CAAK;MACXC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGH,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA,GAASV,CAAA,CAAOU,MAAA;MAC1CqH,KAAA,EAAO5H,CAAA,CAAUG,IAAA,CAAKO,KAAA,CAAMP,IAAA,CAAKC,MAAA,KAAWJ,CAAA,CAAUwC,MAAA;MACtDyB,IAAA,EAAsB,KAAhB9D,IAAA,CAAKC,MAAA,KAAgB;MAC3BqB,KAAA,EAAuB,MAAhBtB,IAAA,CAAKC,MAAA,KAAiB;MAC7B0E,QAAA,EAAU3E,IAAA,CAAKC,MAAA,KAAWD,IAAA,CAAKiB,EAAA,GAAK;MACpCyG,aAAA,EAAyC,OAAT,IAAhB1H,IAAA,CAAKC,MAAA,KAAe;IAAA;IAY5C,OAAO;MAAA,CAEHsC,CAAA,IAxBe,SAyBD,MACVA,CAAA,GAAS,GACTP,CAAA,GAAaM,CAAA,EACbA,CAAA,IAAkBA,CAAA,GAAiB,KAAKR,CAAA,CAAOO,MAAA;MAEnD,IAhBexC,CAAA;QAAQ6F,CAAA;QAAQlG,CAAA;QAgBzB4B,CAAA,IAhBSvB,CAAA,GAgBgBiC,CAAA,CAAOE,CAAA,GAhBf0D,CAAA,GAgB4B5D,CAAA,CAAOQ,CAAA,GAhB3B9C,CAAA,GAgB4C+C,CAAA,EAfpE;UACH1C,CAAA,EAAGG,IAAA,CAAK2H,KAAA,CAAM9H,CAAA,CAAOA,CAAA,IAAK6F,CAAA,CAAO7F,CAAA,GAAIA,CAAA,CAAOA,CAAA,IAAKL,CAAA;UACjDiD,CAAA,EAAGzC,IAAA,CAAK2H,KAAA,CAAM9H,CAAA,CAAO4C,CAAA,IAAKiD,CAAA,CAAOjD,CAAA,GAAI5C,CAAA,CAAO4C,CAAA,IAAKjD,CAAA;UACjDqF,CAAA,EAAG7E,IAAA,CAAK2H,KAAA,CAAM9H,CAAA,CAAOgF,CAAA,IAAKa,CAAA,CAAOb,CAAA,GAAIhF,CAAA,CAAOgF,CAAA,IAAKrF,CAAA;QAAA;QAe/CkC,CAAA,GAAW/B,CAAA,CAAIiC,oBAAA,CAAqB,GAAG,GAAGlC,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA;MACrEsB,CAAA,CAASG,YAAA,CAAa,UAACX,MAAA,CAASE,CAAA,CAAavB,CAAA,EAAC,MAAAqB,MAAA,CAAKE,CAAA,CAAaqB,CAAA,EAAC,MAAAvB,MAAA,CAAKE,CAAA,CAAayD,CAAA,EAAC,OACpFnD,CAAA,CAASG,YAAA,CAAa,GAAC,OAAAX,MAAA,CAAS,MAAME,CAAA,CAAavB,CAAA,EAAC,MAAAqB,MAAA,CAAK,MAAME,CAAA,CAAaqB,CAAA,EAAC,MAAAvB,MAAA,CAAK,MAAME,CAAA,CAAayD,CAAA,SAGrGlF,CAAA,CAAIiI,MAAA,GAAS,aAGbjI,CAAA,CAAIe,SAAA,GAAYgB,CAAA,EAChB/B,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAGxCT,CAAA,CAAIiI,MAAA,GAAS,QAGbhI,CAAA,CAAUgB,OAAA,CAAQ,UAAAhB,CAAA;QACdD,CAAA,CAAIoD,IAAA,IACJpD,CAAA,CAAIqD,SAAA,CAAUpD,CAAA,CAAKG,CAAA,EAAGH,CAAA,CAAKO,CAAA,GAC3BR,CAAA,CAAIsD,MAAA,CAAOrD,CAAA,CAAK+E,QAAA,GAChBhF,CAAA,CAAIyF,IAAA,GAAI,GAAAlE,MAAA,CAAMtB,CAAA,CAAKkE,IAAA,EAAc,aACjCnE,CAAA,CAAIkI,SAAA,GAAY,UAChBlI,CAAA,CAAImI,YAAA,GAAe,UAGnBnI,CAAA,CAAI6B,WAAA,GAAc,SAClB7B,CAAA,CAAIuC,SAAA,GAAY,GAChBvC,CAAA,CAAIoI,UAAA,CAAWnI,CAAA,CAAK6H,KAAA,EAAO,GAAG,IAG9B9H,CAAA,CAAIe,SAAA,GAAY,SAChBf,CAAA,CAAI0F,QAAA,CAASzF,CAAA,CAAK6H,KAAA,EAAO,GAAG,IAC5B9H,CAAA,CAAIuD,OAAA,IAEJtD,CAAA,CAAKO,CAAA,IAAKP,CAAA,CAAK0B,KAAA,EACf1B,CAAA,CAAK+E,QAAA,IAAY/E,CAAA,CAAK8H,aAAA,EAClB9H,CAAA,CAAKO,CAAA,GAAIT,CAAA,CAAOU,MAAA,GAASR,CAAA,CAAKkE,IAAA,KAC9BlE,CAAA,CAAKO,CAAA,IAAKP,CAAA,CAAKkE,IAAA,EACflE,CAAA,CAAKG,CAAA,GAAIC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA,CAExC;MAAA;IAAA,CAER;EAAA;EAEa8H,CAAA,GAAgB,SAAAC,CAACvI,CAAA,EAAQC,CAAA;IAMlC,KALA,IAAMC,CAAA,GAAQ,IACRC,CAAA,GAAY,IACZiC,CAAA,GAAM,IAGHE,CAAA,GAAI,GAAGA,CAAA,GAAI,IAAIA,CAAA,IACpBpC,CAAA,CAAME,IAAA,CAAK;MACPC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BE,MAAA,EAAwB,MAAhBJ,IAAA,CAAKC,MAAA,KAAiB;MAC9BC,KAAA,EAAuB,KAAhBF,IAAA,CAAKC,MAAA,KAAgB;IAAA;IAKpC,KAAK,IAAIqC,CAAA,GAAI,GAAGA,CAAA,GAAI,IAAIA,CAAA,IACpBzC,CAAA,CAAUC,IAAA,CAAK;MACXC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGH,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA;MAC1BC,MAAA,EAAwB,IAAhBL,IAAA,CAAKC,MAAA,KAAe;MAC5BqB,KAAA,EAAuB,KAAhBtB,IAAA,CAAKC,MAAA,KAAiB;MAC7B+F,OAAA,EAAShG,IAAA,CAAKC,MAAA;IAAA;IAKtB,KAAK,IAAIsC,CAAA,GAAI,GAAGA,CAAA,GAAI,KAAKA,CAAA,IACrBT,CAAA,CAAIhC,IAAA,CAAK;MACLC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGH,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA;MAC1BC,MAAA,EAAwB,KAAhBL,IAAA,CAAKC,MAAA,KAAgB;MAC7BqB,KAAA,EAAuB,KAAhBtB,IAAA,CAAKC,MAAA,KAAiB;IAAA;IAIrC,OAAO;MACHN,CAAA,CAAIe,SAAA,GAAY,WAChBf,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAGxCT,CAAA,CAAIe,SAAA,GAAY,WAChBd,CAAA,CAAMgB,OAAA,CAAQ,UAAAhB,CAAA;QACVD,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIoC,MAAA,CAAOnC,CAAA,CAAKG,CAAA,EAAGL,CAAA,CAAOU,MAAA,GAC1BT,CAAA,CAAIsC,MAAA,CAAOrC,CAAA,CAAKG,CAAA,GAAIH,CAAA,CAAKM,KAAA,GAAQ,GAAGR,CAAA,CAAOU,MAAA,GAASR,CAAA,CAAKQ,MAAA,GACzDT,CAAA,CAAIsC,MAAA,CAAOrC,CAAA,CAAKG,CAAA,GAAIH,CAAA,CAAKM,KAAA,GAAQ,GAAGR,CAAA,CAAOU,MAAA,GAASR,CAAA,CAAKQ,MAAA,GACzDT,CAAA,CAAI4D,SAAA,IACJ5D,CAAA,CAAIwB,IAAA,EACR;MAAA,IAGAxB,CAAA,CAAIe,SAAA,GAAY,6BAChBoB,CAAA,CAAIlB,OAAA,CAAQ,UAAAhB,CAAA;QACRD,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAIpB,CAAA,CAASG,CAAA,EAAGH,CAAA,CAASO,CAAA,EAAGP,CAAA,CAASS,MAAA,EAAQ,GAAa,IAAVL,IAAA,CAAKiB,EAAA,GACzDtB,CAAA,CAAIwB,IAAA,IAEJvB,CAAA,CAASG,CAAA,IAAKH,CAAA,CAAS0B,KAAA,EACnB1B,CAAA,CAASG,CAAA,GAAIL,CAAA,CAAOQ,KAAA,GAAQN,CAAA,CAASS,MAAA,KACrCT,CAAA,CAASG,CAAA,IAAKH,CAAA,CAASS,MAAA,CAE/B;MAAA,IAGAR,CAAA,CAAUe,OAAA,CAAQ,UAAAhB,CAAA;QACdD,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAIpB,CAAA,CAAQG,CAAA,EAAGH,CAAA,CAAQO,CAAA,EAAGP,CAAA,CAAQS,MAAA,EAAQ,GAAa,IAAVL,IAAA,CAAKiB,EAAA,GACtDtB,CAAA,CAAIe,SAAA,GAAS,uBAAAQ,MAAA,CAA0BtB,CAAA,CAAQoG,OAAA,EAAU,MACzDrG,CAAA,CAAIwB,IAAA,IAEJvB,CAAA,CAAQG,CAAA,IAAKC,IAAA,CAAKc,GAAA,CAAiB,OAAbuF,IAAA,CAAKC,GAAA,MAAiB1G,CAAA,CAAQ0B,KAAA,EACpD1B,CAAA,CAAQO,CAAA,IAAKH,IAAA,CAAK4C,GAAA,CAAiB,OAAbyD,IAAA,CAAKC,GAAA,MAAiB1G,CAAA,CAAQ0B,KAAA,EACpD1B,CAAA,CAAQoG,OAAA,GAAwC,KAA9BhG,IAAA,CAAKc,GAAA,CAAiB,MAAbuF,IAAA,CAAKC,GAAA,MAAsB,IAElD1G,CAAA,CAAQG,CAAA,GAAI,MAAGH,CAAA,CAAQG,CAAA,GAAIL,CAAA,CAAOQ,KAAA,GAClCN,CAAA,CAAQG,CAAA,GAAIL,CAAA,CAAOQ,KAAA,KAAON,CAAA,CAAQG,CAAA,GAAI,IACtCH,CAAA,CAAQO,CAAA,GAAI,MAAGP,CAAA,CAAQO,CAAA,GAAIT,CAAA,CAAOU,MAAA,GAClCR,CAAA,CAAQO,CAAA,GAAIT,CAAA,CAAOU,MAAA,KAAQR,CAAA,CAAQO,CAAA,GAAI,EAC/C;MAAA;IAAA,CAER;EAAA;EAEa+H,CAAA,GAAqB,SAAAC,CAACzI,CAAA,EAAQC,CAAA;IAIvC,KAHA,IAAMC,CAAA,GAAS,IAGNC,CAAA,GAAI,GAAGA,CAAA,GAFE,GAEaA,CAAA,IAC3BD,CAAA,CAAOE,IAAA,CAAK;MACRC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGH,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA;MAC1B0D,IAAA,EAAsB,KAAhB9D,IAAA,CAAKC,MAAA,KAAgB;MAC3BqB,KAAA,EAAuB,KAAhBtB,IAAA,CAAKC,MAAA,KAAiB;MAC7B+F,OAAA,EAAyB,KAAhBhG,IAAA,CAAKC,MAAA;IAAA;IAItB,OAAO;MACHN,CAAA,CAAIe,SAAA,GAAY,WAChBf,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAExCR,CAAA,CAAOgB,OAAA,CAAQ,UAAAhB,CAAA;QACXD,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIoC,MAAA,CAAOnC,CAAA,CAAMG,CAAA,EAAGH,CAAA,CAAMO,CAAA,GAC1BR,CAAA,CAAIyI,aAAA,CACAxI,CAAA,CAAMG,CAAA,GAAIH,CAAA,CAAMkE,IAAA,GAAO,GAAGlE,CAAA,CAAMO,CAAA,GAAIP,CAAA,CAAMkE,IAAA,GAAO,GACjDlE,CAAA,CAAMG,CAAA,GAAIH,CAAA,CAAMkE,IAAA,GAAO,GAAGlE,CAAA,CAAMO,CAAA,GAAIP,CAAA,CAAMkE,IAAA,GAAO,GACjDlE,CAAA,CAAMG,CAAA,EAAGH,CAAA,CAAMO,CAAA,GAAIP,CAAA,CAAMkE,IAAA,GAE7BnE,CAAA,CAAIyI,aAAA,CACAxI,CAAA,CAAMG,CAAA,GAAIH,CAAA,CAAMkE,IAAA,GAAO,GAAGlE,CAAA,CAAMO,CAAA,GAAIP,CAAA,CAAMkE,IAAA,GAAO,GACjDlE,CAAA,CAAMG,CAAA,GAAIH,CAAA,CAAMkE,IAAA,GAAO,GAAGlE,CAAA,CAAMO,CAAA,GAAIP,CAAA,CAAMkE,IAAA,GAAO,GACjDlE,CAAA,CAAMG,CAAA,EAAGH,CAAA,CAAMO,CAAA;QAGnB,IAAMN,CAAA,GAAWF,CAAA,CAAIgE,oBAAA,CACjB/D,CAAA,CAAMG,CAAA,EAAGH,CAAA,CAAMO,CAAA,EAAG,GAClBP,CAAA,CAAMG,CAAA,EAAGH,CAAA,CAAMO,CAAA,EAAGP,CAAA,CAAMkE,IAAA;QAE5BjE,CAAA,CAASgC,YAAA,CAAa,GAAC,uBAAAX,MAAA,CAAyBtB,CAAA,CAAMoG,OAAA,EAAO,OAC7DnG,CAAA,CAASgC,YAAA,CAAa,GAAG,2BAEzBlC,CAAA,CAAIe,SAAA,GAAYb,CAAA,EAChBF,CAAA,CAAIwB,IAAA,IAEJvB,CAAA,CAAMO,CAAA,IAAKP,CAAA,CAAM0B,KAAA,EACjB1B,CAAA,CAAMoG,OAAA,GAAyC,KAA/BhG,IAAA,CAAKc,GAAA,CAAiB,OAAbuF,IAAA,CAAKC,GAAA,MAAuB,IAEjD1G,CAAA,CAAMO,CAAA,GAAIP,CAAA,CAAMkE,IAAA,GAAO,MACvBlE,CAAA,CAAMO,CAAA,GAAIT,CAAA,CAAOU,MAAA,GAASR,CAAA,CAAMkE,IAAA,EAChClE,CAAA,CAAMG,CAAA,GAAIC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA,CAEzC;MAAA;IAAA,CAER;EAAA;EAEamI,CAAA,GAAmB,SAAAC,CAAC5I,CAAA,EAAQC,CAAA;IAIrC,KAHA,IAAMC,CAAA,GAAO,IAGJC,CAAA,GAAI,GAAGA,CAAA,GAFA,IAEaA,CAAA,IACzBD,CAAA,CAAKE,IAAA,CAAK;MACNC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGH,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA;MAC1B0D,IAAA,EAAsB,MAAhB9D,IAAA,CAAKC,MAAA,KAAiB;MAC5B0E,QAAA,EAAU3E,IAAA,CAAKC,MAAA,KAAWD,IAAA,CAAKiB,EAAA,GAAK;IAAA;IA8B5C,OAAO;MACHtB,CAAA,CAAIiF,SAAA,CAAU,GAAG,GAAGlF,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAEzCR,CAAA,CAAKgB,OAAA,CAAQ,UAAAlB,CAAA;QAAA,CA7BD,UAACA,CAAA,EAAGE,CAAA,EAAGC,CAAA,EAAMiC,CAAA;UACzBnC,CAAA,CAAIoD,IAAA,IACJpD,CAAA,CAAIqD,SAAA,CAAUtD,CAAA,EAAGE,CAAA,GACjBD,CAAA,CAAIsD,MAAA,CAAOnB,CAAA,GAEXnC,CAAA,CAAIoB,SAAA;UACJ,KAAK,IAAIiB,CAAA,GAAI,GAAGA,CAAA,GAAI,GAAGA,CAAA,IAAK;YACxB,IAAMM,CAAA,GAAmB,IAAVtC,IAAA,CAAKiB,EAAA,GAAS,IAAKe,CAAA;YAClCrC,CAAA,CAAIoC,MAAA,CAAO,GAAG,IACdpC,CAAA,CAAIsC,MAAA,CAAOjC,IAAA,CAAK4C,GAAA,CAAIN,CAAA,IAASzC,CAAA,EAAMG,IAAA,CAAKc,GAAA,CAAIwB,CAAA,IAASzC,CAAA,CACzD;UAAA;UAEA,KAAK,IAAI0C,CAAA,GAAI1C,CAAA,GAAO,GAAG0C,CAAA,GAAI1C,CAAA,EAAM0C,CAAA,IAAK1C,CAAA,GAAO,GAAG;YAC5CF,CAAA,CAAIoC,MAAA,CAAOQ,CAAA,EAAG;YACd,KAAK,IAAImD,CAAA,GAAI,GAAGA,CAAA,GAAI,GAAGA,CAAA,IAAK;cACxB,IAAMlG,CAAA,GAAmB,IAAVQ,IAAA,CAAKiB,EAAA,GAAS,IAAKyE,CAAA;cAClC/F,CAAA,CAAIsC,MAAA,CAAOjC,IAAA,CAAK4C,GAAA,CAAIpD,CAAA,IAAS+C,CAAA,EAAGvC,IAAA,CAAKc,GAAA,CAAItB,CAAA,IAAS+C,CAAA,CACtD;YAAA;YACA5C,CAAA,CAAI4D,SAAA,EACR;UAAA;UAEA5D,CAAA,CAAI6B,WAAA,GAAc,4BAClB7B,CAAA,CAAI8B,MAAA,IACJ9B,CAAA,CAAIuD,OAAA;QAAA,CAOA,CAAQxD,CAAA,CAAIK,CAAA,EAAGL,CAAA,CAAIS,CAAA,EAAGT,CAAA,CAAIoE,IAAA,EAAMpE,CAAA,CAAIiF,QAAA,CACxC;MAAA;IAAA,CAER;EAAA;EAIa4D,CAAA,GAAkB,SAAAC,CAAC9I,CAAA,EAAQC,CAAA;IAMpC,KALA,IAAMC,CAAA,GAAS,IACTC,CAAA,GAAU,IACViC,CAAA,GAAM,IAGHE,CAAA,GAAI,GAAGA,CAAA,GAAI,IAAIA,CAAA,IACpBpC,CAAA,CAAOE,IAAA,CAAK;MACRC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGT,CAAA,CAAOU,MAAA,GAAyB,MAAhBJ,IAAA,CAAKC,MAAA,KAAiB;MACzCC,KAAA,EAAuB,KAAhBF,IAAA,CAAKC,MAAA,KAAgB;MAC5BG,MAAA,EAAwB,KAAhBJ,IAAA,CAAKC,MAAA,KAAgB;IAAA;IAKrC,KAAK,IAAIqC,CAAA,GAAI,GAAGA,CAAA,GAAI,IAAIA,CAAA,IACpBzC,CAAA,CAAQC,IAAA,CAAK;MACTC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGT,CAAA,CAAOU,MAAA;MACVkB,KAAA,EAAuB,KAAhBtB,IAAA,CAAKC,MAAA,KAAiB;MAC7B6D,IAAA,EAAsB,KAAhB9D,IAAA,CAAKC,MAAA,KAAgB;IAAA;IAKnC,KAAK,IAAIsC,CAAA,GAAI,GAAGA,CAAA,GAAI,IAAIA,CAAA,IACpBT,CAAA,CAAIhC,IAAA,CAAK;MACLC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGH,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA;MAC1BC,MAAA,EAAwB,MAAhBL,IAAA,CAAKC,MAAA,KAAiB;MAC9BqB,KAAA,EAAuB,KAAhBtB,IAAA,CAAKC,MAAA,KAAiB;IAAA;IAIrC,OAAO;MAEH,IAAM+B,CAAA,GAAWrC,CAAA,CAAIiC,oBAAA,CAAqB,GAAG,GAAG,GAAGlC,CAAA,CAAOU,MAAA;MAC1D4B,CAAA,CAASH,YAAA,CAAa,GAAG,YACzBG,CAAA,CAASH,YAAA,CAAa,GAAG,YACzBlC,CAAA,CAAIe,SAAA,GAAYsB,CAAA,EAChBrC,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAGxCT,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAmB,KAAftB,CAAA,CAAOQ,KAAA,EAA6B,KAAhBR,CAAA,CAAOU,MAAA,EAAc,IAAI,GAAa,IAAVJ,IAAA,CAAKiB,EAAA,GAC7DtB,CAAA,CAAIe,SAAA,GAAY,4BAChBf,CAAA,CAAIwB,IAAA,IAGJxB,CAAA,CAAIe,SAAA,GAAY,QAChBd,CAAA,CAAOgB,OAAA,CAAQ,UAAAlB,CAAA;QACXC,CAAA,CAAIgB,QAAA,CAASjB,CAAA,CAAMK,CAAA,EAAGL,CAAA,CAAMS,CAAA,EAAGT,CAAA,CAAMQ,KAAA,EAAOR,CAAA,CAAMU,MAAA,GAClDT,CAAA,CAAIe,SAAA,GAAY,QAChBf,CAAA,CAAIgB,QAAA,CAASjB,CAAA,CAAMK,CAAA,GAAkB,KAAdL,CAAA,CAAMQ,KAAA,EAAaR,CAAA,CAAMS,CAAA,EAAiB,KAAdT,CAAA,CAAMQ,KAAA,EAA4B,KAAfR,CAAA,CAAMU,MAAA,CAChF;MAAA,IAGAP,CAAA,CAAQe,OAAA,CAAQ,UAAAhB,CAAA;QACZD,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAIpB,CAAA,CAAOG,CAAA,EAAGH,CAAA,CAAOO,CAAA,GAAIP,CAAA,CAAOkE,IAAA,EAAoB,KAAdlE,CAAA,CAAOkE,IAAA,EAAY,GAAa,IAAV9D,IAAA,CAAKiB,EAAA,GACrEtB,CAAA,CAAIe,SAAA,GAAY,QAChBf,CAAA,CAAIwB,IAAA,IAEJxB,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIoC,MAAA,CAAOnC,CAAA,CAAOG,CAAA,EAAGH,CAAA,CAAOO,CAAA,GAAIP,CAAA,CAAOkE,IAAA,GACvCnE,CAAA,CAAIsC,MAAA,CAAOrC,CAAA,CAAOG,CAAA,GAAkB,KAAdH,CAAA,CAAOkE,IAAA,EAAYlE,CAAA,CAAOO,CAAA,GAChDR,CAAA,CAAIsC,MAAA,CAAOrC,CAAA,CAAOG,CAAA,GAAkB,KAAdH,CAAA,CAAOkE,IAAA,EAAYlE,CAAA,CAAOO,CAAA,GAChDR,CAAA,CAAI4D,SAAA,IACJ5D,CAAA,CAAIe,SAAA,GAAY,QAChBf,CAAA,CAAIwB,IAAA,IAEJvB,CAAA,CAAOO,CAAA,IAAKP,CAAA,CAAO0B,KAAA,EACf1B,CAAA,CAAOO,CAAA,GAAoB,KAAhBT,CAAA,CAAOU,MAAA,KAClBR,CAAA,CAAOO,CAAA,GAAIT,CAAA,CAAOU,MAAA,EAClBR,CAAA,CAAOG,CAAA,GAAIC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA,CAE1C;MAAA,IAGAP,CAAA,CAAIe,SAAA,GAAY,6BAChBoB,CAAA,CAAIlB,OAAA,CAAQ,UAAAhB,CAAA;QACRD,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAIpB,CAAA,CAASG,CAAA,EAAGH,CAAA,CAASO,CAAA,EAAGP,CAAA,CAASS,MAAA,EAAQ,GAAa,IAAVL,IAAA,CAAKiB,EAAA,GACzDtB,CAAA,CAAIwB,IAAA,IAEJvB,CAAA,CAASG,CAAA,IAAKH,CAAA,CAAS0B,KAAA,EACnB1B,CAAA,CAASG,CAAA,GAAIL,CAAA,CAAOQ,KAAA,GAAQN,CAAA,CAASS,MAAA,KACrCT,CAAA,CAASG,CAAA,IAAKH,CAAA,CAASS,MAAA,CAE/B;MAAA;IAAA,CAER;EAAA;EAEaoI,CAAA,GAAY,SAAAC,CAAChJ,CAAA,EAAQC,CAAA;IAI9B,KAHA,IAAMC,CAAA,GAAQ,IACRC,CAAA,GAAS,IAENiC,CAAA,GAAI,GAAGA,CAAA,GAAI,KAAKA,CAAA,IACrBlC,CAAA,CAAME,IAAA,CAAK;MACPC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGH,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA;MAC1BiC,MAAA,EAAwB,KAAhBrC,IAAA,CAAKC,MAAA,KAAgB;MAC7BqB,KAAA,EAAuB,IAAhBtB,IAAA,CAAKC,MAAA,KAAe;IAAA;IAInC,OAAO;MACHN,CAAA,CAAIe,SAAA,GAAY,uBAChBf,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAGxCT,CAAA,CAAI6B,WAAA,GAAc,QAClB7B,CAAA,CAAIuC,SAAA,GAAY,GAChBtC,CAAA,CAAMgB,OAAA,CAAQ,UAAAhB,CAAA;QACVD,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIoC,MAAA,CAAOnC,CAAA,CAAKG,CAAA,EAAGH,CAAA,CAAKO,CAAA,GACxBR,CAAA,CAAIsC,MAAA,CAAOrC,CAAA,CAAKG,CAAA,EAAGH,CAAA,CAAKO,CAAA,GAAIP,CAAA,CAAKyC,MAAA,GACjC1C,CAAA,CAAI8B,MAAA,IAEJ7B,CAAA,CAAKO,CAAA,IAAKP,CAAA,CAAK0B,KAAA,EAEX1B,CAAA,CAAKO,CAAA,GAAIT,CAAA,CAAOU,MAAA,KAChBR,CAAA,CAAKO,CAAA,GAAI,GACTP,CAAA,CAAKG,CAAA,GAAIC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA,EAGhCL,CAAA,CAAOC,IAAA,CAAK;UACRC,CAAA,EAAGH,CAAA,CAAKG,CAAA;UACRI,CAAA,EAAGT,CAAA,CAAOU,MAAA;UACV0D,IAAA,EAAsB,IAAhB9D,IAAA,CAAKC,MAAA,KAAe;UAC1B+F,OAAA,EAAS;QAAA,GAGrB;MAAA,IAGAnG,CAAA,CAAOe,OAAA,CAAQ,UAAClB,CAAA,EAAOE,CAAA;QACnBD,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAItB,CAAA,CAAMK,CAAA,EAAGL,CAAA,CAAMS,CAAA,EAAGT,CAAA,CAAMoE,IAAA,EAAM,GAAa,IAAV9D,IAAA,CAAKiB,EAAA,GAC9CtB,CAAA,CAAIe,SAAA,GAAS,mBAAAQ,MAAA,CAAsBxB,CAAA,CAAMsG,OAAA,EAAU,MACnDrG,CAAA,CAAIwB,IAAA,IAEJzB,CAAA,CAAMsG,OAAA,IAAW,MACbtG,CAAA,CAAMsG,OAAA,IAAW,KACjBnG,CAAA,CAAOwE,MAAA,CAAOzE,CAAA,EAAO,EAE7B;MAAA;IAAA,CAER;EAAA;EAEa+I,CAAA,GAAiB,SAAAC,CAAClJ,CAAA,EAAQC,CAAA;IAInC,KAHA,IAAMC,CAAA,GAAO,IACPC,CAAA,GAAW,IAERiC,CAAA,GAAI,GAAGA,CAAA,GAAI,IAAIA,CAAA,IACpBlC,CAAA,CAAKE,IAAA,CAAK;MACNC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGH,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU,MAAA;MAC1B0D,IAAA,EAAsB,IAAhB9D,IAAA,CAAKC,MAAA,KAAe;MAC1B8D,MAAA,EAAwB,IAAhB/D,IAAA,CAAKC,MAAA,KAAe;MAC5B+D,MAAA,EAAwB,IAAhBhE,IAAA,CAAKC,MAAA,KAAe;IAAA;IAIpC,KAAK,IAAI+B,CAAA,GAAI,GAAGA,CAAA,GAAI,IAAIA,CAAA,IACpBnC,CAAA,CAASC,IAAA,CAAK;MACVC,CAAA,EAAGC,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOQ,KAAA;MAC1BC,CAAA,EAAGH,IAAA,CAAKC,MAAA,KAAWP,CAAA,CAAOU;IAAA;IAIlC,OAAO;MACHT,CAAA,CAAIe,SAAA,GAAY,sBAChBf,CAAA,CAAIgB,QAAA,CAAS,GAAG,GAAGjB,CAAA,CAAOQ,KAAA,EAAOR,CAAA,CAAOU,MAAA,GAGxCT,CAAA,CAAI6B,WAAA,GAAc,4BAClB7B,CAAA,CAAIoB,SAAA,IACJlB,CAAA,CAASe,OAAA,CAAQ,UAAClB,CAAA,EAAME,CAAA;QACpBC,CAAA,CAASgJ,KAAA,CAAMjJ,CAAA,GAAQ,GAAGgB,OAAA,CAAQ,UAAAhB,CAAA;UAC9BD,CAAA,CAAIoC,MAAA,CAAOrC,CAAA,CAAKK,CAAA,EAAGL,CAAA,CAAKS,CAAA,GACxBR,CAAA,CAAIsC,MAAA,CAAOrC,CAAA,CAAUG,CAAA,EAAGH,CAAA,CAAUO,CAAA,CACtC;QAAA,EACJ;MAAA,IACAR,CAAA,CAAI8B,MAAA,IAGJ9B,CAAA,CAAIe,SAAA,GAAY,QAChBd,CAAA,CAAKgB,OAAA,CAAQ,UAAAhB,CAAA;QACTD,CAAA,CAAIoB,SAAA,IACJpB,CAAA,CAAIqB,GAAA,CAAIpB,CAAA,CAAIG,CAAA,EAAGH,CAAA,CAAIO,CAAA,EAAGP,CAAA,CAAIkE,IAAA,EAAM,GAAa,IAAV9D,IAAA,CAAKiB,EAAA,GACxCtB,CAAA,CAAIwB,IAAA,IAEJvB,CAAA,CAAIG,CAAA,IAAKH,CAAA,CAAImE,MAAA,EACbnE,CAAA,CAAIO,CAAA,IAAKP,CAAA,CAAIoE,MAAA,GAETpE,CAAA,CAAIG,CAAA,GAAI,KAAKH,CAAA,CAAIG,CAAA,GAAIL,CAAA,CAAOQ,KAAA,MAAON,CAAA,CAAImE,MAAA,KAAW,KAClDnE,CAAA,CAAIO,CAAA,GAAI,KAAKP,CAAA,CAAIO,CAAA,GAAIT,CAAA,CAAOU,MAAA,MAAQR,CAAA,CAAIoE,MAAA,KAAW,IAGnDhE,IAAA,CAAKC,MAAA,KAAW,QAChBL,CAAA,CAAImE,MAAA,GAAyB,IAAhB/D,IAAA,CAAKC,MAAA,KAAe,GACjCL,CAAA,CAAIoE,MAAA,GAAyB,IAAhBhE,IAAA,CAAKC,MAAA,KAAe,EAEzC;MAAA;IAAA,CAER;EAAA;EC7kDM6I,CAAA,GAAqB,SAAAC,CAAHjH,CAAA;IAAkF,IAA5EE,CAAA,GAAaF,CAAA,CAAbkH,aAAA;MAAa1G,CAAA,GAAAR,CAAA,CAAEmH,iBAAA;MAAAvD,CAAA,QAAoB,MAAHpD,CAAA,GAAG,oBAAiBA,CAAA;MAAAwG,CAAA,GAAAhH,CAAA,CAAEoH,GAAA;MAAAC,CAAA,QAAM,MAAHL,CAAA,GAAG,KAAEA,CAAA;MAAEM,CAAA,GAAKtH,CAAA,CAALuH,KAAA;MACpFC,CAAA,GAAY3J,CAAA,CAAO;MACnB4J,CAAA,GAAe5J,CAAA,CAAO;MAEtB6J,CAAA,GAAc5J,CAAA,CAAY;QAC5B,IAAMF,CAAA,GAAS4J,CAAA,CAAUG,OAAA;UACnB9J,CAAA,GAAMD,CAAA,CAAOgK,UAAA,CAAW;QAC9BhK,CAAA,CAAOQ,KAAA,GAAQyJ,MAAA,CAAOC,UAAA,EACtBlK,CAAA,CAAOU,MAAA,GAASuJ,MAAA,CAAOE,WAAA;QAEvB,IAAMjK,CAAA,GAAa;YACfH,WAAA,EAAAD,CAAA;YAAa6B,eAAA,EAAAD,CAAA;YAAiBO,YAAA,EAAAD,CAAA;YAAcU,eAAA,EAAAD,CAAA;YAAiBO,YAAA,EAAAD,CAAA;YAC7DU,YAAA,EAAAhD,CAAA;YAAcsE,eAAA,EAAAD,CAAA;YAAiBM,SAAA,EAAAD,CAAA;YAAWM,UAAA,EAAAD,CAAA;YAAYZ,YAAA,EAAAvE,CAAA;YACtDmE,aAAA,EAAAD,CAAA;YAAeJ,UAAA,EAAAD,CAAA;YAAYH,SAAA,EAAAD,CAAA;YAAWH,cAAA,EAAAD,CAAA;YAAgBwC,UAAA,EAAAD,CAAA;YACtDF,aAAA,EAAAD,CAAA;YAAeD,QAAA,EAAAD,CAAA;YAAUS,QAAA,EAAAD,CAAA;YAAUwB,aAAA,EAAAD,CAAA;YAAeb,eAAA,EAAAD,CAAA;YAClDL,aAAA,EAAAD,CAAA;YAAeW,YAAA,EAAAD,CAAA;YAAca,iBAAA,EAAAD,CAAA;YAAoBU,aAAA,EAAAD,CAAA;YACjDG,kBAAA,EAAAD,CAAA;YACAI,gBAAA,EAAAD,CAAA;YACAG,eAAA,EAAAD,CAAA;YACAG,SAAA,EAAAD,CAAA;YACAG,cAAA,EAAAD;UAAA;UAGA9I,CAAA,GAAYD,CAAA,CAAWoC,CAAA;QAO3B,OALKnC,CAAA,KACDiK,OAAA,CAAQC,IAAA,CAAI,cAAA7I,MAAA,CAAec,CAAA,8CAC3BnC,CAAA,GAAYD,CAAA,CAAW8F,CAAA,KAAsB9F,CAAA,CAAW6E,eAAA,GAGrD5E,CAAA,CAAUH,CAAA,EAAQC,CAAA,CAC7B;MAAA,GAAG,CAACqC,CAAA,EAAe0D,CAAA;IAyCnB,OAvCA7F,CAAA,CAAU;MACN,IACUH,CAAA,EACFC,CAAA,EACEC,CAAA;MAFAF,CAAA,GAAY8J,CAAA,IACd7J,CAAA,GAAW,GACTC,CAAA,GAAgB,MAAOuJ,CAAA,EAY7BI,CAAA,CAAaE,OAAA,GAAUO,qBAAA,CAVV,SAAPnK,EAAQiC,CAAA;QACVyH,CAAA,CAAaE,OAAA,GAAUO,qBAAA,CAAsBnK,CAAA;QAE7C,IAAMmC,CAAA,GAAYF,CAAA,GAAcnC,CAAA;QAC5BqC,CAAA,IAAapC,CAAA,KACbD,CAAA,GAAWmC,CAAA,GAAeE,CAAA,GAAYpC,CAAA,EACtCF,CAAA;MAAA;MASZ,IAAMG,CAAA,GAAe,SAAAoK,CAAA;QACbX,CAAA,CAAUG,OAAA,KACVH,CAAA,CAAUG,OAAA,CAAQvJ,KAAA,GAAQyJ,MAAA,CAAOC,UAAA,EACjCN,CAAA,CAAUG,OAAA,CAAQrJ,MAAA,GAASuJ,MAAA,CAAOE,WAAA,EAClCL,CAAA;MAAA;MAMR,OAFAG,MAAA,CAAOO,gBAAA,CAAiB,UAAUrK,CAAA,GAE3B;QACC0J,CAAA,CAAaE,OAAA,IACbU,oBAAA,CAAqBZ,CAAA,CAAaE,OAAA,GAEtCE,MAAA,CAAOS,mBAAA,CAAoB,UAAUvK,CAAA;MAAA,CAE7C;IAAA,GAAG,CAACsJ,CAAA,EAAKK,CAAA,IAGL9J,CAAA,CAAA2K,aAAA;MACIC,GAAA,EAAKhB,CAAA;MACLD,KAAA,EAAK9G,CAAA;QACDgI,QAAA,EAAU;QACVC,GAAA,EAAK;QACLC,IAAA,EAAM;QACNvK,KAAA,EAAO;QACPE,MAAA,EAAQ;QACRsK,MAAA,GAAS;MAAA,GACNtB,CAAA;IAAA,EAInB;EAAA;AAAA,SAAAN,CAAA,IAAAC,kBAAA,EAAA3F,CAAA,IAAAC,cAAA,EAAAoF,CAAA,IAAAC,SAAA,EAAA9E,CAAA,IAAAC,UAAA,EAAA8E,CAAA,IAAAC,cAAA,EAAA3E,CAAA,IAAAC,aAAA,EAAAqD,CAAA,IAAAC,iBAAA,EAAA3C,CAAA,IAAAC,SAAA,EAAA1D,CAAA,IAAAC,eAAA,EAAAoB,CAAA,IAAAC,YAAA,EAAA8B,CAAA,IAAAC,eAAA,EAAAyD,CAAA,IAAAC,kBAAA,EAAAzG,CAAA,IAAAC,YAAA,EAAAqG,CAAA,IAAAC,aAAA,EAAA/C,CAAA,IAAAC,UAAA,EAAA3B,CAAA,IAAAC,SAAA,EAAAtB,CAAA,IAAAC,eAAA,EAAArC,CAAA,IAAAuE,YAAA,EAAAnE,CAAA,IAAAgD,YAAA,EAAAkF,CAAA,IAAAC,gBAAA,EAAA9I,CAAA,IAAAC,WAAA,EAAA8I,CAAA,IAAAC,eAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}